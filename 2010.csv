Timestamp,How long have you been using Haskell?,How would you characterize your use of Haskell today?,What is the status of Haskell in your workplace?,In which domain(s) are you using Haskell?,Which environment(s) do you use to work with Haskell?,"What language did you use just prior to adopting Haskell â€“ or, if Haskell is not your primary language now, what is that primary language?",What do you think is Haskell's most glaring weakness / blind spot / problem?,General Comments?,"If Haskell disappeared tomorrow, what language(s) might you use as a ""replacement""?"
8/2/2010 15:43:08,3 years,"I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,Compilers / interpreters,"vi, Command line REPL",C#,,,"C#, F#, Javascript"
8/2/2010 15:43:11,5+ years,"I use it for serious ""hobby"" projects.","I'm lobbying to have it ""endorsed"".","Network programming, Open source projects, Web development",Emacs / haskell-mode,Java,"High quality libraries, particular for network/web related applications. The documentation for many libraries could also be better.",,"Clojure, Scala"
8/2/2010 15:43:26,2 years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,Gaming,"Emacs / haskell-mode, Command line REPL",Common Lisp,,,"C, Common Lisp, O'Caml"
8/2/2010 15:43:45,2 years,I'm just tinkering.,,,vi,Java,,,Scala
8/2/2010 15:44:06,1 year,"I use it for serious ""hobby"" projects.",,"Math / data analysis, Open source projects, Compilers / interpreters","vi, Command line REPL, TextMate",Ruby,The standard libraries and possibly lack of associated class/contexts.,,"O'Caml, Agda"
8/2/2010 15:44:15,5+ years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.","Compilers / interpreters, hardware simulation","Emacs / haskell-mode, Command line REPL",C,User Interface libraries - safe and easy to use.,,"C, Agda2"
8/2/2010 15:44:35,5+ years,I use it at work.,"It's ""endorsed"" and used openly and proudly.",,Emacs / haskell-mode,Erlang,"Lack of a standard, easy to use, declarative GUI library.",Thanks for doing this. I look forward to reading the results.,"Erlang, F#, O'Caml"
8/2/2010 15:44:47,3 years,"I use it for serious ""hobby"" projects.",,"Network programming, Open source projects, Thick clients: GTK etc, Compilers / interpreters","vi, Command line REPL",C,,,O'Caml
8/2/2010 15:44:56,2 years,I'm just tinkering.,"I'm lobbying to have it ""endorsed"".",Math / data analysis,vi,C++,Pure.  Mathematical. ,"I wish there was more buzz about it so I could use it at work!

A nice web frame work would be nice.","C++, Erlang"
8/2/2010 15:45:38,1 year,I'm just tinkering.,I don't use Haskell at work.,"Network programming, Open source projects",vi,Cannot choose single primary.,Lack of good community,,"Clojure, Common Lisp, Erlang, F#, Scheme"
8/2/2010 15:47:10,1 year,I'm just tinkering.,I don't use Haskell at work.,Compilers / interpreters,Eclipse / EclispeFP,Java,,,Scala
8/2/2010 15:47:31,2 years,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies.",,"""NoSQL"" usage, Math / data analysis, Network programming, Open source projects, Web development, Compilers / interpreters","Emacs / haskell-mode, Command line REPL",Python,Reflection,,"Clojure, F#, Lua, Python"
8/2/2010 15:47:51,5+ years,I use it for my studies.,"It's ""endorsed"" and used openly and proudly.",Network programming,Emacs / haskell-mode,Objective C,Difficult to use with a professional GUI like XCode,Type system is great,Objective C
8/2/2010 15:47:56,2 years,"I'm just tinkering., I use it for my studies., I use it at work.",It's used secretly; I'd never be able to use it.,"Web scrapping, code generation ",Emacs / haskell-mode,Java,It's very hard to reason about the efficiency of the code. Writing efficient code is in some way like a black art.,,"Clojure, F#, Scala"
8/2/2010 15:48:01,2 years,I'm just tinkering.,It's used secretly; I'd never be able to use it.,Math / data analysis,"vi, Command line REPL",Perl,Lack of value-parametrized types,,Perl
8/2/2010 15:48:18,5+ years,"I'm just tinkering., I use it for serious ""hobby"" projects.",,"Math / data analysis, Network programming, Open source projects, System administration, Web development, Embedded, Compilers / interpreters","Emacs / haskell-mode, Command line REPL, vim",Ruby,Library availability and quality is spotty. Performance is hard to reason about though usually good.,,"Clojure, Erlang, Factor, Javascript, O'Caml, Python, Scala, Scheme"
8/2/2010 15:48:35,Months,I'm just tinkering.,I don't use Haskell at work.,"Gaming, Graphics / art, Compilers / interpreters","Leksah, Command line REPL",C++,,,"Erlang, Scheme"
8/2/2010 15:48:35,5+ years,I'm just tinkering.,It's used secretly; I'd never be able to use it.,Compilers / interpreters,,SML,Laziness as the default,,O'Caml
8/2/2010 15:48:46,Months,"I use it for serious ""hobby"" projects.","I'm lobbying to have it ""endorsed"".",Web development,vi,Ruby,"can we please have some string interpolation? eg, ""some string with an #{emedded} value"" where embedded is some expression that evaluates to a string.

also, simple meta-programming / macros please.",,"Clojure, Erlang, F#, Scala"
8/2/2010 15:49:54,2 years,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","I'm lobbying to have it ""endorsed"".","Math / data analysis, Bioinformatics","Emacs / haskell-mode, Command line REPL",Python,"Single compiler universe.  Although GHC is a great compiler, we need more diversity.  It is great to see JHC, LHC and UHC coming to the scene, but they're still too immature.","Haskell is a fine language that today, right now, I do not want to replace for any other one.  I wonder what will be my next language of choice, and when will that happen.

Cheers!","C#, Erlang"
8/2/2010 15:49:55,1 year,"I'm just tinkering., I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Commercial products, Network programming, Open source projects, RDBMS programming, System administration, Thick clients: GTK etc","vi, Command line REPL",Ruby,"Documentation, libraries, branding, marketing, hype.",,"C, Java, Ruby, shell"
8/2/2010 15:50:39,1 year,"I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"Graphics / art, Math / data analysis, Compilers / interpreters",Emacs / haskell-mode,C#,step learning curve :),,"F#, O'Caml, Scala, Scheme"
8/2/2010 15:52:22,3 years,"I'm just tinkering., I use it for my studies.",I don't use Haskell at work.,"Math / data analysis, Open source projects, Compilers / interpreters",Emacs / haskell-mode,C#,The learning curve.,,"Common Lisp, Erlang, F#, Scala"
8/2/2010 15:52:33,3 years,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"Graphics / art, Math / data analysis, Network programming, Thick clients: GTK etc, Compilers / interpreters",vi,C++,"I'd say that unintuitive memory performance, but that's inherit problem to all lazy languages.
However, few that I can think of are:
* exceptionally poor backwards compatibility of libraries,
* non-standard language features that are almost compulsory to use.",,"O'Caml, Agda"
8/2/2010 15:52:46,Months,I'm just tinkering.,I don't use Haskell at work.,"Gaming, Web development",Emacs / haskell-mode,Java,,,"Clojure, O'Caml"
8/2/2010 15:53:12,1 year,"I use it for serious ""hobby"" projects., I use it for my studies.",,"Math / data analysis, Network programming, Open source projects",vi,Python,"It's young age.
Breaking of packages on Hackage.",,Go
8/2/2010 15:54:24,5+ years,I use it at work.,"It's ""endorsed"" and used openly and proudly.","Open source projects, Compilers / interpreters",TextMate / Haskell bundle,C,"Apart from then Haskell Platform, software installation is a pain. Cabal install is bearable, if painful, for developers, but it is unacceptable for end users.",,O'Caml
8/2/2010 15:54:29,5+ years,"I use it for serious ""hobby"" projects.",It's used secretly; I'd never be able to use it.,"Math / data analysis, Network programming, Open source projects, System administration","vi, Command line REPL",C#,,,"F#, O'Caml, Python, Ruby"
8/2/2010 15:55:25,2 years,"I'm just tinkering., I use it for serious ""hobby"" projects.","I'm lobbying to have it ""endorsed"".","Math / data analysis, Web development, Compilers / interpreters","Command line REPL, TextMate",Javascript,"There's almost no indication of package quality on Hackage.

This is partly caused by the problem that the management of the online presence of Haskell as a whole seems to be limited. Tasks are taken up by people who don't have time for them.",,"Clojure, F#, Scala, Agda"
8/2/2010 15:55:46,5+ years,I'm just tinkering.,I don't use Haskell at work.,Graphics / art,Notepad++,C++,"Low-level performance (cache alignments, unboxing, etc., and general optimization stuff.)",,F#
8/2/2010 15:55:48,3 years,"I use it for serious ""hobby"" projects., I use it at work.","It's ""endorsed"" and used openly and proudly.","Math / data analysis, Web development, Finance","vi, Command line REPL",Java,"I think Haskell is maturing quite nicely, however I occasionally run into problems in small niches where it seems progress is surprisingly lacking compared to the rest of the language.  The example at the top of my head is database support.  We're using HaskellDB + HDBC at work, and have encountered several problems that seem like glaring holes.

Haskell's libraries are quite good, but I think the language could really stand to have a better core API.  This is something that I think Java did very well.  The Java API provides a huge number of important libraries including GUI support.  Since it's shipped with Java and the defacto standard it provides a much more reliable platform to build on.  I realize the Haskell Platform is our attempt to solve this problem.  However, because it's built on hackage, which has all the packages anyway, you don't really feel the distinction between official Haskell Platform packages and others that are less accepted.  Also the issue of manpower for engineering still somewhat limits Haskell in how well it can compete with the Java API.",,"Clojure, Erlang, Go, O'Caml, Scala, Scheme"
8/2/2010 15:56:03,4 years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.",It's used secretly; I'd never be able to use it.,"Math / data analysis, Finance, Compilers / interpreters","vi, Leksah, Command line REPL",C++,"There is a ""black box"" inheritance problem with the way class hierarchies are constructed. If you make a deeper inheritance hierarchy you have to specify all the superclass methods each time. This is somewhat intrinsic to the way classes are handled by Haskell, and makes deeper, more pedantic hierarchies harder to write.",,"Erlang, F#, Scala"
8/2/2010 15:56:03,5+ years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.","Commercial products, Network programming, Open source projects, RDBMS programming, System administration, Web development, Compilers / interpreters","vi, Command line REPL",Javascript,"There are a lot of packages that have lots of small problems like:
  - Lack of proper unicode support.
  - Dependencies that are too weak or too strict.
  - Opaque constructors that lack instances.
  - etc.

All these problems are easy to fix but require a package fork that severely breaks automated build processes. This really troubles us a lot when using Haskell in our company. 

Haskell as a language is really great, the library environment sometimes makes us cry.",,"F#, Javascript"
8/2/2010 15:56:08,Weeks,I use it at work.,"It's ""endorsed"" and used openly and proudly.","""NoSQL"" usage, Commercial services, Math / data analysis",vi,Python,Not obvious how to call Haskell from other languages (without going through C).,"Excited and optimistic about the language, its future, and what appears to be a great community.",Clojure
8/2/2010 15:57:09,1 year,"I'm just tinkering., I use it for serious ""hobby"" projects.","I'm lobbying to have it ""endorsed"".","Graphics / art, Open source projects, RDBMS programming, Web development","vi, Command line REPL, SubEthaEdit",C++,"- Development environment integration is lacking (Xcode, Visual Studio, and/or Eclipse)
- GUI integration, both native (Cocoa, Win32) and cross platform (GTK, Qt, Wx, etc.) Current offerings in this area are still incomplete, difficult to install, and not well integrated into the Haskell paradigm
- Frameworks for web development are still developing and need richer, more mature functionality",As a community we need to develop better ways to teach Haskell to a wider audience.,"O'Caml, Scala"
8/2/2010 15:57:53,5+ years,"I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.","Open source projects, Compilers / interpreters",Emacs / haskell-mode,C++,"Lack of low level control of what's really being executed, or at least, in an easy way.",,Python
8/2/2010 15:57:57,5+ years,"I use it for serious ""hobby"" projects.","I'm lobbying to have it ""endorsed"".","Gaming, Open source projects, Thick clients: GTK etc, Compilers / interpreters",Emacs / haskell-mode,Ada,,,Ada
8/2/2010 15:58:16,2 years,"I use it for serious ""hobby"" projects., I use it at work.","It's ""endorsed"" and used openly and proudly.","""NoSQL"" usage, Commercial products, Commercial services, Web development","Emacs / haskell-mode, yi",Python,,,"C, F#, Python, Scala, Scheme"
8/2/2010 15:58:23,,I'm just tinkering.,I don't use Haskell at work.,,vim,Python,"The libraries are all over the place.  Actually, I don't know where to begin, each time I try to pick up some standard application it fails to work out of the box because of some incomprehensible library dependency issue.",,"C, Python"
8/2/2010 15:58:54,1 year,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Network programming, Open source projects, RDBMS programming, Compilers / interpreters","vi, Command line REPL",Ruby,No stable libraries which works in all platforms. This including UI libs also,,"Clojure, F#, Ruby"
8/2/2010 15:59:54,1 year,"I use it for serious ""hobby"" projects., I use it for my studies.",,"Compilers / interpreters, hardware synthesis",vi,Python,,,
8/2/2010 16:00:15,4 years,"I'm just tinkering., I use it for my studies.",It's used secretly; I'd never be able to use it.,"Graphics / art, Math / data analysis, Thick clients: GTK etc, Compilers / interpreters",Gedit,Ruby,It needs some kind of FRP to take over inherently statefull tasks. There is no cool production ready and beautiful Web-framework. Maybe It needs more power of dependently-typed languages to keep type-level programming more simple then it is now...,I love Haskell. It's an endless source of knowledge and inspiration.,Scala
8/2/2010 16:01:39,3 years,"I use it for serious ""hobby"" projects., I use it at work.","It's ""endorsed"" and used openly and proudly.","""NoSQL"" usage, Commercial products, Commercial services, Network programming, Open source projects, RDBMS programming, Web development",vi,D,,,"C, O'Caml, Scala"
8/2/2010 16:01:53,5+ years,I use it at work.,"It's ""endorsed"" and used openly and proudly.","Network programming, RDBMS programming, Web development","Emacs / haskell-mode, Command line REPL",,Development and debugging tools,,"O'Caml, Scala, Scheme"
8/2/2010 16:02:00,3 years,"I'm just tinkering., I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Math / data analysis, Network programming, System administration, Web development, Compilers / interpreters",vi,Scheme,,,"Ruby, Scala, Scheme"
8/2/2010 16:02:49,5+ years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Math / data analysis, Network programming, Open source projects, System administration, Compilers / interpreters, recreational scuba diving",vi,Java,"poor intuitions about some stuff compared to procedural languages: at compile time, type inference errors; and at runtime, space allocation caused by lazy computation.",,"Clojure, Common Lisp, Erlang, F#, Java, Javascript, O'Caml, Prolog, Python, R, Scala, Scheme"
8/2/2010 16:02:56,2 years,"I use it for serious ""hobby"" projects., I use it for my studies.",,"Math / data analysis, Compilers / interpreters",Gedit,Java,Lack of documentation,,"C#, F#, O'Caml, Prolog"
8/2/2010 16:03:16,Months,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"Math / data analysis, Data preprocessing","vi, Leksah, Scintilla",F#,"The prelude and the Haskell 98 standard.

More specifically, lists should be head-strict and folds for which both arguments to the function are needed should be strict when the value is requested (IE sum, fold).

Prelude also conflicts with definitions in other modules.

The type system could be more expressive, perhaps taking an approach like ACL2's would be a better idea. Haskell could use a Natural class.

The Haskell standard sacrifices too much to deterministically and efficiently infer all types. GHC does attack this problem with extensions. Writing type annotations, at least at the top level, may sometimes become necessary, but I do not really think this is a problem.

Monomorphism restriction is silly, and the monomorphic types of functions in the prelude (IE taking Int instead of an Integral or [a] instead of a Foldable a) waste potential of the language.

Prelude provides folds but no unfolds.","I'm Kaidelong. If you disagree with any of this, feel free to chat with me on IRC.

A common practice for me has been to write programs in haskell that generate lazy output from some input (through STDIN) and then gets called and printed to STDOUT. Essentially a way to write intermediate parts in a pipeline I would use in a DOS batch script. Not sure what you'd call this, preprocessing.

I also use Haskell for prototyping things that will later be or Java. I would like to just write it in Haskell and be done with it, but my academic career has lately required me to do some mobile development, which in my role mandated the development of Java libraries. Haskell is much faster to write in and allows me to sort out conceptual problems before implementing anything in a procedural language like Java.","F#, O'Caml, Scala, ACL2"
8/2/2010 16:03:18,3 years,I use it for my studies.,I don't use Haskell at work.,Math / data analysis,"Emacs / haskell-mode, Command line REPL",C++,It would be nice to have more tool support to avoid or debug memory leaks that are introduced by an unintended evaluation order.,"Thank you, looking forward to the survey results.","C++, F#"
8/2/2010 16:03:24,5+ years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Gaming, Graphics / art, Open source projects, Compilers / interpreters",vi,Java,The numerous Haskell libraries could benefit from some consolidating work.,"Thanks for the survey.

You may have asked two more questions:
- what if the most exciting trend about Haskell or its community for you now?
(I don't have really an answer, but I like the work being done on infrastructure lake Hackage/Cabal, and rise of Jhc as a Haskell98/2010 haskell compiler)
- In which area would you like to see improvement?
(Which Imho is sufficiently different of the 'blind spot' question above. For this one I would answer: more tools to develop non-embedded DSLs.)

Thanks again!","Ruby, Scheme"
8/2/2010 16:04:05,2 years,I'm just tinkering.,I don't use Haskell at work.,Web development,"vi, Command line REPL",PHP,,,"Common Lisp, O'Caml, Python"
8/2/2010 16:04:25,3 years,"I use it for serious ""hobby"" projects., I use it at work.","I'm lobbying to have it ""endorsed"".","Commercial services, Math / data analysis, Security",Gedit,Java,,,O'Caml
8/2/2010 16:05:00,5+ years,"I use it for serious ""hobby"" projects., I use it at work.",It's used secretly; I'd never be able to use it.,"Graphics / art, Math / data analysis, Compilers / interpreters",TextMate,C++,two worlds: IO and pure which creates incredible software engineering problems,we're short of abandoning Haskell since real programs are more cumbersome than the corresponding ML code ,"C, C++, Java, O'Caml"
8/2/2010 16:06:06,2 years,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.","""NoSQL"" usage, Commercial products, EAI - ""enterprisy"" stuff, Math / data analysis, Compilers / interpreters",Command line REPL,C++,Installing libraries sometimes leads to apparently irreconcilable conflicts.,"A few days ago someone blogged about what they did and didn't like about Haskell.  In the ""bad"" list was this :-

> In Haskell everything is carved in stone. Programming in Haskell is like
> proving a mathematical theorem.

This sums up what I love about Haskell.
","C++, Perl"
8/2/2010 16:06:20,3 years,I'm just tinkering.,I don't use Haskell at work.,"Compilers / interpreters, fun",Emacs / haskell-mode,Java,using monads for tracking effects,,"O'Caml, Scala, coq"
8/2/2010 16:07:26,5+ years,I use it at work.,"I'm lobbying to have it ""endorsed"".","Math / data analysis, Open source projects, Compilers / interpreters, research projects","Command line REPL, Eclipse / EclispeFP",Java,non-extensible data types,,"F#, O'Caml, Scala"
8/2/2010 16:07:43,4 years,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"Math / data analysis, Compilers / interpreters",Emacs / haskell-mode,O'Caml,"A better programming environment would be good, something like SLIME for Haskell for example (for emacs users like me). More documentation on libraries. ",,"F#, O'Caml, Scala, Scheme"
8/2/2010 16:07:44,5+ years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.","""NoSQL"" usage, Graphics / art, Math / data analysis, Open source projects, System administration, Thick clients: GTK etc, Compilers / interpreters",Emacs / haskell-mode,Ada,Clunkyness of typeclasses,"What language did you use just prior to adopting Haskell: this question is hard to answer.
I'm usually using many languages at the same time.",F#
8/2/2010 16:07:54,2 years,I use it for my studies.,"It's ""endorsed"" and used openly and proudly.",,Leksah,C++,,,Java
8/2/2010 16:07:56,Months,I'm just tinkering.,I don't use Haskell at work.,,Emacs / haskell-mode,Python,"Seemingly innocuous programs often cause excessive memory usage, and debugging that is very hard.",,"C, C++, Clojure, Common Lisp, F#, Java, O'Caml, Python, Scala"
8/2/2010 16:08:16,5+ years,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies.",,"Math / data analysis, Network programming, Open source projects, System administration, Web development",Command line REPL,PHP,,,"O'Caml, Python"
8/2/2010 16:08:37,Months,I'm just tinkering.,I don't use Haskell at work.,,Notepad++,C#,lack of coherent packages,,Scala
8/2/2010 16:08:37,2 years,I use it for my studies.,"It's ""endorsed"" and used openly and proudly.","Web development, Compilers / interpreters","Emacs / haskell-mode, Command line REPL, Gedit",Python,,,"O'Caml, Prolog, Scala"
8/2/2010 16:08:52,3 years,"I'm just tinkering., I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Graphics / art, Math / data analysis, Open source projects","vi, Leksah, Command line REPL",Java,,,"Erlang, F#"
8/2/2010 16:09:29,Months,"I'm just tinkering., I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Graphics / art, Math / data analysis, Web development",Emacs / haskell-mode,Common Lisp,"I'm not going to pretend that I know enough to spot any design flaws with the language itself. I haven't had a problem in that regard.

If it counts though, I have had some problems with installing certain packages on Cabal, but every time I use Cabal it seems like the problems reduce in number, so that's a good sign. I use Arch Linux, so I ended up just installing the Haskell Platform from the AUR, and now everything works, so I guess it's a non-issue.","I use Haskell because I can get fast programs  (instead of having to write in C/C++), but I have short, abstract code (like in Common Lisp and Scheme). Also, the libraries are fantastic, something I can't say the same about with Common Lisp, which was my first ""language of choice."" I'm also happy to report that I have yet to spot any ""cruft"" appearing around the language like I did with Common Lisp. Alas, the perils of having a fragmented community of idiots are many (but I digress). Speaking of which, the community is great -- #haskell on Freenode is the best IRC channel I've ever been in, *period*.

I don't use Haskell at work because I don't work. Currently a student. Working somewhere that uses Haskell would make me a happy person!","C, Scheme"
8/2/2010 16:10:22,1 year,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Math / data analysis, Compilers / interpreters",Emacs / haskell-mode,Java,"Dependency resolution and error reporting in the package manager; whenever I 'cabal install', seems like a 50/50 shot of something going wrong -- unavailable dependency, GHC version problem, etc. Cabal error messages are sometimes opaque.

Nothing is more frustrating than getting excited about a cool new library or application, then spending an hour trying to get it to build while your interest slowly wanes.","Among coworkers I try to ""convert"" to Haskell (who mostly write Java in IntelliJ or Eclipse), the biggest hurdle I hear about is the editor. A few of us are very comfortable in Emacs or vi, but some people are addicted to a specific type of intellisense, doc integration, etc. 

I haven't looked at the progress Leksah has made lately; maybe this aspect is getting better. Once there is something IntelliJ-like for Haskell, I think there are many people who will be more willing to try the language.","Clojure, Python, Scala"
8/2/2010 16:10:43,3 years,"I use it for serious ""hobby"" projects.","I'm lobbying to have it ""endorsed"".","Network programming, Open source projects, Embedded, Compilers / interpreters","vi, Command line REPL",C,"Big, opaque RTS.",Hackage is awesome. Needs some sort of filtering.,"C, C#, F#, Javascript, O'Caml, Python, Ruby, Scheme"
8/2/2010 16:11:03,Just started,"I use it for my studies., I use it at work.","I'm lobbying to have it ""endorsed"".",Math / data analysis,vi,C,,,O'Caml
8/2/2010 16:11:11,3 years,"I use it for serious ""hobby"" projects., I use it at work.","It's ""endorsed"" and used openly and proudly.","Commercial services, Open source projects, Web development",Emacs / haskell-mode,Scheme,"I'd like more semantic editing in Emacs. I'm working on that. Our documentation software is excellent, but I wish it was utilised more strictly. Some libraries are inscrutable without reading a paper, or are just inscrutable. Whether that's a good or bad thing is up for debate. Me, I'd rather just read from the documentation page than hunt for the paper which probably has an out of date or incomplete API description anyway (see HaskellDB, the regular expressions library -- Bryan Oâ€™Sullivanâ€™s blog is good but, it's a blog). In my humble opinion, the library should contain all necessary information to use it. Cabal supports including example files, etc. Compare Hackage to CPAN in terms of package documentation.",,"O'Caml, Scala"
8/2/2010 16:11:19,Months,I'm just tinkering.,I don't use Haskell at work.,System administration,Notepad++,Java,,,"Erlang, Scala"
8/2/2010 16:11:42,2 years,"I'm just tinkering., I use it at work.","I'm lobbying to have it ""endorsed"".","""Big Data"": Hadoop etc, Compilers / interpreters",Emacs / haskell-mode,Java,"Haskell is very good when a problem domain is well-specified and not going to change. Mathematical libraries fall into this category. But the vast majority of projects have large amounts of code that is under-specified and needs continual maintenance as new requirements emerge. Java has various features that make that maintenance easy; Haskell lacks them.
",,"Erlang, O'Caml"
8/2/2010 16:13:25,2 years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,,vi,C++,no type directed name resolution; no first class labels,,F#
8/2/2010 16:13:26,3 years,"I use it for serious ""hobby"" projects., I use it at work.",It's used secretly; I'd never be able to use it.,"Math / data analysis, Open source projects, Web development","vi, Command line REPL",Java,"Development for mobile platforms (iPhone, Android, Kindle).",,"Clojure, F#, Javascript, Scala"
8/2/2010 16:14:02,2 years,"I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"Math / data analysis, Open source projects, Web development","vi, Leksah",Python,,,O'Caml
8/2/2010 16:14:16,1 year,"I'm just tinkering., I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Gaming, Math / data analysis, Open source projects",Emacs / haskell-mode,SML,Lack of good libraries for popular tasks.,,"Scala, SML"
8/2/2010 16:14:23,4 years,"I use it for serious ""hobby"" projects., I use it for my studies.","I'm lobbying to have it ""endorsed"".","Gaming, Graphics / art, Math / data analysis, Open source projects, Compilers / interpreters",Emacs / haskell-mode,C++,"It needs better ways to compose monads together.  No-one has yet created the right monad transformer library, in my opinion, and I think stacks of monads aren't easiest in the long-term (a set of monads might be a better model).  I believe that allowing better composition of monads would allow for a better programming model, for example splitting IO into several parts (IO for files, IO for network, IO for FFI, etc) and thus making it evident what you are using IO for.  But until these can be easily composed together without mountains of lifts and so on, that isn't going to be useable.",,"C++, F#, Java"
8/2/2010 16:14:30,5+ years,"I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"Gaming, Math / data analysis, Open source projects, Thick clients: GTK etc, Web development, Compilers / interpreters","Command line REPL, nano",C,The accumulation of missteps. Haskell needs a Python 3 moment.,"The library situation is a bit muddled, but I have faith in the Haskell Platform.","C++, F#, O'Caml, Scheme"
8/2/2010 16:14:56,1 year,"I'm just tinkering., I use it for serious ""hobby"" projects.",It's used secretly; I'd never be able to use it.,"Network programming, RDBMS programming, Web development, Compilers / interpreters",vi,O'Caml,,,"Clojure, Common Lisp, O'Caml, Scala, Scheme"
8/2/2010 16:15:01,3 years,"I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,Open source projects,Emacs / haskell-mode,C#,,,"F#, O'Caml"
8/2/2010 16:15:13,5+ years,"I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.",Compilers / interpreters,Notepad++,C,Poor documentation / lack of practical examples in libraries.,,"C, Agda"
8/2/2010 16:15:18,3 years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,Open source projects,"Emacs / haskell-mode, Command line REPL",Scala,Needing to have a monad in any method which needs logging.,,"F#, Scala"
8/2/2010 16:15:58,1 year,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Math / data analysis, Compilers / interpreters",Emacs / haskell-mode,Scala,"Makes one feel very  intimidated. There's no end to it. 
",A good language. For sure.,"Clojure, D, O'Caml"
8/2/2010 16:16:38,2 years,"I use it for serious ""hobby"" projects., I use it for my studies.",,"Math / data analysis, Open source projects, Compilers / interpreters","vi, Command line REPL",Python,"No virtual environments - dependency hell.
No information on package paths, where to put modules to be imported.",,"Clojure, Common Lisp, Erlang"
8/2/2010 16:16:41,5+ years,I use it at work.,"I'm lobbying to have it ""endorsed"".","Compilers / interpreters, abstract interpretation",Emacs / haskell-mode,C,"simple, standardized GUI support, better support and plugins for IDEs like Eclipse","class ""hierarchies"" like Applicative ->Monad, Monoid vs. MonadPlus should be cleaned up; it's annoying that you have to think of fmap, liftA and liftM at the same time.",O'Caml
8/2/2010 16:16:48,2 years,"I use it for serious ""hobby"" projects., I use it for my studies.",,"Network programming, Open source projects, Web development",vi,C++,"Lack of well-documented libraries. The documentation on Haskell as a language itself is excellent, but a lot of third-party libraries lack this.",,"Clojure, Erlang, Ruby"
8/2/2010 16:17:07,3 years,I'm just tinkering.,I don't use Haskell at work.,"Gaming, Math / data analysis","Emacs / haskell-mode, Command line REPL",Java,"It's hard to put into words, but it has an amateur or unpolished feel to it.  Its error messages are usually unfathomable.",,"Clojure, Go, Scala"
8/2/2010 16:17:19,3 years,"I use it for serious ""hobby"" projects., I use it at work.","It's ""endorsed"" and used openly and proudly.","Math / data analysis, Open source projects, RDBMS programming, Compilers / interpreters","vi, TextMate",Java,Lacking a proper IDE with refactoring debugging tools,,"F#, O'Caml, Scheme, Agda"
8/2/2010 16:17:34,2 years,"I use it for serious ""hobby"" projects., I use it for my studies.",,"Gaming, Graphics / art, Math / data analysis, Network programming, Compilers / interpreters","vi, Command line REPL",C++,The record system,FRP - is it the answer or just cumbersome?,"C++, Clojure, Prolog, Python, Scala"
8/2/2010 16:17:37,1 year,I'm just tinkering.,I don't use Haskell at work.,Compilers / interpreters,"vi, Command line REPL","split between C++, Java, JavaScript, and (outside Google) Perl.",Learning curve. PhD dissertations make poor manuals.,Answer to first question is rough aggregate work time. I started ~5 years ago.,"Nothing quite. Maybe O'Caml, kinda."
8/2/2010 16:17:42,4 years,"I use it for serious ""hobby"" projects., I use it for my studies.",It's used secretly; I'd never be able to use it.,"System administration, Scripting",Emacs / haskell-mode,Scheme,"- i18n
- handling of character encodings except for UTF-8, UTF-16.
- more standard libraries (network protocols, crypto)",Thanks for your great work!,"Python, Scheme"
8/2/2010 16:18:25,4 years,"I use it for serious ""hobby"" projects., I use it for my studies.",,"Gaming, Compilers / interpreters, Testing research","vi, Command line REPL",Ruby,Lack of a single dictator or vested organisation in charge of the platform libraries.  A large libraries/batteries included suite need an coherent and consistent design that can only really come from a single vision worked on by many as opposed to many visions each worked on by a few.,,"Erlang, F#, Ruby, Smalltalk"
8/2/2010 16:18:42,3 years,"I use it for serious ""hobby"" projects.",It's used secretly; I'd never be able to use it.,"Math / data analysis, Network programming, Open source projects, RDBMS programming, System administration, Web development, Compilers / interpreters","Emacs / haskell-mode, Leksah, TextMate",Ruby,"Often you go looking for a simple solution to a simple problem and get handed a graduate level mathematics textbook instead.

The standard library needs a major overhaul: we need better performance on strings, pervasive encoding, and the numeric types need to simplified and made to match category theory more closely. Also, applicative functors need to be put in their place rather than added in as an afterthought.

Much is difficult to achieve without GHC extensions, but GHC extensions are a long way from standardization. So we're stuck in a strange place where we claim to be using a standardized language but very little works outside of GHC and the alternative implementations flounder due to lack of support, undermined by GHC's wider range of experimental features. The semantics of programs that utilize modules with mutually contradictory extensions is also confusing and feels unsafe.

There's no good comonad tutorials.","Haskell is an amazing language. I don't know what I would do without it. Despite the list of problems above it remains tremendously useful. I write terse, readable programs that are frequently correct on the first try. It's unparalleled. Every advance I have made in understanding it thus far has had a substantial payoff.","Clojure, Common Lisp, Go, O'Caml, Prolog, Scheme, Smalltalk"
8/2/2010 16:19:02,5+ years,"I use it for serious ""hobby"" projects.",It's used secretly; I'd never be able to use it.,"""NoSQL"" usage, EAI - ""enterprisy"" stuff, Math / data analysis, RDBMS programming, Web development",Command line REPL,Java,,,"Ruby, Scala"
8/2/2010 16:19:34,1 year,"I'm just tinkering., I use it at work.",It's used secretly; I'd never be able to use it.,"Embedded, low level distributed systems management",Emacs / haskell-mode,Erlang,"Not enough documentation exists explaining how to write ""fast"" Haskell.  The process of profiling short running programs has been explained, but if you're in the business of writing services that must run ""forever"" sometimes a different approach is needed.

More emphasis needs to be put on the pros and cons of lazy evaluation and how to overcome drawbacks than to just try to push and sell lazy and pure as the new hammer for all nails.  It seems that anytime people optimize Haskell, it's about turning laziness off.  One can reasonably conclude from this that perhaps non-strict evaluation is the wrong default?

","Overall, I'd say Haskell has a lot to contribute to the software engineering ecosystem.  It is a bit of a radical departure from what most Computer Science curriculums teach as their mainstay languages.  

",Erlang
8/2/2010 16:19:45,1 year,I use it for my studies.,I don't use Haskell at work.,"Alife, AI",vi,Java,"Haskell is so ""big"" that I find it difficult to figure out what I should learn next. Should I focus on learning to write my own monads, learn about FRP, or write a domain-specific language? If I invest my time in learning a particular technique, will it actually help me with the application I'm currently building?

Also, while there are many excellent articles and tutorials for a general audience, there are also a lot that assume a knowledge of certain types of maths. I'm always happy to learn more maths, but I don't really know where to start, apart from knowing that category theory is involved. I wish someone would write a book entitled ""All the Maths You Need to Know to Understand Haskell Papers"". ","The Haskell community is very friendly and welcoming, and that makes a BIG difference.",O'Caml
8/2/2010 16:20:34,5+ years,"I use it for serious ""hobby"" projects., I use it for my studies.",,"Math / data analysis, Open source projects, Compilers / interpreters, research in data structures, Scripting","Emacs / haskell-mode, Command line REPL",C++,"Lack of declarative debugging (see buddha), uninformative type checker errors, weak module system, tricky typeclass undecidability/loops, no option for strictness by default, no way to specify non-recursive lets",,"O'Caml, Coq, Nemerle, SML, ATS"
8/2/2010 16:20:37,4 years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Gaming, Graphics / art, Math / data analysis, Open source projects, Thick clients: GTK etc, Web development",Eclipse / EclispeFP,Java,"Adoption by companies, so that there are more jobs working in Haskell available (-:. So maybe we need to show how Haskell allows to solve real world problems efficiently, instead of just showing off lots of cool trick with the type system and monads that is good for academics but not for real people with real problems trying to earn real money.","""If Haskell disappeared tomorrow"" sends shivers down my spine. I don't mind Haskell improving or morphing into something else, but I don't think any language in the list you give there is as appealing as Haskell is.","Clojure, Erlang, O'Caml"
8/2/2010 16:20:42,1 year,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"Math / data analysis, Network programming, Open source projects, Finance","Emacs / haskell-mode, Command line REPL",C++,"The lack of a simple, easy-to-understand FFI.",,"C, Erlang, Go, Perl, Scheme"
8/2/2010 16:21:14,1 year,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.",,"Gaming, Math / data analysis, Network programming, Open source projects, Compilers / interpreters","Emacs / haskell-mode, Command line REPL",Scheme,Closer to math than many working programmers may be comfortable with. Laziness can be hard when performance tuning.,"Historical libraries (parsec, quickcheck, etc.) should be locked down. Don't make a new library with same name that isn't the same library. It will cause pain. (Real World Haskell telling people to install Parsec2 instead of 3.)",O'Caml
8/2/2010 16:21:29,4 years,I'm just tinkering.,It's used secretly; I'd never be able to use it.,"Open source projects, System administration","Emacs / haskell-mode, Command line REPL",Ruby,"Internalising the concepts, applying them within the language design.

I've found experienced OO (and imperative) programmers find it very difficult to get to the ""eureka"" moment where Haskell's pieces, interdependancies, and interactions make more sense at something like the intuitive level they've reached with OO/imperative programming.",,"Common Lisp, Ruby, Scala"
8/2/2010 16:21:45,5+ years,"I'm just tinkering., I use it for my studies.",,"Open source projects, System administration",Emacs / haskell-mode,F#,GHC dropped distributed computing feature. I think that is a glaring weakness point.,,"Erlang, F#, O'Caml, Scheme"
8/2/2010 16:22:21,5+ years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Math / data analysis, Compilers / interpreters",vi,C++,Reasoning about memory usage.,Best language ever.,O'Caml
8/2/2010 16:22:32,2 years,"I use it for serious ""hobby"" projects., I use it for my studies.","I'm lobbying to have it ""endorsed"".","Gaming, Math / data analysis, Open source projects",Emacs / haskell-mode,C,,,"C, Clojure, Common Lisp, Erlang, Go, Lua, O'Caml, Prolog, Python, Scala, Scheme"
8/2/2010 16:23:18,2 years,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.",,"Math / data analysis, Finance, Compilers / interpreters","Emacs / haskell-mode, Leksah, Command line REPL",Python,cabal doesn't handle bit rot very well.,,"C++, Clojure, Go, O'Caml, Python, Scala, Scheme, Rust"
8/2/2010 16:23:30,3 years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Open source projects, Thick clients: GTK etc",Leksah,C++,,,"Clojure, Erlang, F#, Scala"
8/2/2010 16:23:34,3 years,I'm just tinkering.,I don't use Haskell at work.,,"Emacs / haskell-mode, yi",Java,poor quality libraries (esp docs),,Scheme
8/2/2010 16:24:15,5+ years,"I use it for serious ""hobby"" projects., I use it for my studies.",,"Math / data analysis, Open source projects, System administration, Compilers / interpreters","vi, Command line REPL",Python,,,"O'Caml, Python"
8/2/2010 16:25:03,5+ years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,Open source projects,vi,C++,Lazyness. A blessing and a curse.,,"C, O'Caml, Scala"
8/2/2010 16:28:15,3 years,"I'm just tinkering., I use it for my studies.",I don't use Haskell at work.,Compilers / interpreters,Emacs / haskell-mode,None,,,will finally create my own functional programming language
8/2/2010 16:28:20,1 year,I'm just tinkering.,I don't use Haskell at work.,System administration,vi,Python,,,"Python, Ruby, Scala"
8/2/2010 16:28:55,3 years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.",It's used secretly; I'd never be able to use it.,"""NoSQL"" usage, Math / data analysis, Open source projects, Web development",Emacs / haskell-mode,Python,,,O'Caml
8/2/2010 16:29:14,5+ years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,Math / data analysis,"Emacs / haskell-mode, Command line REPL",C++,"The numeric type class hierarchy in the prelude is not appropriate for mathematics (for example, the Num typeclass should correspond to the mathematical concept of a ring, so the abs and signum functions do not belong there).
",,"O'Caml, Scala"
8/2/2010 16:30:10,Months,I'm just tinkering.,I don't use Haskell at work.,"Math / data analysis, RDBMS programming, System administration",vi,Python,"Forums / web-presence are somewhat limited for beginners and particularly those not coming from a maths / computer science background.  There are some really good learn haskell articles and sites but limited opportunity for ordinary hackers to learn how to better ""scratch an itch"" with haskell.  ",,Python
8/2/2010 16:30:59,5+ years,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"Math / data analysis, Open source projects, System administration, Compilers / interpreters","Emacs / haskell-mode, vi, Leksah, yi, Command line REPL, Eclipse / EclispeFP",C++,,,"Clojure, Common Lisp, Erlang"
8/2/2010 16:31:03,2 years,"I use it for serious ""hobby"" projects.",,"Gaming, Graphics / art, Open source projects, Web development",Emacs / haskell-mode,Common Lisp,The type system eventually becomes unwieldy.  I would love to be able to serialize closures.,"I am optimistic about Haskell, it is moving quickly in the right direction.",Scheme
8/2/2010 16:31:42,3 years,"I use it for serious ""hobby"" projects., I use it at work.","It's ""endorsed"" and used openly and proudly.",academia,vi,Python,,,Python
8/2/2010 16:31:43,2 years,I'm just tinkering.,I don't use Haskell at work.,XMonad,Emacs / haskell-mode,Python,I'm too much of a novice to have found any weakness :-(,,Erlang
8/2/2010 16:31:45,2 years,"I use it for serious ""hobby"" projects., I use it for my studies.",,"Math / data analysis, Compilers / interpreters","Command line REPL, Sublime Text",C#,Windows still somewhat of a second-class citizen since a number of libraries require Unix.,,"C#, Ruby, Scala"
8/2/2010 16:32:27,1 year,"I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"Math / data analysis, RDBMS programming, Web development",,Python,"It is different from imperative languages, where you can change and fix stuff ""in place"", but I think Haskell makes you think more and in the end have yourself a less-hackish result.",Google should incorporate Haskell into its Appengine!,Python
8/2/2010 16:32:38,,,,,,,Relatively small user base and scarce presence in non-academic circles.,"I simply assume Haskell to be an important language (technology, really) in the future. However proud I am of being a Haskell'er, I don't see a time close where I'll be mentioning this in job interviews.",
8/2/2010 16:32:51,Weeks,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies.",,Compilers / interpreters,vi,C,,,"C, Prolog, Python"
8/2/2010 16:33:41,1 year,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Open source projects, System administration, Finance","Command line REPL, EclipseFP doesn't work at all, can't install yi, I don't really know what to do with Leksah, waiting for visual studio plugin",,"The lack of a solid IDE seems a major issue, but surprisingly it's really easy to work with just notepad/ghci. By far the worst thing is installing almost anything on windows, I really don't want to mess with cygwin all the time. Also, for newbies it's even worse, since there's a pretty good chance that all of the Haskell IDEs will fail to install/work.",,"C#, F#, Go, Java, Javascript, Scala"
8/2/2010 16:34:55,2 years,"I use it for serious ""hobby"" projects., I use it at work.",It's used secretly; I'd never be able to use it.,"Math / data analysis, Network programming, Open source projects, RDBMS programming","Emacs / haskell-mode, vi, Command line REPL",Python,"1) Libraries. There are not enough of them, many are not good enough yet. Many essential areas are not covered sufficiently: graphics, image processing, numerical computing, data visualization, support of various data formats.
2) Libraries. Impendance mismatch between libraries (for use of different data types, each one can force certain approach to IO/lazyness, each choice is a potential inability to use that library).
3) Libraries. We need stable APIs (at least no changes in minor versions). We need more documentation, examples, tutorials. We need to be able to organize Hackage better (hide deprecated projects, filter incompatible licenses, etc.)
4) Absense of de-facto standard sequence interface/class. ByteStrings and Text were promoted a lot, but they strangely lack Traversable and Foldable instances. ListLike is not used much (probably due to its license).
",,"Clojure, O'Caml, Python"
8/2/2010 16:36:35,5+ years,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.","Open source projects, Compilers / interpreters, Research into EDSLs","Command line REPL, jEdit",Java,,,"Scala, Scheme"
8/2/2010 16:37:10,1 year,I'm just tinkering.,I don't use Haskell at work.,Network programming,vi,Java,,,O'Caml
8/2/2010 16:37:19,1 year,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"""Big Data"": Hadoop etc, ""NoSQL"" usage, Network programming",Emacs / haskell-mode,Scala,unpredictable performance,,O'Caml
8/2/2010 16:38:25,2 years,I'm just tinkering.,I don't use Haskell at work.,,"Emacs / haskell-mode, vi",Ruby,That's a very good question.,"it's a bit of challenge, but I do love it.",Ruby
8/2/2010 16:38:28,4 years,"I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.",Compilers / interpreters,"vi, Command line REPL",C++,"Lack of visibility and control into memory usage, evaluation, etc.",,"Erlang, F#, O'Caml, Scala, ATS"
8/2/2010 16:39:41,3 years,"I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"Graphics / art, Math / data analysis, Open source projects, Thick clients: GTK etc, Desktop tools",vi,Perl,The record system.,,
8/2/2010 16:40:00,Weeks,I'm just tinkering.,I don't use Haskell at work.,Compilers / interpreters,"Emacs / haskell-mode, Command line REPL",C++,"Module system; Development environment, IDE",,"F#, O'Caml"
8/2/2010 16:40:24,2 years,"I use it for serious ""hobby"" projects.",It's used secretly; I'd never be able to use it.,"Math / data analysis, Open source projects, RDBMS programming",Notepad++ + ghci,Java,Difficulty of interaction with other languages,,"F#, O'Caml, Scala"
8/2/2010 16:40:47,4 years,"I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.",Robotics,Emacs / haskell-mode,Many,Cross-platform GUI development.,"The question, ""What language did you use just prior to adopting Haskell..."" is poorly designed. I used several languages prior to learning Haskell, and continue to use several languages alongside Haskell. I think the final question in the survey does a better job getting at the heart of the matter, but still seems to suggest a monolinguistic programmer; a description that likely does not fit many Haskell programmers. 

","C++, C#, Clojure, Erlang, F#, Scheme"
8/2/2010 16:41:40,1 year,"I use it for serious ""hobby"" projects., I use it at work.","It's ""endorsed"" and used openly and proudly.","""Big Data"": Hadoop etc, ""NoSQL"" usage, Math / data analysis, Open source projects, Web development, Compilers / interpreters","vi, Leksah",Perl,"The community should use it to create opensource projects. I think one of the blind spots of the community, is that people use it for academic purposes. While haskell can be used for more mundane tasks. ",,"Clojure, Common Lisp, Erlang, O'Caml"
8/2/2010 16:42:17,2 years,I'm just tinkering.,It's used secretly; I'd never be able to use it.,"Network programming, System administration","vi, Command line REPL",Javascript,"It is very hard to show code to anyone who is not a hardcore functional programmer and get them to understand it. This is not a failing of the language, in my eyes, but a failure in java certification programs. ",,"Clojure, Erlang"
8/2/2010 16:43:01,3 years,"I use it for serious ""hobby"" projects., I use it for my studies.","I'm lobbying to have it ""endorsed"".","Math / data analysis, Network programming, Open source projects, Web development, Compilers / interpreters",vi,Python,,,"Erlang, Javascript, Python, Scheme"
8/2/2010 16:45:10,3 years,"I use it for serious ""hobby"" projects., I use it for my studies.","I'm lobbying to have it ""endorsed"".","Math / data analysis, Open source projects, Thick clients: GTK etc, Web development, Compilers / interpreters","Emacs / haskell-mode, yi",C++,Quality of libraries and build process in hackage.,,Clojure
8/2/2010 16:47:11,4 years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,Math / data analysis,Emacs / haskell-mode,Common Lisp,"run time metaprogramming, dynamic module swapping at runtime",,F#
8/2/2010 16:47:52,4 years,"I use it for serious ""hobby"" projects., I use it at work.","I'm lobbying to have it ""endorsed"".","Commercial products, Commercial services, Web development",geany,C++,"Tiny platforms. Windows Mobile, for example.

Or the capacity to work in the JVM.

But I think this is a weakness of GHC, not Haskell per se.",,"O'Caml, Scala"
8/2/2010 16:49:44,4 years,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it at work.",It's used secretly; I'd never be able to use it.,"Math / data analysis, Network programming, Open source projects, System administration","Emacs / haskell-mode, Command line REPL",O'Caml,"Nothing is glaring. The problems are fine and scattered: platform issues, dependencies, runtime commonness. ",,"Clojure, Erlang, O'Caml, Prolog, Python, Scheme"
8/2/2010 16:50:30,5+ years,"I use it for serious ""hobby"" projects., I use it for my studies.","I'm lobbying to have it ""endorsed"".","""NoSQL"" usage, Math / data analysis, Network programming, Open source projects, Web development, Embedded",Emacs / haskell-mode,C,more natively supported ghc target plattforms would be nice (ARM f.e.),,"Common Lisp, F#, O'Caml, Scala"
8/2/2010 16:50:46,Months,"I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,Open source projects,Eclipse / EclispeFP,Java,,,Clojure
8/2/2010 16:51:03,5+ years,I'm just tinkering.,I don't use Haskell at work.,"Math / data analysis, Network programming, Open source projects, System administration, Finance",Eclipse / EclispeFP,Java,non-core libraries are confusing and badly documented ,,Scala
8/2/2010 16:51:16,Just started,I'm just tinkering.,I don't use Haskell at work.,,notepad,C++,"Tough to get in from an imperative background. I'm mostly missing equivalence to usual high level abstractions like design patterns, etc.",,"Erlang, F#, O'Caml, Scala"
8/2/2010 16:51:58,2 years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.","Math / data analysis, Open source projects, System administration, Web development, Compilers / interpreters","Emacs / haskell-mode, Command line REPL",C,,,"O'Caml, Python"
8/2/2010 16:52:13,2 years,"I use it for serious ""hobby"" projects., I use it at work.",It's used secretly; I'd never be able to use it.,"Math / data analysis, development tools / scripts / perl-bash replacement",Emacs / haskell-mode,C++,,,
8/2/2010 16:52:38,2 years,"I use it for serious ""hobby"" projects., I use it for my studies.",It's used secretly; I'd never be able to use it.,"Gaming, Open source projects, Thick clients: GTK etc, Compilers / interpreters","vi, Command line REPL",Scheme,No one wants to rethink how a program works. It is sufficiently otherworldly to put off most of the people. But the same property is also its greatest strength.,We _will_ be there. :),Scala
8/2/2010 16:52:54,5+ years,"I use it for serious ""hobby"" projects., I use it at work.","It's ""endorsed"" and used openly and proudly.","Open source projects, Finance",,C#,"Records aren't powerful enough. The compiler is too slow to compile things, generates big binaries, which aren't portable.",,"C#, F#, O'Caml"
8/2/2010 16:53:13,1 year,"I'm just tinkering., I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"""NoSQL"" usage, Network programming, Web development, Compilers / interpreters",vi,Perl,HTTP library that supports SSL/HTTPS,,"C, Erlang, Perl"
8/2/2010 16:53:37,Months,I'm just tinkering.,I don't use Haskell at work.,"Math / data analysis, Network programming, Open source projects, Compilers / interpreters",vi,Python,The Syntax is worse then Perl,,"Erlang, Scala, Scheme, Smalltalk"
8/2/2010 16:54:13,1 year,"I'm just tinkering., I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Open source projects, Web development",Gedit,Perl,"Unclear which packages on Hackage are good/bad, mature/experimental, portable/unix-only/windows-only, popular/shunned, performance characteristics, etc. Not just a question of collecting the data, but of presenting it, filtering on it.

People hear that laziness can cause unpredictable time/space use, and get scared off.

Some people get scared off by the prominent use of category theory.

Monadic i/o is a bit of a let-down after being promised purely functional i/o (I appreciate that FRP is an area of ongoing research).",,"O'Caml, Perl"
8/2/2010 16:54:16,4 years,I use it at work.,"It's ""endorsed"" and used openly and proudly.","Gaming, Graphics / art, Math / data analysis, Open source projects, System administration",Kate,Java,It takes longer to master than other languages.,,"Python, Scala, Pure"
8/2/2010 16:55:23,3 years,"I use it for serious ""hobby"" projects., I use it at work.","It's ""endorsed"" and used openly and proudly.","Commercial services, RDBMS programming, System administration, Web development",vi,VB.NET,"* Missing high quality libraries in some crucial areas (e.g. web server/templating)
* Missing tutorial level documentation for libraries
* Hard to judge quality of libraries",,"C#, F#, Javascript, Python"
8/2/2010 16:56:26,5+ years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"""NoSQL"" usage, Math / data analysis",Eclipse / EclispeFP,Scala,IDE,"L love Haskell. However, it appears to be a language for those people who are interested in eloquence and not application.  For instance, look at parsing.  I read the Scala parsing material material and had a DSL implemented for a linear programming program in a few hours.  I have spent days studying the Haskel parsing monads and still have no idea how to do it.  The book Real World Haskell just doesn't make the case.  I was hoping that when the Galois group got involved they would help.  However, from what I have seen, they got at it from an advanced computer science point of view as well.  This is great.  I think just what it means is that I need to be satisfied with Scala, since more people are coming at it from the level I am - plus it is transparent on how to build in great Java libraries that already exist (charting, reporting, math, etc.)","F#, Scala"
8/2/2010 16:57:22,2 years,"I'm just tinkering., I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Gaming, Open source projects","Emacs / haskell-mode, Command line REPL",Python,Documentation.  Many standard GHC packages have no documentation except for a link to some academic paper that is difficult to understand for people who aren't type theorists or category theorists.,,"O'Caml, Scala"
8/2/2010 16:59:12,Just started,I'm just tinkering.,I don't use Haskell at work.,"Math / data analysis, Compilers / interpreters","vi, Eclipse / EclispeFP",C,,I have yet to write a Haskell program. I am lurking on email lists and studying the papers written about/using/extending Haskell.,"Ada, F#, Groovy, O'Caml, Objective C, Ruby, Scala"
8/2/2010 16:59:54,Just started,I'm just tinkering.,I don't use Haskell at work.,"Graphics / art, Math / data analysis, Open source projects",vi,Java,,,Scala
8/2/2010 17:00:06,5+ years,I'm just tinkering.,I don't use Haskell at work.,,"Emacs / haskell-mode, vi",C++,Too complicated.  There's no pressure to simplify the language so it (and libraries) get incrementally more complex.,"I don't use Haskell much anymore due to the above, and that makes me a bit sad.",Clojure
8/2/2010 17:01:11,Just started,I'm just tinkering.,I don't use Haskell at work.,,vi,Java,A good IDE.,,"Java, Perl, Scala"
8/2/2010 17:06:18,5+ years,I use it at work.,"It's ""endorsed"" and used openly and proudly.","Open source projects, Compilers / interpreters, Research / prototyping",Emacs / haskell-mode,Ada,,,"C++, F#, O'Caml"
8/2/2010 17:06:51,1 year,I'm just tinkering.,I don't use Haskell at work.,"Math / data analysis, Open source projects","vi, Leksah, Command line REPL, Eclipse / EclispeFP",C++,,,"Clojure, Erlang"
8/2/2010 17:07:06,3 years,"I use it for serious ""hobby"" projects.","I'm lobbying to have it ""endorsed"".","Network programming, Open source projects",vi,Python,,,"Erlang, O'Caml"
8/2/2010 17:08:08,3 years,"I use it for serious ""hobby"" projects.","I'm lobbying to have it ""endorsed"".","Gaming, Graphics / art, Math / data analysis, Network programming, Open source projects, Compilers / interpreters","Leksah, geany",Python,"A good mechanism for generics/overloading. MPTC and type families were created for this purpose, however I dislike MPTCs and type families are still quite young.
Neither have made it into a haskell standard.",,"F#, O'Caml"
8/2/2010 17:08:17,2 years,I use it for my studies.,,Compilers / interpreters,"vi, Command line REPL",F#,,,"F#, O'Caml, Objective C"
8/2/2010 17:08:43,4 years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.","Math / data analysis, Open source projects",Kate,Ruby,,,"C++, O'Caml, Ruby"
8/2/2010 17:09:52,Months,"I use it for serious ""hobby"" projects.",It's used secretly; I'd never be able to use it.,"Open source projects, Web development",Emacs / haskell-mode,Ruby,pragmatic community content and backward compat,"if I can learn it, anyone can and that gives me hope",Clojure
8/2/2010 17:11:43,2 years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Gaming, Network programming, Open source projects","Emacs / haskell-mode, Command line REPL",Python,,,"O'Caml, Python"
8/2/2010 17:11:50,1 year,"I'm just tinkering., I use it for my studies.",I don't use Haskell at work.,,Eclipse / EclispeFP,Java,What Haskell requires more than anything is a polished IDE and the same vast developer support that both Java and .NET currently have.,"Haskell is often viewed as a hobbyist language, but in my experience it could be an ideal language for many to pick up as an educational language to help boost programming experience and ability, as well as a serious language for use in industry. However, until the use of Haskell is documented in a more professional manner and until a purpose-built Haskell IDE is built that can rival tools like Eclipse, NetBeans and Visual Studio languages like Haskell won't take off.",F#
8/2/2010 17:12:31,2 years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Open source projects, System administration, Thick clients: GTK etc, Web development","vi, Gedit",Python,"Lack of well-designed, well-documented bindings to existing libraries",,"Python, Scheme"
8/2/2010 17:12:37,Months,"I use it for serious ""hobby"" projects.","I'm lobbying to have it ""endorsed"".","Graphics / art, Math / data analysis, Network programming, Thick clients: GTK etc, Web development, Compilers / interpreters","vi, Command line REPL",C++,,,"Common Lisp, F#, O'Caml, Scheme"
8/2/2010 17:12:41,5+ years,I use it for my studies.,,Compilers / interpreters,"Emacs / haskell-mode, Command line REPL",O'Caml,,,O'Caml
8/2/2010 17:13:16,5+ years,"I use it for serious ""hobby"" projects., I use it at work.","It's ""endorsed"" and used openly and proudly.","Commercial products, Commercial services, Math / data analysis, Finance, Compilers / interpreters","Emacs / haskell-mode, Command line REPL",,Poor support on Windows.,,"O'Caml, Scala"
8/2/2010 17:14:20,5+ years,"I use it for serious ""hobby"" projects., I use it at work.","It's ""endorsed"" and used openly and proudly.","""NoSQL"" usage, Commercial services, Open source projects, Web development",Emacs / haskell-mode,C,"Lack of a 'killer app'. For example, Ruby was popularized by Ruby on Rails. Something like Happstack needs to break out and get people excited about doing things differently.",,"O'Caml, Agda"
8/2/2010 17:14:40,5+ years,"I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.","Open source projects, RDBMS programming, Compilers / interpreters, Education (undergradatue levels)",TextMate,C,Friendly compilers and interactive REPLs (and their readable error messages) that are prepared to support introductory courses at undergraduate levels.,"Haskell is my favorite.  Don't take it away tomorrow, OK? ;-)","C, Objective C, Perl, Ruby"
8/2/2010 17:15:30,Weeks,"I'm just tinkering., I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Gaming, Math / data analysis, Open source projects, Web development, Compilers / interpreters",vi,Python,"Common/standard libraries have terrible APIs. Documentation for said APIs is even worse, where it even exists.",,"Erlang, O'Caml, ML, or create my own"
8/2/2010 17:15:40,2 years,I'm just tinkering.,I don't use Haskell at work.,Math / data analysis,vi,Ruby,Well it is nearly imposible to create a loadable library (audio plugin) with GHC so I could not use it for my current project.,,Scheme
8/2/2010 17:17:43,5+ years,I'm just tinkering.,It's used secretly; I'd never be able to use it.,,Emacs / haskell-mode,C++,Performance tuning was really hard the last time I looked at it. I believe a gdb-like debugger is also missing (and hard to write because of how Haskell evaluates things).,,"C++, D, Scala"
8/2/2010 17:18:21,2 years,"I use it for serious ""hobby"" projects., I use it at work.",It's used secretly; I'd never be able to use it.,"Open source projects, Thick clients: GTK etc, Web development",Command line REPL,C++,"GUI libraries feel a little unfinished...

Has a significantly academic feel - which can be intimidating

'Getting started'  docs seem thin on the ground for many Hackage libraries",,"F#, Python"
8/2/2010 17:18:51,5+ years,"I use it for serious ""hobby"" projects., I use it for my studies.",,Compilers / interpreters,vi,C++,,,"Erlang, Perl, Python, Scheme, ML"
8/2/2010 17:19:51,1 year,I'm just tinkering.,I don't use Haskell at work.,"Gaming, Graphics / art, Math / data analysis, Network programming, Open source projects","Emacs / haskell-mode, vi, Command line REPL",Perl,"Lack of good documentation for most libraries.
Sometimes elitist community.","main = mapM_ putStrLn $ words $ map Char.chr [73,32,108,111,118,101,32,72,97,115,107,101,108,108]","Clojure, Common Lisp, Erlang, Factor, Perl, Scala, Scheme, Smalltalk"
8/2/2010 17:21:55,2 years,"I'm just tinkering., I use it for serious ""hobby"" projects.",I don't use Haskell at work.,,"Command line REPL, TextMate",Java,,,Clojure
8/2/2010 17:22:42,4 years,I use it for my studies.,"It's ""endorsed"" and used openly and proudly.","Math / data analysis, Open source projects",TextMate,Scheme,"Overloading is implemented way too conservatively. For example, I should be able to use + any way I like in a program, side by side with Prelude uses, and have Haskell sort it out.",,O'Caml
8/2/2010 17:24:18,1 year,"I use it for serious ""hobby"" projects., I use it for my studies.",,"Open source projects, Thick clients: GTK etc, Compilers / interpreters",Kate,C++,"1) Difficulty of debugging / lack of a proper debugger. Especially debugging mixed FFI/Haskell code is really hard. (Haskell lets you debug a lot less, which is amazing, but in exchange it's a lot harder when you do have to do it.)

2?) Lack of proper IDE support -- this may just be inadequate exploration on my part, but I don't know of anything that would, say, show you the type of the expression under the cursor in a tooltip, a la KDevelop/C++ or most Java IDEs.

3) For something that's actually part of the language itself: the fact that instance matching uses only the instance head and not the constraint, besides being very counterintuitive, is also really annoying to have to work around when it comes up. It would be great if it were possible (-XSuperTurboOverlappingInstances, whatever) to have the check for overlapping instances deferred to the time of instance selection, and the compiler would only complain about overlapping instances if there were more than one (equally general) matching instance *after taking constraints into account*. (This would let you do second-order typeclass programming properly, among other things.)

4) Top-level Template Haskell splices splitting a module into stages can really suck sometimes. In general, there's two models which work: everything is in scope from the entire file/module; or only previously declared things are in scope, but you can have forward references. Top level TH splices gives you the latter except without forward references, and it really makes one want to pull their hair out at times.

5) This isn't really glaring, but a concurrent garbage collector would be nice.

I am aware that these problems are Hard, which is why they aren't solved.

(And yeah, that was 5, sorry.)","Not much. Haskell is awesome, etc.","F#, O'Caml, Scala"
8/2/2010 17:24:36,2 years,"I'm just tinkering., I use it for my studies.",I don't use Haskell at work.,"Gaming, Graphics / art, Web development, Compilers / interpreters","vi, Command line REPL",C++,Record syntax can be awkward.  Cabal/Hackage is not always trivial to get up and running.  IDEs are still lacking a bit.,I love Haskell and use it whenever I get the chance.,O'Caml
8/2/2010 17:26:20,1 year,"I'm just tinkering., I use it for my studies.",I don't use Haskell at work.,"Gaming, Math / data analysis, Network programming",Command line REPL,Python,,,"Clojure, Erlang"
8/2/2010 17:27:21,Months,I'm just tinkering.,I don't use Haskell at work.,Open source projects,Leksah,C++,,,"C++, Clojure"
8/2/2010 17:28:44,Weeks,"I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"Math / data analysis, Open source projects, Compilers / interpreters",Emacs / haskell-mode,C++,"Difficulty of predicting memory layout, usage, time determinism.",Thinking in terms of purity and typeclasses is helping me understand conceptual problems that I've previously encountered in C++ projects.,"C, C++, Clojure, O'Caml, Python, Scheme"
8/2/2010 17:29:31,Months,I'm just tinkering.,I don't use Haskell at work.,"Math / data analysis, Finance",Emacs / haskell-mode,C,,,O'Caml
8/2/2010 17:30:31,Months,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,,,Perl,,,"Erlang, O'Caml, Perl, Scheme"
8/2/2010 17:31:02,1 year,I'm just tinkering.,"It's ""endorsed"" and used openly and proudly.",research/prototyping,vi,Python,"Lots of poor libraries with some hidden gems that the inexperienced user is unlikely to find. Want arrays? Which arrays?

Contrasting with python (ipython, bpython) ghci is limited. Trying to enter a multi-line let/do expression is something I haven't figured out yet. Trying to copy-and-paste from the code into ghci is a lost cause most of the time.
Also, I'd like to enter my own monad for ghci purposes; if I have some operations in a state io monad, trying to play around with them in ghci is a nightmare, I have to write versions with explicit state or try to figure out the ""hint"" package.
There has to be a better way to go for experimenting interactively with Haskell code.

Despite numerous reasons why it doesn't exist, I still want cabal uninstall.","I find Hoogle extremely useful. Hackage needs an overhaul (ratings/comments at least).
","O'Caml, SML"
8/2/2010 17:31:02,2 years,"I'm just tinkering., I use it for my studies.",I don't use Haskell at work.,"Math / data analysis, Open source projects",Gedit,PHP,It's hard to get started.,,"Clojure, Erlang, Scheme"
8/2/2010 17:31:29,Months,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Math / data analysis, Web development, Finance",Leksah,R,"No Rails equivalent.

",,"F#, R, Scala"
8/2/2010 17:33:26,Months,I use it for my studies.,"I'm lobbying to have it ""endorsed"".","Graphics / art, cognitive modelling",,,,,
8/2/2010 17:35:35,1 year,"I'm just tinkering., I use it for my studies.",I don't use Haskell at work.,"Compilers / interpreters, project euler",,C#,,,"C#, Clojure, Erlang, F#"
8/2/2010 17:35:50,Months,I'm just tinkering.,,"""Big Data"": Hadoop etc, Math / data analysis, Open source projects",Emacs / haskell-mode,Python,Lack of a variety of well-developed and well-documented libraries.,,O'Caml
8/2/2010 17:37:36,,,,,,,,"There is no Haskell tradition to post papers in the CS section of http://arxiv.org/, so TeX sources for papers are generally not available. Instead, there is a Haskell tradition to submit papers for publication to antiquated societies that impose two-column formats.

In combination, this makes it nearly impossible to read Haskell papers on any device newer than sheets made from dead trees. Are we waiting for these editors to die? It is astonishing that such a progressive language community would adhere to such backward publication practices. Call it ""conservation of hipness"", I guess.",
8/2/2010 17:41:11,2 years,I'm just tinkering.,I don't use Haskell at work.,"Open source projects, Web development","Emacs / haskell-mode, Command line REPL",Common Lisp,,,Scheme
8/2/2010 17:42:03,1 year,"I use it for serious ""hobby"" projects.","I'm lobbying to have it ""endorsed"".","Math / data analysis, Compilers / interpreters",vi,C++,,,"O'Caml, Ruby"
8/2/2010 17:42:20,2 years,I use it for my studies.,,"Math / data analysis, Open source projects, Compilers / interpreters","Command line REPL, TextMate",C#,,,"O'Caml, Python"
8/2/2010 17:42:35,1 year,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Math / data analysis, Finance, Compilers / interpreters",vi,C++,Debugging tools need massive improvement. With the LLVM backend it would be nice if source code ranges (ala ghci) were propagated through as debug annotations so it would be easier to debug programs in a native debugger.,,F#
8/2/2010 17:43:27,3 years,"I use it for serious ""hobby"" projects.",It's used secretly; I'd never be able to use it.,Web development,"Emacs / haskell-mode, Command line REPL",Scheme,,,"Clojure, Common Lisp, Erlang, F#, Go, Lua, O'Caml, Ruby, Scala, Scheme, Smalltalk"
8/2/2010 17:43:34,Just started,I'm just tinkering.,I don't use Haskell at work.,"Math / data analysis, Web development",vi,PHP,,,Python
8/2/2010 17:43:51,5+ years,"I use it for serious ""hobby"" projects., I use it for my studies.",,Compilers / interpreters,Emacs / haskell-mode,Java,,"I'd be really interested in seeing singleton kinds show up--I read about toy languages with them, and it seems useful.  I'm a grad student so my use is still only academic in nature.  I know this means my wants in the language may differ quite a bit from those trying to adopt Haskell in a workplace environment.","Erlang, Java, O'Caml"
8/2/2010 17:43:52,5+ years,I use it at work.,"It's ""endorsed"" and used openly and proudly.","Commercial products, Commercial services, Network programming, Open source projects, RDBMS programming, System administration, Web development, Embedded, Compilers / interpreters",vi,C,"Consistent, documented, quality libraries -- the quantity is there, and the Haskell Platform looks like the right vehicle -- we just have to get more libraries polished and vetted.",,O'Caml
8/2/2010 17:44:39,2 years,I use it at work.,"It's ""endorsed"" and used openly and proudly.",Math / data analysis,Emacs / haskell-mode,C,,,O'Caml
8/2/2010 17:44:44,2 years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.","""NoSQL"" usage, System administration, Compilers / interpreters",Emacs / haskell-mode,Python,,,"C#, Objective C, Perl"
8/2/2010 17:45:49,1 year,I'm just tinkering.,I don't use Haskell at work.,,"vi, TextWrangler",Perl,Learning curve,,Perl
8/2/2010 17:45:51,5+ years,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it at work.","It's ""endorsed"" and used openly and proudly.","""Big Data"": Hadoop etc, Commercial products, Commercial services, Open source projects, RDBMS programming, Compilers / interpreters","Emacs / haskell-mode, vi, Command line REPL",Perl,It's hard to reason about program performance without lots of previous experience.,,"Clojure, F#, O'Caml"
8/2/2010 17:47:09,4 years,"I'm just tinkering., I use it at work.","I'm lobbying to have it ""endorsed"".","Network programming, RDBMS programming, Thick clients: GTK etc, Web development",Emacs / haskell-mode,C++,"1) There're rare situations when type system makes much more pain than benefits.
2) Monadic code can't be easily combined (if different monads are used)
3) Syntax is quite verbose compared to scripting languages and sometimes even to C++
4) Sometimes the problem is essentially imperative and it makes little use to model it in a purely functional way.",,Ruby
8/2/2010 17:47:56,5+ years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Graphics / art, Open source projects, Thick clients: GTK etc","vi, Command line REPL",Python,Awkward record syntax.,"""What language did you use just prior to adopting Haskell"" is hard to answer.  I don't use one language at a time, I have multiple primary languages, and it's hard to say if I used one language ""before"" another.","Clojure, Go, Scala"
8/2/2010 17:48:53,1 year,"I use it for serious ""hobby"" projects.","I'm lobbying to have it ""endorsed"".","Math / data analysis, Web development",vi,C#,"The record syntax can't use overloaded function names. I would like to be able to do this:

    data Customer = Customer { name :: String }
    data Product = Product { name :: String }",,I've never seen anything that could consider itself a replacement for Haskell
8/2/2010 17:49:18,2 years,"I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.","Commercial products, Open source projects",Emacs / haskell-mode,C++,"There's no Academy or institute in Italy where Haskell is taught or considered for industrial use. ""Per se"" I found Haskell useful in every fields of my everyday work as developer and researcher. ",No further comments.,"Common Lisp, Erlang, O'Caml"
8/2/2010 17:51:21,Months,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Open source projects, Compilers / interpreters","Emacs / haskell-mode, Command line REPL",PHP,Lack of documentation for certain libraries.,No,"Common Lisp, O'Caml, Scala"
8/2/2010 17:53:29,2 years,I use it at work.,"It's ""endorsed"" and used openly and proudly.","System administration, Compilers / interpreters",Emacs / haskell-mode,SML/NJ,,,O'Caml
8/2/2010 17:53:53,5+ years,"I'm just tinkering., I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Open source projects, Web development",vi,Objective C,"The safety offered by the type-system is, while very handy, a completely unneeded quality for most projects. Many tools and libraries end up being more clever than simple and useful.","I think Haskell's mission to avoid success at all costs is going pretty well. I do very much hope that it continues to mature and that the community will continue to consist of a good blend of amazingly smart, clever, 'academic' programmers and people that want to _use_ Haskell for all kind of projects. Currently, there might be a shortage of people wanting to do the 'dirty' work of building really complete, really stable libraries but instead want to have endless discussions on the mailing-list about all kinds of minor non-issues.",Clojure
8/2/2010 17:54:02,Weeks,"I'm just tinkering., I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Math / data analysis, Thick clients: GTK etc","Emacs / haskell-mode, Leksah",Java,,,Scala
8/2/2010 17:55:54,,I'm just tinkering.,I don't use Haskell at work.,"Graphics / art, Math / data analysis, Open source projects, Compilers / interpreters",Emacs / haskell-mode,Python,,,Clojure
8/2/2010 17:56:07,1 year,I'm just tinkering.,I don't use Haskell at work.,"Open source projects, Web development",Command line REPL,,"Sometimes is too research oriented. Also the examples are for advanced programmers. The usual PHP guy won't learn Haskell, because all the examples are or to difficult, or they solve boring problems, like fibonacci.",,"Clojure, Erlang"
8/2/2010 17:56:11,Just started,I'm just tinkering.,I don't use Haskell at work.,Open source projects,"Emacs / haskell-mode, vi",Perl,,,"C, Javascript, Perl, Python, Ruby"
8/2/2010 17:56:16,Weeks,"I'm just tinkering., I use it for my studies.",I don't use Haskell at work.,"Math / data analysis, Open source projects, System administration",Command line REPL,C++,,,
8/2/2010 17:56:56,4 years,"I use it for serious ""hobby"" projects., I use it for my studies.",It's used secretly; I'd never be able to use it.,"Math / data analysis, Compilers / interpreters",Emacs / haskell-mode,C++,"""too many libraries"" of generally uncertain quality, badly written .cabal files that means I need to have multiple versions of a particular library installed, sketchy windows support on libraries that ought not to have any OS dependent parts (requiring me to run ./configure, for example.)

Oh, and while we're at it, the fact that 'cabal update --user' doesn't tell me the upgradable packages in my local install directory, that changing options in the cabal config file means that every system library is downloaded and recompiled...",,"F#, O'Caml, Scala, Scheme"
8/2/2010 17:57:02,1 year,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Math / data analysis, Web development",Emacs / haskell-mode,O'Caml,"Laziness makes it very difficult (for me) to write performant code.  Without fail, I've had to resort to using the profiling tools to figure out why my Haskell code is running so slowly and/or using so much memory. The distance between ""the code I wrote"" and ""how the compiler makes it run on the machine"" can be large. Theoretically, this is awesome (hell yeah, fusion!), but more often than not, my ""simple"" code yields bloated, slow programs that are difficult for me to tune to be performant. (I've been trying to implement image processing and machine learning algorithms.)","The community is friendly and intelligent, but a bit too distributed and academic.  I think the lack of a benevolent dictator (BD) has led to a library ghetto.  First, there's sprawl: for example, why do three database abstractions exist?  (HDBC, Takusen, HaskellDB.)  Second, there's vacancy: libraries are often abandoned.  A BD could help choose among competing alternatives, and hold a library's developers accountable for maintenance (if only via peer pressure -- but even that can be tremendously motivating!)","C++, O'Caml, Scala"
8/2/2010 17:59:12,1 year,"I use it for serious ""hobby"" projects., I use it at work.","I'm lobbying to have it ""endorsed"".","Math / data analysis, Network programming, System administration, Web development","vi, Command line REPL",Python,It's probably fatally flawed.. Too difficult to use practically for industry.,,"Clojure, Erlang, Go, O'Caml, Python, Scheme"
8/2/2010 17:59:20,4 years,I'm just tinkering.,It's used secretly; I'd never be able to use it.,"Graphics / art, Network programming, Open source projects, System administration, Compilers / interpreters",vi,C++,"Hard to reason about runtime performance.

Hard to find well-documented and actively-maintained libraries.

Steep learning curve and obscure looking syntax (compared to the C-like ""norm"") makes it very very difficult to get peers and co-workers interested (and/or excited) about it.",Thanks for doing this. Can't wait to see the results.,Scala
8/2/2010 17:59:51,Weeks,I'm just tinkering.,I don't use Haskell at work.,"Gaming, Web development","Command line REPL, Crimson Editor",PHP,,I just learned Haskell as a summer vacation project. I wrote a (seemingly) working Othello AI. So far I'm pleased.,"C++, Scheme"
8/2/2010 18:00:31,3 years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Open source projects, System administration, Web development, Finance",Emacs / haskell-mode,Python,"For a beginner or busy non-expert it's often more difficult and more verbose to write quick and dirty scripts than in python or ruby, for various reasons including: standard prelude & libs not as well tuned for usability; libs are scattered and require research; docs for language and lib users are more scattered and lower quality; docs and support channels are biased towards academic/language geeks and away from practical programming; scary error messages.",,"Clojure, Scheme, Smalltalk"
8/2/2010 18:01:38,5+ years,I'm just tinkering.,I don't use Haskell at work.,"Gaming, Graphics / art, Math / data analysis, Compilers / interpreters",Leksah,C#,,,"F#, O'Caml, Clean"
8/2/2010 18:02:54,2 years,"I'm just tinkering., I use it for serious ""hobby"" projects.",,Web development,Emacs / haskell-mode,O'Caml,,,O'Caml
8/2/2010 18:05:41,Weeks,I'm just tinkering.,"I'm lobbying to have it ""endorsed"".","""Big Data"": Hadoop etc, Math / data analysis",vi,Python,"Haskell needs a more modern web presence... a bunch of people posting simple things on a regular basis.  When I was learning python, I was enamored of the fact that there were blog posts talking about absurdly simple solutions to absurdly simple problems in python. There were also more complex examples and solutions. This allowed me to learn slowly and in any order. With Haskell I don't see that as much.

I understand that much of this comes from ""lots of smart people"" involved in Haskell, and perhaps not seeing a need due to the very friendly nature of the irc rooms and the mailing lists -- but the easily referencable blog posts, with pretty syntax highlighting, is desirable.","Something I would love to see in the Haskell world is a ""rate my code"" site. Something maybe like stack overflow, but where n00bs like me post haskell code, some explanation of the desired result, and perhaps reference (equivalent) code in a different language.  More experienced haskellers could point out better and/or more idiomatic ways of doing something. They could explain the way haskell works, and problems the person is having, in a context that the questioner is familiar with.

This suggestion comes from my own experience: I am currently learning haskell by implementing various data structures I know well. This allows me to focus on the haskell way, without simultaneously learning something else and confounding the two.  The above site could really help. Partly due to the fact that Haskell is so ""wierd"" compared t learning other languages.","Clojure, O'Caml"
8/2/2010 18:07:55,1 year,"I use it for serious ""hobby"" projects., I use it at work.","It's ""endorsed"" and used openly and proudly.","Commercial products, Network programming, Open source projects, Thick clients: GTK etc, Web development",vi,O'Caml,lack of medium level and best practice tutorial,,
8/2/2010 18:09:04,Months,I'm just tinkering.,I don't use Haskell at work.,Math / data analysis,Emacs / haskell-mode,C#,,,"F#, Scala"
8/2/2010 18:09:43,Weeks,I'm just tinkering.,I don't use Haskell at work.,Math / data analysis,Notepad++,Java,Not having an eclipse like IDE that autocompletes and suggests functions.,Still learning.,"C++, Java, Prolog, Python"
8/2/2010 18:09:54,1 year,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.",It's used secretly; I'd never be able to use it.,"Commercial services, Math / data analysis, RDBMS programming, System administration, Web development","vi, Vim",C#,"Lack of an extensive (visual) debugger/IDE with features to get a better feel of what the code is doing. Tools like Threadscope and the build in features of GHC are great, but sometimes it would be nice to have something a little easier to use.",,"C#, Clojure, Factor, O'Caml, Python, Ruby, Scala, Smalltalk"
8/2/2010 18:10:18,2 years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Math / data analysis, Open source projects, Compilers / interpreters",Emacs / haskell-mode,C,Community. The community insists of high-browing new users and trivializing concepts. Its irritating as fuck.,,F#
8/2/2010 18:10:34,5+ years,I use it at work.,"It's ""endorsed"" and used openly and proudly.",Gaming,vi,C++,"fragmented community and libraries. For example, when a new comer asked me ""what libs do I use to parse XML? JSON? Connecting to databases? Create a simple web application?"" The answer I always end up giving is ""Depends"". Haskell platform solves this problem a little bit, but it's only the first step.

I also think Haskell platform isn't getting enough push. People still think to try Haskell means install ghc. It doesn't help that both haskell platform and ghc in various linux distro as well as MacPorts gets lagged behind badly.

the other problem is books. Thus far all the haskell books are very focused on math/logic programming. It wasn't until Real World Haskell that there is a book that is focused on more practical side of things. The Haskell community needs two more books I think. The first one is a follow up to Real World Haskell. The second one is a Haskell Cook Book.","I'm very much looking forward to the llvm backed ghc. Haskell has come far since when I first saw it in 2005. There were some bumpy roads like concurrency in early ghcs. But it's gotten a lot better. Haskell is also beginning to gain some visibility. When I mention Haskell, people no longer look at me and say ""Ha what?""","Clojure, Go"
8/2/2010 18:12:10,4 years,"I use it for serious ""hobby"" projects., I use it at work.","It's ""endorsed"" and used openly and proudly.","Commercial products, Commercial services, Network programming, Open source projects, Web development, Compilers / interpreters, OS Development",vi,Scheme,"Lack of a really solid, easy to use macro system; slow compile times.",,"C, O'Caml, Objective C"
8/2/2010 18:12:12,3 years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Gaming, Network programming, System administration, Web development",Emacs / haskell-mode,O'Caml,,,"O'Caml, Python, Scala"
8/2/2010 18:12:20,1 year,I'm just tinkering.,I don't use Haskell at work.,"Math / data analysis, Open source projects",acme,functional shell script,"Community emphasis on mathematic terminology, the exclusion of success stories solving business problems,  which scares off corporate programmers.
","Thanks for collecting this information!  Hope it helps Haskell adoption.
","Clojure, Go, Ruby, Scala"
8/2/2010 18:12:37,2 years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,Network programming,vi,C,"The String type bogs everything down.  I wish haskell had defaulted to bytestring upon inception, or at least that the standard libraries used stringlike as a type so that you could use bytestrings for file/directory/etc access.

Also a lot of the standard IO functions return IO [a] and that is incredibly hard to do anything efficiently with (at my level of knowledge).  If there were versions that took closures, it would make things so much easier.

Lastly, monad transformers are super important for anyone to write anything non trivial, but the hackage mtl docs have zero info, and not even a link to a decent transformer tutorial on the wiki.  I spent a good year in ignorance of them and was unable to do more than trivial haskell until someone explained it to me one day and the entire language opened up to me.","I love the concurrency model in haskell, and I've been writing a voip server in my spare time for some time now using attoparsec and it has been a real dream.  I could not conceive of writing something so complex in C, with all the threading issues and global state to worry about.  I hope it ends up not having any problems with garbage collection down the road.",Factor
8/2/2010 18:12:37,Months,I'm just tinkering.,I don't use Haskell at work.,Linguistics and Information Retrieval,vi,C,I don't yet feel I have a deep enough understanding of Haskell to comment on this.,,"Go, O'Caml"
8/2/2010 18:13:43,Months,I'm just tinkering.,I don't use Haskell at work.,"Commercial products, Commercial services, Open source projects",text editor (genie),Python,library coverage,,Python
8/2/2010 18:16:19,5+ years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.","Math / data analysis, Open source projects, Web development, System verification","vi, Command line REPL",C++,"Proliferation of libraries with many different approaches to the same problem; a lack of clear guidelines (for casual or new users) saying which variant is useful in which situations; and specification of which libraries are experimental and exploring theoretical space versus which ones are stable, well-established and designed for practical use.  (And, too a lesser extent, lack of good tutorial-style documentation for some well-established, practical libraries.)

Of course, the Haskell Platform could be a partial fix for that by blessing certain libraries over others, but its progress seems very gradual.  Libraries developed separately may need to be merged before a suitable ""community-blessed"" version can be included in the Platform.  But I worry that this effoert will stall due to an overemphasis on the quest to find the perfect API.",,"O'Caml, Objective C"
8/2/2010 18:16:30,1 year,I'm just tinkering.,I don't use Haskell at work.,Open source projects,vi,Ruby,,,"Clojure, Ruby"
8/2/2010 18:16:31,3 years,I use it for my studies.,"It's ""endorsed"" and used openly and proudly.","Compilers / interpreters, Research",Emacs / haskell-mode,Agda,,,"C#, Clojure, F#, Scala"
8/2/2010 18:18:46,1 year,"I use it for serious ""hobby"" projects.",,Open source projects,vi,C,,,Javascript
8/2/2010 18:18:52,2 years,"I use it for serious ""hobby"" projects., I use it at work.","It's ""endorsed"" and used openly and proudly.","Commercial products, Commercial services, Network programming, Open source projects, RDBMS programming, System administration, Web development, Compilers / interpreters",Emacs / haskell-mode,Python,,,
8/2/2010 18:19:15,Just started,I'm just tinkering.,I don't use Haskell at work.,,Eclipse / EclispeFP,Java,,,Java
8/2/2010 18:19:30,2 years,"I use it for serious ""hobby"" projects., I use it for my studies.",,"Math / data analysis, Open source projects",TextMate,R,Debugging and profiling are painful.  I wish there were more tutorials about how to use haskell's seemingly-limited debugging and profiling facilities effectively. Interpreting ghc's profiling output is still mysterious to me.  The chapter in RWH is a nice start.,,"C, O'Caml, Python, R"
8/2/2010 18:19:42,2 years,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it at work.","It's ""endorsed"" and used openly and proudly.","Math / data analysis, Network programming, Web development","vi, Command line REPL",C++,There are hundreds of ways to do something. And only two of them are right. How to find them? :),"I use haskell at work for internal utilities, helpers, prototypes. It is very useful instrument since it allows rapid prototyping, has strong type system and (now) a lot of libraries.
And hackage is a great step toward future!","F#, Python, nemerle"
8/2/2010 18:20:01,4 years,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.",,"Commercial products, Commercial services, Network programming, Open source projects, RDBMS programming, System administration, Web development, UNIX systems programming","Command line REPL, Vim",Perl,"Not a weakness of Haskell really, but it's difficult to overcome the Object-Oriented infatuation in the field in order to get people interested in Haskell. OO is so entrenched, many people are unwilling to believe its use isn't necessary to achieve the underlying features OO is credited with. Some of those being: encapsulation and polymorphism.","""If Haskell disappeared tomorrow"" isn't a very useful question. Something very much like Haskell would take its place quickly, is my guess. It's fairly unique in its strictness and laziness.",O'Caml
8/2/2010 18:20:06,3 years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.","Math / data analysis, Open source projects, Compilers / interpreters",vi,Python,Could use some way to reload just an individual function in a file,,Python
8/2/2010 18:20:30,Months,"I use it for serious ""hobby"" projects.","I'm lobbying to have it ""endorsed"".","Commercial products, parsers",Emacs / haskell-mode,Java,"Issues for wide-adoption:

1) Its far to different to the mainstream, imperative style programming languages that majority developers are used to thinking and programming in.

2) The Mathematical terminology used to describe even the simplest programming concepts. E.g. Say this to the newbie if you never want him/her to ever use Haskell: ""To hold some state and then print something to the screen, you basically need to use the StateT. Oh you ask what is the StateT? Its a parameterizable state monad for encapsulating an inner monad.""","I've been programming and learning Haskell far the last six months.
The least I could say is that it defiantly has made me a better programmer. I have also built a small, yet very useful and powerful Haskell program that I am utilizing everyday. So I can definitely say that Haskell is not just a theoretical, academic playground, but a very useful and powerful programming language for the day-to-day tasks.
","Clojure, Python, Scala"
8/2/2010 18:21:25,5+ years,I use it at work.,"It's ""endorsed"" and used openly and proudly.","Network programming, Open source projects, RDBMS programming, System administration, Web development, Compilers / interpreters","Emacs / haskell-mode, Command line REPL",Python,Stability and toolchain support,,"F#, O'Caml, Scala"
8/2/2010 18:21:47,1 year,"I use it for serious ""hobby"" projects.","I'm lobbying to have it ""endorsed"".","Math / data analysis, Finance",vi,Python,,,"F#, O'Caml"
8/2/2010 18:22:30,2 years,"I use it for serious ""hobby"" projects., I use it for my studies.",,"Math / data analysis, Open source projects, Compilers / interpreters","vi, Leksah, Command line REPL",Ruby, - type errors can be *very* confusing at the beginning,,"O'Caml, Ruby"
8/2/2010 18:23:40,Just started,I'm just tinkering.,I don't use Haskell at work.,"""NoSQL"" usage, Network programming, Open source projects, Web development",Emacs / haskell-mode,Clojure,Very very steep learning curve.,,"Clojure, Common Lisp, Erlang, Javascript"
8/2/2010 18:24:02,4 years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.",It's used secretly; I'd never be able to use it.,"Gaming, Math / data analysis","Command line REPL, TextMate",Never really had a primary language,"GUI libraries. Even the well established ones like gtkhs are a nightmare to build if you're not using a blessed platform. Even finding out what combinations of version of the gtk libraries might work and on what specific platform/Linux distro is a trial. To be honest, I've never yet gotten gtkhs to compile, and I've been a unix user more than 2/3 of my life, and a Haskell user for several years. I haven't made a concerted all-out effort, but I have cumulatively spent quite a few hours trying. ",,"C#, F#, Go, O'Caml, Python, Ruby, Scala"
8/2/2010 18:24:26,Just started,I use it for my studies.,,Math / data analysis,,C++,,,Python
8/2/2010 18:24:38,3 years,"I'm just tinkering., I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Gaming, Math / data analysis, Compilers / interpreters",Emacs / haskell-mode,Java,space consumption uncertainty,,"Clojure, Common Lisp"
8/2/2010 18:25:33,Just started,I'm just tinkering.,I don't use Haskell at work.,"""Big Data"": Hadoop etc, ""NoSQL"" usage, Network programming, Open source projects, Web development",vi,C#,,,"Clojure, Erlang, F#"
8/2/2010 18:27:16,Months,"I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"Open source projects, Compilers / interpreters","vi, Leksah",Python,,,"Erlang, Scheme"
8/2/2010 18:28:42,Months,I'm just tinkering.,I don't use Haskell at work.,"Math / data analysis, Network programming, Web development","vi, Command line REPL",Ruby,,,"Common Lisp, Python, Ruby"
8/2/2010 18:28:47,Just started,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Math / data analysis, Compilers / interpreters","Emacs / haskell-mode, Command line REPL",Clojure,"That's a difficult call.  I would say that the Haskell community (and creators) have defined their goal masterfully (I'm referring to ""avoid success..."").  However, there is a misperception about this goal in the larger programming community.  Is that Haskell's problem or ""their"" problem?  I'm not sure.","Beautiful beautiful language.  (Two beautifuls intentional)

My language of choice is Clojure, but my research on it has led me naturally to Haskell.","Clojure, Common Lisp, Erlang, Factor, O'Caml, Prolog, Scala"
8/2/2010 18:30:11,5+ years,"I use it for serious ""hobby"" projects.","I'm lobbying to have it ""endorsed"".","Math / data analysis, Open source projects",Emacs / haskell-mode,Python,,,Python
8/2/2010 18:30:25,2 years,"I'm just tinkering., I use it for my studies.",I don't use Haskell at work.,"Network programming, Compilers / interpreters",Emacs / haskell-mode,Java,"Lack of non-technical/theoretical explanations for many details.  It is perceived as a highly academic language, which hinders it's adoption in industry.  Making it more approachable for average coders would help it catch on.",,"O'Caml, Scheme"
8/2/2010 18:30:53,5+ years,"I use it for my studies., I use it at work.","I'm lobbying to have it ""endorsed"".","Graphics / art, Compilers / interpreters",Emacs / haskell-mode,Scheme,,,"F#, O'Caml"
8/2/2010 18:30:58,Weeks,I'm just tinkering.,I don't use Haskell at work.,Math / data analysis,vi,C,,,Ruby
8/2/2010 18:31:26,Just started,I'm just tinkering.,I don't use Haskell at work.,"Math / data analysis, Web development, Embedded, Compilers / interpreters",Command line REPL,Objective C,,,"Clojure, Erlang, F#, Groovy, Scala"
8/2/2010 18:31:55,1 year,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Gaming, Network programming",Emacs / haskell-mode,Java,Weak module system.,,Scheme
8/2/2010 18:32:52,5+ years,I'm just tinkering.,I don't use Haskell at work.,,vi,C#,,,"C, Clojure, F#, Go, Javascript"
8/2/2010 18:33:53,5+ years,"I use it for serious ""hobby"" projects.",,"""NoSQL"" usage, Math / data analysis, Open source projects, Compilers / interpreters","vi, Command line REPL, hpage",Java,,,O'Caml
8/2/2010 18:34:06,Weeks,I'm just tinkering.,I don't use Haskell at work.,,vi,PHP,,,"Clojure, Objective C"
8/2/2010 18:34:08,1 year,I'm just tinkering.,It's used secretly; I'd never be able to use it.,"Open source projects, Thick clients: GTK etc",Gedit,C++,"Syntax, particularly for monads. Also, tutorials never cover how to write a main function, just functions to be executed in ghci.",,"Common Lisp, Go, Python, Scala"
8/2/2010 18:34:53,5+ years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Graphics / art, Math / data analysis, Thick clients: GTK etc",Emacs / haskell-mode,Erlang,Keep getting your academia in my industry,,"Erlang, O'Caml, Python"
8/2/2010 18:37:31,1 year,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it at work.",It's used secretly; I'd never be able to use it.,Embedded,vi,Python,"Cabal package selection.
The ability to select them using criteria would be nice: Quality, cross platform support, backwards compatibility, examples, support, issue tracking, ...",,O'Caml
8/2/2010 18:38:03,2 years,I'm just tinkering.,I don't use Haskell at work.,"Gaming, Graphics / art, Math / data analysis, Finance",Emacs / haskell-mode,Java,Quality of libraries and alternatively interoperability with other languages (eg: it would be nice to have it run on JVM and have access to hundreds of existing Java libraries).,Haskell rocks my world!,Clojure
8/2/2010 18:38:46,5+ years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.","Math / data analysis, Network programming, Open source projects, System administration, Thick clients: GTK etc, Compilers / interpreters","vi, Leksah, Command line REPL",C,"Community:
1) Disorganization of Hackage / lack of quality control or indicators.
2) Deteriorating quality of Haskell communications mediums are leading to fragmentation.

Language:
1) 'fail' is part of the Monad class.
2) Primitives to represent bit data are lacking, causing the entire community to rely on FFI based tools, such as ByteStrings, that are often insufficient or sub-optimal for the task at hand.

Development Tools:
No cross compilers (both architecture and platform wise) and poor resource (memory) use controls.  HALVM like cross compiling should become more prominent in GHC.",,"Clojure, Erlang, O'Caml, Python"
8/2/2010 18:39:00,3 years,I use it at work.,"It's ""endorsed"" and used openly and proudly.","EAI - ""enterprisy"" stuff, Math / data analysis, Network programming, System administration, Web development, Finance, Compilers / interpreters",Emacs / haskell-mode,Java,,,"Clojure, F#, O'Caml, Scala"
8/2/2010 18:39:15,4 years,I'm just tinkering.,I don't use Haskell at work.,,"vi, Command line REPL",Java,"Too explicit and lack of a standardized collections API, in contrast to Scala.",,"F#, O'Caml, Scala"
8/2/2010 18:39:58,2 years,"I'm just tinkering., I use it for serious ""hobby"" projects.","I'm lobbying to have it ""endorsed"".","""NoSQL"" usage, EAI - ""enterprisy"" stuff, Network programming, RDBMS programming, Thick clients: GTK etc, Web development","Emacs / haskell-mode, Leksah, Command line REPL",Python,"Badly documented libraries. Haddocks are mostly good enough when you know what you're doing, but there are very few tutorials, examples, use cases and motivational snippets in general.",,"Clojure, Common Lisp, Erlang, Python, Ruby, Scala"
8/2/2010 18:40:05,Months,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,Math / data analysis,Emacs / haskell-mode,F#,,,F#
8/2/2010 18:41:30,1 year,"I'm just tinkering., I use it for my studies.",I don't use Haskell at work.,"Math / data analysis, Open source projects, Compilers / interpreters",Emacs / haskell-mode,C,,,"Clojure, O'Caml, Scala"
8/2/2010 18:41:32,Just started,I'm just tinkering.,I don't use Haskell at work.,Math / data analysis,vi,Clojure,I don't yet know enough about Haskell to say for sure. ,"My taste favors a more dynamic language, Haskell is good, but not for me. Its still fun to play with though.  ","Clojure, Scheme"
8/2/2010 18:44:02,Months,I'm just tinkering.,I don't use Haskell at work.,Math / data analysis,vi,C++,,,Clojure
8/2/2010 18:45:39,1 year,I use it at work.,"It's ""endorsed"" and used openly and proudly.","""NoSQL"" usage, Commercial services, Network programming, Open source projects, Web development",Emacs / haskell-mode,Erlang,Lack of structure in Hackage.  It's time for us to grow up and accept our fame.,,"Common Lisp, F#, O'Caml"
8/2/2010 18:47:24,2 years,"I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.","Math / data analysis, Open source projects, Compilers / interpreters","Emacs / haskell-mode, Leksah",Java,ItÂ´s not aimed to be used by the normal programmers and everyone!,An easy to use IDE is really necessary and easier installation and package management is critical.,"C, C++, C#, F#, Java, Javascript, O'Caml, Objective C, Python"
8/2/2010 18:48:20,3 years,"I'm just tinkering., I use it for my studies.",I don't use Haskell at work.,"Math / data analysis, Compilers / interpreters",Scite + GHC,C#,,,F#
8/2/2010 18:50:46,2 years,"I use it for serious ""hobby"" projects., I use it at work.","It's ""endorsed"" and used openly and proudly.","Gaming, Open source projects, Web development, Website analyzer.","vi, Command line REPL",Python,HTTPS.,<3,"C, Factor, Python"
8/2/2010 18:50:59,Months,"I'm just tinkering., I use it for serious ""hobby"" projects.","It's ""endorsed"" and used openly and proudly.","""NoSQL"" usage, Math / data analysis, Network programming",Emacs / haskell-mode,Java,libraries diversity,,Clojure
8/2/2010 18:52:39,2 years,"I'm just tinkering., I use it for my studies.",I don't use Haskell at work.,"Math / data analysis, Compilers / interpreters",Command line REPL,Erlang,,,"Erlang, F#, O'Caml"
8/2/2010 18:53:44,2 years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.","Commercial products, Graphics / art, Math / data analysis, Embedded",visual studio,C#,Interop with CLR.,,F#
8/2/2010 18:54:00,5+ years,I'm just tinkering.,It's used secretly; I'd never be able to use it.,"Math / data analysis, Finance",Emacs / haskell-mode,Java,haskell needs more libraries that just work,,Common Lisp
8/2/2010 18:56:57,Months,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,Gaming,"Emacs / haskell-mode, vi, Command line REPL",C#,"Slow adaptation of new features into the ""official"" language; forced to use GHC extensions. Clumsy record syntax. Some community conventions are a bit obscure (variable/function naming etc.)","Haskell is a great, fun language!",F#
8/2/2010 18:58:18,5+ years,I use it at work.,"It's ""endorsed"" and used openly and proudly.","Network programming, Web development, Compilers / interpreters","vi, Command line REPL","Miranda, Orwell, Hope, Lazy ML",Lack of *portable* run-time monitoring/profiling tools.,,"F#, O'Caml, Scala"
8/2/2010 18:58:42,3 years,I'm just tinkering.,I don't use Haskell at work.,Gaming,Emacs / haskell-mode,C++,"Hard to learn - mostly because most training material is written with graduate and post-graduate mathematics audience in mind.  The type system is hard to learn, but most papers assume a good knowledge of the type system.  This makes those papers incomprehensible to many.
",,O'Caml
8/2/2010 18:58:52,Just started,I'm just tinkering.,I don't use Haskell at work.,,"Leksah, jedit",Java,"clear and concise arguments for it's use. To use it in my workplace I would need to convince my superiors that it is a better choice than what we use now (java) and would be sustainable (e.g., find programmers). In the latter case I suppose popularity is the issue.",,"Clojure, Scala, Scheme"
8/2/2010 18:59:12,3 years,"I use it for serious ""hobby"" projects., I use it at work.","It's ""endorsed"" and used openly and proudly.","""NoSQL"" usage, Commercial products, Commercial services, Math / data analysis, Network programming, Web development","Emacs / haskell-mode, Command line REPL",C,"Lack of ""how to use"" a library. Lack of rating library in the community.
Lack of win64 version of ghc.","What is the status of Haskell in your workplace?
none of the alternatives seems really appropriate.
Haskell is used very much but we operate one a need to know basis. Non-tech don't need to know which part of the system is written in haskell/C/erlang.
","Clojure, Erlang, F#, O'Caml"
8/2/2010 18:59:13,5+ years,I'm just tinkering.,I don't use Haskell at work.,Web development,"vi, Command line REPL",C++,"A lot of the approach to Haskell you can find online is very academic in nature, which can be seriously intimidating to those of us whose heads explode when they try to comprehend category theory.",,F#
8/2/2010 19:00:18,3 years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"""NoSQL"" usage, Open source projects, Web development",Emacs / haskell-mode,vb 6,,,"Erlang, F#"
8/2/2010 19:02:21,Months,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Open source projects, Compilers / interpreters",vi,Java,"Sometimes hard to understand compile errors.
Lack of standard way to collect quickcheck or hunit test. The test list need to be hand written and it's easy to forget one.
",Haskell rocks!,Python
8/2/2010 19:02:36,1 year,I'm just tinkering.,I don't use Haskell at work.,"Math / data analysis, Finance",vi,Ruby,"A good IDEs, with step-through debugging and dynamic stack frame munging. Emacs does not count.

",,Erlang
8/2/2010 19:03:37,1 year,"I'm just tinkering., I use it for my studies.","I'm lobbying to have it ""endorsed"".","Math / data analysis, Network programming, Open source projects",vi,C,,,Python
8/2/2010 19:04:03,5+ years,"I'm just tinkering., I use it at work.",It's used secretly; I'd never be able to use it.,Web development,Emacs / haskell-mode,Python,,,"C, Go, Java, O'Caml"
8/2/2010 19:04:42,Months,I'm just tinkering.,I don't use Haskell at work.,"""Big Data"": Hadoop etc",Gedit,Python,,,Clojure
8/2/2010 19:08:33,5+ years,"I use it for serious ""hobby"" projects., I use it for my studies.",It's used secretly; I'd never be able to use it.,"Math / data analysis, Open source projects, Compilers / interpreters",Emacs / haskell-mode,C,,,"F#, Java, Python"
8/2/2010 19:09:24,4 years,"I use it for serious ""hobby"" projects., I use it at work.",It's used secretly; I'd never be able to use it.,"Math / data analysis, Open source projects, RDBMS programming, Finance",Emacs / haskell-mode,Python,,,"O'Caml, Prolog"
8/2/2010 19:13:20,1 year,"I'm just tinkering., I use it for my studies.",I don't use Haskell at work.,"Math / data analysis, Compilers / interpreters","vi, Command line REPL",Java,Purity & monad tutorials ;),,O'Caml
8/2/2010 19:13:27,2 years,"I'm just tinkering., I use it for serious ""hobby"" projects.","It's ""endorsed"" and used openly and proudly.","""NoSQL"" usage, Commercial products, Commercial services, Math / data analysis, Open source projects, Web development, Finance, Compilers / interpreters","vi, TextMate",Perl,,,"Prolog, Scheme, ML, Agda"
8/2/2010 19:14:15,4 years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.","Math / data analysis, Open source projects",Emacs / haskell-mode,Java,,,Python
8/2/2010 19:14:31,Just started,"I'm just tinkering., I use it for serious ""hobby"" projects.",I don't use Haskell at work.,Open source projects,vi,Java,,,O'Caml
8/2/2010 19:15:47,5+ years,I use it at work.,"It's ""endorsed"" and used openly and proudly.","Open source projects, Thick clients: GTK etc","yi, Command line REPL",Java,Intimidating blog posts,,Coq
8/2/2010 19:15:57,Months,"I'm just tinkering., I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Gaming, Math / data analysis, Open source projects, System administration, Compilers / interpreters",sciTE + GHCi,C#,"Lack of tools/examples/libraries for picking up Haskell to solve a simple but non-trivial I/O-based problem quickly. It's easy to find low-level I/O tools (often as FFI bindings to standard C libraries) and powerful (usually pure) high-level abstractions, but combining the two is generally left as an exercise for the reader. This leads to the existence of a class of problems that are too complicated for low-level I/O to be pleasant but too simple to justify hand-rolling a higher-level library (cf. the recent reddit discussion about writing the unix ""du"" utility for an example of this). The result is usually either writing C-style structured imperative code in the IO monad, or just giving up on Haskell for such problems and using another language.

The difficulty in tackling this problem is that it's often not obvious what higher-level functionality is most frequently useful without spending a lot of time doing whatever task a library is for. To run with the ""du"" example, building something like a ""monadic system administration combinators"" library to replace shell scripting with Haskell would most likely be doomed to failure unless the author does, in fact, spend a great deal of time doing system administration.",,"Clojure, Scala, Agda or Epigram. Haha, just kidding... I think."
8/2/2010 19:18:16,Months,I'm just tinkering.,I don't use Haskell at work.,Open source projects,vi,C++,,,Clojure
8/2/2010 19:21:51,5+ years,I use it at work.,"It's ""endorsed"" and used openly and proudly.","Commercial services, Gaming, Graphics / art, Network programming, Open source projects, RDBMS programming, Thick clients: GTK etc, Web development, Embedded, Compilers / interpreters",vi,C++,,,"C, F#, Java, O'Caml"
8/2/2010 19:23:05,3 years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.","Commercial services, Gaming, Graphics / art, Math / data analysis, Network programming, Open source projects, RDBMS programming, Thick clients: GTK etc, Web development, Embedded, Compilers / interpreters",vi,C++,,,"C, C++, C#, D, Javascript, Lua, O'Caml"
8/2/2010 19:23:36,2 years,"I use it for serious ""hobby"" projects., I use it at work.","I'm lobbying to have it ""endorsed"".",Math / data analysis,"Emacs / haskell-mode, Command line REPL",Scheme,,,"Common Lisp, Scheme"
8/2/2010 19:24:05,5+ years,I use it at work.,"It's ""endorsed"" and used openly and proudly.","Commercial products, Compilers / interpreters, Compiler for Bluespec SystemVerilog, language for hardware modeling and design",Emacs / haskell-mode,Python,"Easy-to-use libraries and documentation.
Debugging support.",Need more advocacy to get Haskell taught widely in schools/universities.,"F#, Python"
8/2/2010 19:24:20,3 years,"I use it for serious ""hobby"" projects., I use it at work.","It's ""endorsed"" and used openly and proudly.","Open source projects, Compilers / interpreters","Emacs / haskell-mode, Command line REPL",Common Lisp,"Paradigm shift, which makes it difficult to interface it with object-oriented languages.  For example, using OS X's Objective C libraries is really ugly because inheritance is used to customise behaviour, and that just doesn't play well with Haskell.",,"Erlang, Scala, Scheme"
8/2/2010 19:25:50,2 years,I'm just tinkering.,I don't use Haskell at work.,"Math / data analysis, System administration, Web development","vi, Command line REPL",Python,No easy way to write data structure agnostic code.,Referential transparency makes reading other people's code much more pleasant than most other languages.,"F#, Scala"
8/2/2010 19:26:07,5+ years,I use it for my studies.,,"Math / data analysis, Open source projects, Compilers / interpreters",vi,Perl,,,Perl
8/2/2010 19:28:29,4 years,"I use it for serious ""hobby"" projects., I use it for my studies.",,"Graphics / art, Open source projects, Software Engineering",Notepad++,Java,"a good Debugger, an IDE that as beautiful as the language deserves it (I am working on this)",,"F#, O'Caml"
8/2/2010 19:28:44,2 years,I'm just tinkering.,I don't use Haskell at work.,"Math / data analysis, Finance, Compilers / interpreters","vi, Command line REPL",Java,I think it is really difficult to plug space & time leaks that are created by lazy evaluation (or to at least recognize them)  I think this is a big hurdle to being comfortable with how something will run in the real world.,,"Factor, Scala"
8/2/2010 19:29:59,Months,"I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.","Open source projects, Compilers / interpreters","Emacs / haskell-mode, Command line REPL",C++,Laziness resulting in exploding memory usage in certain situations.,,"Clojure, O'Caml, Scala, Agda"
8/2/2010 19:30:33,2 years,I'm just tinkering.,I don't use Haskell at work.,,vi,Python,,,Scheme
8/2/2010 19:32:13,1 year,I use it for my studies.,"It's ""endorsed"" and used openly and proudly.",Compilers / interpreters,TextMate,C#,"I'll write everything in general comments part, some of which might apply here as well.","In different occasions, I thought the following would make haskell perfect:
 - better type system (very vague, but this is the general term. in particular I might say better support for GADTs (such as TH on them), MPTC+FunDeps)
 - I am not sure whether this is in the vision of the language but, support fot Dependent Types
 - Just a personal thing, support for mixfix operators (such as the _ of Agda)
 - A better prelude (something more like the awesome prelude, supporting deeply embedding DSLs) (eg. (==) in Eq typeclass could've been BoolLike b => a -> a -> b instead of a -> a -> Bool)

 Must say, it has a fantastic community. If I am, I am proud to be a part of it.

Cheers!",F#
8/2/2010 19:32:23,3 years,I use it at work.,"It's ""endorsed"" and used openly and proudly.","Commercial services, Open source projects, RDBMS programming, Thick clients: GTK etc, Web development",Emacs / haskell-mode,None,"too many toy-projects, not enough ""industrial strength"" libraries",,
8/2/2010 19:32:33,5+ years,I'm just tinkering.,"It's ""endorsed"" and used openly and proudly.",Math / data analysis,vi,C++,Laziness should not be the default.,,O'Caml
8/2/2010 19:32:56,5+ years,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.","Commercial products, Commercial services, Gaming, Graphics / art, Math / data analysis, Network programming, Open source projects, Web development, Embedded, Compilers / interpreters, DSLs",TextMate,SML,Refinement tools.,,Timber
8/2/2010 19:33:44,3 years,"I'm just tinkering., I use it for my studies.",I don't use Haskell at work.,"Math / data analysis, Compilers / interpreters",Emacs / haskell-mode,Java,,,"C++, Clojure, Common Lisp, F#, Python, Scheme, Smalltalk"
8/2/2010 19:34:15,Just started,I'm just tinkering.,I don't use Haskell at work.,Open source projects,"Emacs / haskell-mode, Eclipse / EclispeFP",C# & F#,,,F#
8/2/2010 19:34:18,Just started,I'm just tinkering.,I don't use Haskell at work.,nonspecific,ghci,Java,too much special jargon needs to be learned in order to accomplish simple file I/O.,,Go
8/2/2010 19:35:03,2 years,"I use it for serious ""hobby"" projects., I use it for my studies.","I'm lobbying to have it ""endorsed"".","Math / data analysis, Network programming, Open source projects, Web development",vi,C++,,,Erlang
8/2/2010 19:35:41,5+ years,"I use it for serious ""hobby"" projects., I use it for my studies.",,"Math / data analysis, Network programming, Thick clients: GTK etc, Compilers / interpreters",Gedit,Clean,module system,,Clean
8/2/2010 19:36:22,Months,I'm just tinkering.,I don't use Haskell at work.,Open source projects,vi,C++,,,Python
8/2/2010 19:41:56,Just started,I'm just tinkering.,I don't use Haskell at work.,learning,vi,PHP,,,Clojure
8/2/2010 19:42:00,2 years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.","Math / data analysis, Open source projects, RDBMS programming, Web development","Emacs / haskell-mode, Command line REPL",Python,"Lack of a unified condition/exception handling system, and of forkIO and its ilk to accept arbitrary MonadIO m => m () arguments.",,"Clojure, Common Lisp, Factor, O'Caml, Python, Scheme"
8/2/2010 19:43:46,2 years,"I use it for serious ""hobby"" projects., I use it at work.","I'm lobbying to have it ""endorsed"".","Math / data analysis, Network programming, Thick clients: GTK etc","Emacs / haskell-mode, Command line REPL",Python,"Lack of good stack traces and debuggers

Hard-to-predict operational behavior -- innocent-looking functions can blow the stack or the heap, and deep knowledge of inner workings is required when composing standard components that have to handle very large amounts of data

cabal-install is version-dependency-hell. Haskell needs import/export signature based dependencies so you can easily write adapters between package/version interfaces to get work around most ""package splits"", and to avoid having to re-specify for each new version, whether it broke the subset of the interface you used or not.

Too few type-classes. Working with ByteStrings is a PITA (Lazy/strict bytestrings cannot easily be used with the same code, let alone anything list-like/etc).",Haskell is pretty awesome :-),"F#, I hope not :-("
8/2/2010 19:43:46,3 years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,Open source projects,vi,Ruby,,,"Clojure, Erlang, O'Caml, Scala"
8/2/2010 19:45:03,Months,"I'm just tinkering., I use it for my studies.",I don't use Haskell at work.,Math / data analysis,vi,C++,"I am ""beginner"" haskeller, so I could miss something in following statements.
Language extensions - it looks like Haskell is not complete language ( using language extensions is like ""cheating"" or ""bad"" ), moreover it looks like there are at least 3 Haskell languages: Haskell98, TH, Haskell Prime.
I would like to write some simple game using Haskell and I think that would be fun but every library feels like it was ""experimental"", not finished, at least most of them looks like it was ""outdated"" (urls on hackage often point to 404 pages).
Haskell is the only language that I have high expectations for - it should be easy to do ""any"" (most of) graphical programs in it, when there are properly designed extensible modules with good documentation, unfortunately it lacks such modules.
I like Haskell for it's purely functional paradigm, but I can't find myself writing big projects in this language.
",,"C++, Scala"
8/2/2010 19:47:30,Weeks,I use it for my studies.,,Math / data analysis,Emacs / haskell-mode,None,,,"O'Caml, Scheme, ML"
8/2/2010 19:47:55,5+ years,I use it at work.,"It's ""endorsed"" and used openly and proudly.","""NoSQL"" usage, Open source projects, Web development, Compilers / interpreters",,"C,Java,C#",It is still lacking stable and consistent standard libraries.,,"F#, Scala, Scheme"
8/2/2010 19:48:34,2 years,"I use it for serious ""hobby"" projects., I use it at work.","It's ""endorsed"" and used openly and proudly.","Commercial services, Graphics / art, Web development",Emacs / haskell-mode,Ruby,,,"Clojure, Erlang, Java, Python, Ruby, Scala"
8/2/2010 19:48:45,Just started,I'm just tinkering.,I don't use Haskell at work.,Compilers / interpreters,vi,Ruby,"To be honest, I haven't gotten into Haskell enough to appreciate the nuances.",,Erlang
8/2/2010 19:48:53,1 year,I use it at work.,"It's ""endorsed"" and used openly and proudly.","Math / data analysis, AI/Machine learning",Emacs / haskell-mode,C,,,"Erlang, Scala"
8/2/2010 19:50:31,1 year,"I use it for my studies., I use it at work.","I'm lobbying to have it ""endorsed"".","Math / data analysis, Open source projects","Emacs / haskell-mode, Leksah",Scala,,,"F#, Scala"
8/2/2010 19:51:55,3 years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.","Math / data analysis, Open source projects, System administration, Compilers / interpreters, Research in PL","Emacs / haskell-mode, vi, Command line REPL",Python,"Packaging system for libraries and version dependencies. I don't even bother trying any more. If something is not in the latest Platform version, I just find ways not to use it.",,"F#, Javascript, O'Caml, Python, Scala"
8/2/2010 19:54:30,5+ years,"I use it for serious ""hobby"" projects., I use it at work.","It's ""endorsed"" and used openly and proudly.","Open source projects, Embedded, Compilers / interpreters","vi, Command line REPL",Java,"The set of 'standard' libraries is not yet complete enough for all common programming tasks, and the base libraries contain too much legacy design/implementation choices.",,"Factor, Go, Scala"
8/2/2010 19:56:21,1 year,"I'm just tinkering., I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Math / data analysis, RDBMS programming, Web development","vi, Command line REPL",Javascript,"Documentation. More specifically, simple examples in documentation. I don't know if it is just me getting more experienced, but this seems to be getting better recently",,"Erlang, O'Caml, R"
8/2/2010 19:56:30,Months,"I use it for serious ""hobby"" projects.","I'm lobbying to have it ""endorsed"".","Math / data analysis, one-off data processing programs",vi,Java,The libraries are a mess. Compare to the ease of Java....,"I like haskell for Math and data transformation. Better, clearer documentation would help. Versioning issues are rampant ",Java
8/2/2010 19:57:00,2 years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Math / data analysis, Network programming, Web development",vi,Java,Documentation/examples for libraries,,"Clojure, Scala"
8/2/2010 19:57:44,1 year,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies.",,"Math / data analysis, Open source projects, System administration","Emacs / haskell-mode, Command line REPL",Common Lisp,,,"Common Lisp, Erlang, F#, O'Caml, Scala, Smalltalk"
8/2/2010 19:58:49,Months,"I use it for serious ""hobby"" projects., I use it at work.","I'm lobbying to have it ""endorsed"".","Web development, Compilers / interpreters",Emacs / haskell-mode,O'Caml,"Haskell's type system is both:
    - the most important (IMO) benefit of the language, and
    - what's most difficult for newcomers to understand

One cannot fully appreciate Haskell's benefits without using it.  But learning it is difficult.
",,O'Caml
8/2/2010 19:59:11,2 years,I'm just tinkering.,I don't use Haskell at work.,"Math / data analysis, Compilers / interpreters","vi, Command line REPL",Python,"Though it might exist, it's difficult to find the kind of tutorials for Haskell that help bootstrap people into other languages. The exposition in LYAH or A Gentle Introduction is great, but you still feel like you've learned the language, not really how to use it.

This does seem to be improving though, with yesod, for instance.",,F#
8/2/2010 19:59:48,Weeks,I'm just tinkering.,I don't use Haskell at work.,Network programming,Emacs / haskell-mode,C++,?,,O'Caml
8/2/2010 20:01:09,Months,I'm just tinkering.,I don't use Haskell at work.,"Network programming, Open source projects",vi,Python,"The syntax is not clear enough and uniform across program elements. For instance, typeclass definitions can get quite confusing, especially when compiler extensions get involved.",,"Python, Ruby, Scheme"
8/2/2010 20:01:45,4 years,"I use it for serious ""hobby"" projects., I use it for my studies.",,"Graphics / art, Open source projects, Music",Emacs / haskell-mode,"Eh? I used lots of languages prior to haskell, and still do, they're not mutually exclusive!","Can't think of anything, it works great for me",,"C, Erlang, Javascript, Perl, Python, Scheme"
8/2/2010 20:04:50,5+ years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.",Lectures,vi,None,not running on the JVM,,Scala
8/2/2010 20:08:22,3 years,I'm just tinkering.,I don't use Haskell at work.,"Math / data analysis, Network programming, Open source projects, RDBMS programming, System administration, Thick clients: GTK etc, Compilers / interpreters",Emacs / haskell-mode,C,"Libraries that make huge mistakes with their API's. Instead of anything even mildly simple, it's a rare case when a popular api doesn't use monads.

There isn't anything wrong with monads per se, but the real issue is that language adoption in the open source community is usually based on how easily you can glue libraries together for interesting solutions. Haskell makes this a very tedious and sharp learning curve.","With the above said, that doesn't mean Haskell needs widespread adoption.","Clojure, Go, Scheme"
8/2/2010 20:09:07,3 years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","I'm lobbying to have it ""endorsed"".","Graphics / art, Math / data analysis, Open source projects, Finance, Compilers / interpreters","Command line REPL, smultron, Notepad++, any text editor",C,control over lazyness is not fine and/or powerful enough,"""What language did you use just prior to adopting Haskell"" <- these should be checkboxes rather than radio buttons ","C#, F#, O'Caml, Python, Scala"
8/2/2010 20:11:51,4 years,"I use it for serious ""hobby"" projects.",,"Math / data analysis, Compilers / interpreters",Emacs / haskell-mode,Scheme,"Lack of a Real World Haskell Vol. 2, integrating some of newer features and approaches that are popping up.",,"Clojure, Common Lisp, O'Caml"
8/2/2010 20:12:46,2 years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Gaming, Graphics / art, Compilers / interpreters",vi,O'Caml,"too academic use, not enough serious business projects or applications in Haskell",,Clojure
8/2/2010 20:13:31,Weeks,I'm just tinkering.,I don't use Haskell at work.,,Emacs / haskell-mode,Python,Steep learning curve.,,Python
8/2/2010 20:15:06,3 years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"System administration, Compilers / interpreters","Emacs / haskell-mode, Command line REPL",Python,,,"C, C++, C#, Clojure, Erlang, F#, Go, Java, Python, Scala"
8/2/2010 20:16:52,Months,I'm just tinkering.,It's used secretly; I'd never be able to use it.,System administration,Gedit,Ruby,steep learning curve,It should be simpler,Erlang
8/2/2010 20:19:49,1 year,I'm just tinkering.,I don't use Haskell at work.,,"Emacs / haskell-mode, Command line REPL",Ruby,"The learning curve: purity, laziness, monads.  This is somewhat mitigated by the excellent docs that are available.

The lack of intro/overview documentation for so many libraries on hackage is a close second.",I love the language and would love to use it in the workplace.  Recent activity in areas like web toolkits make this seem more of a possibility than before.,"C#, Clojure, Ruby, Scala"
8/2/2010 20:20:08,3 years,"I use it for serious ""hobby"" projects., I use it at work.","I'm lobbying to have it ""endorsed"".","""Big Data"": Hadoop etc, Math / data analysis, Network programming, Open source projects, System administration, Web development, Compilers / interpreters","vi, Command line REPL",O'Caml,"Performance, (documented) compiler internals, compiler optimizations.","Haskell programmers have to know the ""deep magic"" behind GHC to optimize programs. Big problem in my workplace.","Ada, O'Caml, Scheme"
8/2/2010 20:25:13,3 years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.",It's used secretly; I'd never be able to use it.,Text editing,"vi, Command line REPL",Java,"Not enough industrial-strength tools to lure industrial adoption; e.g. step-wise debugger; complete IDE (!); visual tools.
After industrial adoption, there will be university endorsement, and increasing numbers of universities will teach Haskell as a course.
Haskell should be known and seen as the cutting edge of the functional programming paradigm. For those who are fed up with relatively inexpressive imperative languages, Haskell should offer serious and real alternative development solution.",Good idea with the survey!,"D, Erlang, F#, Java, O'Caml, Objective C, Prolog, Scheme"
8/2/2010 20:25:39,Months,"I use it for serious ""hobby"" projects., I use it for my studies.","I'm lobbying to have it ""endorsed"".",Math / data analysis,"vi, Leksah, Command line REPL",C++,"I used GHC and found it hard to understand the Compiler Error messages.
Libraries are not that well documented.",,"Clojure, Common Lisp"
8/2/2010 20:26:35,2 years,I'm just tinkering.,I don't use Haskell at work.,Graphics / art,Emacs / haskell-mode,Python,,,"Common Lisp, Scheme"
8/2/2010 20:27:49,Weeks,I use it at work.,It's used secretly; I'd never be able to use it.,Math / data analysis,vi,C++,"Very steep learning curve.  A big culprit is poor learning materials; even the most highly recommended books and tutorials are dense, incomplete, and hard to follow.  They all seem to be written for an audience that already knows functional programming.  Haskell also lends itself to terse and subtle code, which is very hard for beginners to decipher.  In the month or so that I've been learning and using the language, I've already found ""recommended"" example code linked from haskell.org that the local Haskell experts couldn't decipher, despite their years of Haskell use.  That's a really bad sign for a language.
","My take at this point is that Haskell is not yet ready for prime time.  The language shows much evidence of immaturity, with some very awkward bits (e.g. records), and a bias towards excessively dense and tricky code.  There are a lot of great ideas there, however, so my guess is that a next-generation functional language that improves some aspects of readability/learn-ability could possibly go mainstream.",Python
8/2/2010 20:28:17,Weeks,I'm just tinkering.,I don't use Haskell at work.,,vi,C#,Getting surprised by the thunk.,,Clojure
8/2/2010 20:32:22,Months,I'm just tinkering.,I don't use Haskell at work.,Web development,"Emacs / haskell-mode, Command line REPL",PHP,"Making the ""just tinkering around"" barrier as low as possible; having a solid standard library / repository. Having multiple conflicting packages (e.g. mtl and monads-fd and transformers) and having to use PackageImports (or -hide-pkg in ghci) every time I want to use a ReaderT seems a bit much. Of course I could hide the package with ghc-pkg, but that's really the same issue if I write code using libraries which depend on both. Getting to the point where people can cabal-install anything without dependency hell. As a newcomer it was tough to see that for a while I couldn't install happstack because it depended on two things that needed two different versions of parsec (I believe it was). The answer to get it to run was to edit the cabal file and remove things, which was more than expected for someone wanting to write a hello world webapp. And then after that, haskell-src-exts didn't compile because .cabal/bin/ wasn't in my path and couldn't see happy. And then after much, much frustration I could finally use happstack.","I like Haskell. It's made me want other languages to be more like it, and I can't help but think and code differently after learning what small amount I have. But in the tooling around that I have done, I wish more of the libraries would ""just install."" I know this isn't directly the language's fault, and I know it will continue to get much, much better, but for the moment it still feels like it takes a bit too much effort just to get things running.","Clojure, F#"
8/2/2010 20:34:42,1 year,I'm just tinkering.,I don't use Haskell at work.,"Gaming, Graphics / art, Open source projects","Eclipse / EclispeFP, TextMate",Java,"No OO. Object-oriented design is so prevalent, Haskell needs to deal with it in a practical, useful way in order for me to consider serious adoption. Objects don't have to be mutable, but models need syntactic sugar! The Haskell record syntax is not a viable alternative.",,"Erlang, O'Caml, Scala"
8/2/2010 20:34:51,4 years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,Web development,Emacs / haskell-mode,Common Lisp,"exceptions/errors, type-safe database access",,"Common Lisp, Erlang, O'Caml"
8/2/2010 20:35:23,3 years,"I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"Math / data analysis, Open source projects, Compilers / interpreters","vi, TextMate",Ruby,,,F#
8/2/2010 20:37:05,5+ years,"I use it for serious ""hobby"" projects., I use it at work.","It's ""endorsed"" and used openly and proudly.","Math / data analysis, Finance",Emacs / haskell-mode,None,Records,,Agda or Epigram
8/2/2010 20:37:58,Weeks,"I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,Compilers / interpreters,"vi, Command line REPL",Python,"In-place update, but that's addressed by DDC anyway at the moment. Plus, I just started discovering functional pearls; so this is definately an overwhelmed newbie speaking here.",,"Clojure, Erlang, F#, O'Caml, Prolog, Scala, Scheme"
8/2/2010 20:38:17,5+ years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,Open source projects,vi,C,"Lack of a good IDE that just works.

Availability of libraries.Many Haskell libraries are someone's hobby project exploring an alternative approach to a problem. There are little libraries that are solid implementations of the tried and trusted solution to a problem and that have been tested in big projects.

Performance. While it is possible to write Haskell programs that are blazingly fast, doing so requires great knowledge of how Haskell code is executed and lots of trial and error. Writing efficient code in a low-level imperative language is more straightforward.","In the previous question, I gave you some points that I think keep Haskell from being adopted in the enterprisey world. However I do value the creative community that we are, and I don't mind if we keep avoiding success at all cost :)","Erlang, F#, O'Caml, Perl, Python, Scala"
8/2/2010 20:40:01,4 years,I use it at work.,"It's ""endorsed"" and used openly and proudly.","Finance, Compilers / interpreters",Emacs / haskell-mode,C++,Pervasive laziness is a bit of a hair shirt.,,O'Caml
8/2/2010 20:40:17,3 years,"I use it for serious ""hobby"" projects., I use it at work.","I'm lobbying to have it ""endorsed"".","Commercial products, Commercial services, RDBMS programming, Compilers / interpreters",vi,Python,,,Python
8/2/2010 20:42:41,1 year,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Math / data analysis, Thick clients: GTK etc",Emacs / haskell-mode,Java,More tools for profiling lazy evaluation are needed for production use. E.g. viewer for memory held by unevaluated thunks.,I think Haskell is on the right track for becoming very good choice for very wide range of projects both commercial and not.,"O'Caml, Scala"
8/2/2010 20:43:12,5+ years,"I'm just tinkering., I use it for serious ""hobby"" projects.",I don't use Haskell at work.,Web development,vi,Java,"- Insufficient information about how to avoid performance problems with lazy evaluation.
- Lack of progress of cabal-install.",,None
8/2/2010 20:45:48,3 years,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies.",,"Math / data analysis, Network programming, Open source projects",Emacs / haskell-mode,Dylan,too little polish in some libraries,Haskell fits in many niches and is quite alright as a main purpose language - more than many others.,"C, Clojure"
8/2/2010 20:48:30,1 year,"I'm just tinkering., I use it for my studies.",I don't use Haskell at work.,"Math / data analysis, Compilers / interpreters","vi, Command line REPL",C++,"The Macport's portfile is outdated for the haskell platform, and it is still at 2009.2.0.2
Also, needs better support for flat data structures and Co-Data.",I would love to see more progress on Nested Data Parallelism.,O'Caml
8/2/2010 20:51:52,Months,"I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"Gaming, Math / data analysis, Thick clients: GTK etc, Compilers / interpreters",vi,Perl,,,"Erlang, O'Caml, Scheme"
8/2/2010 20:54:49,1 year,"I'm just tinkering., I use it for serious ""hobby"" projects.",,"Open source projects, System administration","Emacs / haskell-mode, Command line REPL",Clojure,,,"Clojure, Agda"
8/2/2010 20:55:08,2 years,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"Math / data analysis, Network programming, Thick clients: GTK etc, Compilers / interpreters","Emacs / haskell-mode, vi, Command line REPL, Notepad++",Python,"Template Haskell (specific) /program transformation (general)
",,"Clojure, Erlang, Scala"
8/2/2010 21:01:06,4 years,I'm just tinkering.,,,Kate,Python,"(apparently) no easy way to generate bindings to C++ libraries. This hurts because there are a lot of very useful free software C++ libraries. Currently, you first have to take a detour through C, and making a C binding for a C++ lib is not standardized in any way. In particular, I am missing (complete and free software) Qt and KDE bindings. Maybe there would need to be some improvements to the type system to make it easier to create such a binding (e.g. better support for *OOP*-style polymorphism, maybe even extend type classes to support this)",- adoption is hindered by a lack of big/very widely used showcase applications ,"C++, Python"
8/2/2010 21:02:47,Just started,I'm just tinkering.,I don't use Haskell at work.,Open source projects,vi,C,,,"Clojure, Erlang"
8/2/2010 21:03:56,3 years,"I'm just tinkering., I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Open source projects, System administration",vi,Scheme,cabal does not support unit testing by default.,,"Erlang, Scala, Scheme, oz"
8/2/2010 21:04:38,2 years,"I use it for serious ""hobby"" projects.",,Open source projects,,Ruby,,,"C, Clojure, Ruby"
8/2/2010 21:06:41,Months,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies.",,Evolutionary Computation,"vi, Command line REPL",Java,"Difficulty in predicting time/memory usage and fixing it, at least for a more or less 
newcomer.
","Inconsistencies in base libraries, presumably due to friendliness to newcomers (like map/fmap) or compatibility (Monad not a Functor).

Also some unintuitive/inconsistent corners in the language, like orphan instances.","Clojure, F#"
8/2/2010 21:06:59,2 years,"I use it for serious ""hobby"" projects., I use it at work.","I'm lobbying to have it ""endorsed"".","Graphics / art, Network programming, System administration","vi, Command line REPL",Erlang,"Library standards: namespaces, general quality. The Haskell Platform is a good start, but Haskell needs to go even deeper.",,Erlang
8/2/2010 21:07:15,3 years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.",It's used secretly; I'd never be able to use it.,"Math / data analysis, Network programming, System administration, Testing","vi, Command line REPL",C++,Learning curve.,,Scala
8/2/2010 21:11:13,2 years,"I'm just tinkering., I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.",Commercial services,vim,Perl,Concepts at the core of the language are poorly understood by the community,,"C, C++, Perl, Python, Scheme"
8/2/2010 21:12:32,Months,I'm just tinkering.,"It's ""endorsed"" and used openly and proudly.",Compilers / interpreters,Emacs / haskell-mode,Python,,,"Common Lisp, Python"
8/2/2010 21:13:04,Just started,"I'm just tinkering., I use it for my studies.",I don't use Haskell at work.,"Math / data analysis, Open source projects, System administration",Emacs / haskell-mode,C++,,,"C++, Common Lisp"
8/2/2010 21:18:53,5+ years,"I'm just tinkering., I use it at work.",I don't use Haskell at work.,code generation,,C,It's difficult to handle state. You need complicated stuff like  monad transformers to compose different state variables and then you can't access them by name.,"Some more weaknesses (the previous question asked for the most glaring one only):

No ""preferred"" (and supported on all major platforms) GUI toolkit.
There's wxHaskell and gtk2hs, but you don't know which one is (and will be) better supported/maintained, ... - It's difficult to choose.

Time- and space Complexity is unintuitive (I remember an article which explained 4 different fold functions: left, right, strict and lazy ones. For a commutative operation they all give the same result but different time and space complexity)

Lot's of concepts for iterating a sequence. The main one is lists. But in the recent past, there appear lots of ofther ones (functors, iteratees). So when you write a function which consumes and/or produces a sequence, it's difficult to choose one. The simple choice would be lists but I'm not sure if that's a sustainable choice. It seems to be considered unsafe to do lazy io with lists, these days. And they seem to be inefficient (in comparison to bytestrings).","Ada, C, C++, Erlang, Python"
8/2/2010 21:19:23,1 year,I'm just tinkering.,"I'm lobbying to have it ""endorsed"".","""Big Data"": Hadoop etc, Math / data analysis",Emacs / haskell-mode,Common Lisp,"graph-reduction efficiency is hard to model in one's mind, unlike the C memory model.",,Clojure
8/2/2010 21:23:25,5+ years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.",I don't use Haskell at work.,"Commercial services, Graphics / art, Network programming, Open source projects, Thick clients: GTK etc, Web development, Compilers / interpreters",Command line REPL,Java,"Native GUI applications, esp. on Windows boxes;
memory/time efficient applications",,"C++, C#, F#, Java, Scala"
8/2/2010 21:23:43,Weeks,I use it for my studies.,I don't use Haskell at work.,Open source projects,vi,C,Lack of commercial penetration.,,C
8/2/2010 21:24:12,5+ years,"I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"Gaming, Compilers / interpreters",vi,C++,,,"Clojure, F#, O'Caml, Scala"
8/2/2010 21:24:22,3 years,"I'm just tinkering., I use it for my studies.","It's ""endorsed"" and used openly and proudly.","System administration, Compilers / interpreters",Emacs / haskell-mode,Java,,,Scheme
8/2/2010 21:24:48,1 year,I'm just tinkering.,,"Gaming, Math / data analysis, Open source projects, Web development","Emacs / haskell-mode, Command line REPL",Objective C,,,"Common Lisp, O'Caml, Scheme"
8/2/2010 21:31:05,2 years,"I'm just tinkering., I use it for serious ""hobby"" projects.","I'm lobbying to have it ""endorsed"".","Math / data analysis, Network programming, System administration, Compilers / interpreters","Emacs / haskell-mode, Eclipse / EclispeFP",Common Lisp,Debugging and profiling tools.,,"Clojure, Python, Scala, Scheme, Smalltalk"
8/2/2010 21:33:21,3 years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Math / data analysis, Network programming, Open source projects, System administration","Emacs / haskell-mode, Command line REPL",,Lack of good refactoring tools integrated with IDEs.,Haskell FTW!,"C#, Erlang, Groovy, Python, Scala"
8/2/2010 21:33:48,3 years,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it at work.","It's ""endorsed"" and used openly and proudly.","Commercial services, Web development",vi,Perl,"Learning curve; absense of all-encompassing survey of ""what's available in the ecosystem"".","""What language did you use just prior to adopting Haskell"" needs to have checkboxes instead of radioboxes.","Erlang, F#, O'Caml"
8/2/2010 21:36:04,Months,I'm just tinkering.,I don't use Haskell at work.,Open source projects,Emacs / haskell-mode,C#,"It's too complicated to use for 'normal' programmers. Even for those who, like me, took the time to study it. It's a very steep learning curve and I'm afraid that for most people, it just won't be worth it. I think Haskell will go down the same road Smalltalk went. A lot of people will say it's the best thing since sliced bread, and it might as well be, but in the end they all use Java. In Haskell's case, it might not be Java, but some other functional programming language.","Haskell will be a great example to other languages on how to do functional programming. It will lead the way but people are still going to use their old tools. If those old tools incorporate some of the Haskell idioms and techniques, very few people will actually make the switch. The community needs more regular non-academic programmers in it to make the language really popular. Scala/F#/Clojure don't force you to do stuff in one specific way, where Haskell does. It's not because it's 'the right way to do stuff' that people will actually want to do it that way. The moment I understood monads and how to use them, I lost interest in Haskell. The principles behind it are awesome, but the impact on the way you have to write code is too big.","C#, Erlang"
8/2/2010 21:44:54,1 year,I'm just tinkering.,I don't use Haskell at work.,"Open source projects, RDBMS programming","vi, Command line REPL",C++,It's just not for everyone.,,"C++, Python, Scala"
8/2/2010 21:46:04,1 year,"I use it for serious ""hobby"" projects.",It's used secretly; I'd never be able to use it.,"Math / data analysis, Open source projects","vi, yi",,,,
8/2/2010 21:48:36,5+ years,I use it at work.,"It's ""endorsed"" and used openly and proudly.",Finance,Emacs / haskell-mode,C++,"No major ones. Minor ones - something like class aliases would be handy. Std libraries could use refactoring, but it's probably too late.",It's hard to imagine using any other language for our work.,"F#, O'Caml"
8/2/2010 21:51:07,2 years,I'm just tinkering.,I don't use Haskell at work.,Open source projects,Emacs / haskell-mode,Java,to be the only haskeller in the team is difficult,,"Clojure, Scala, Scheme"
8/2/2010 21:51:43,1 year,"I use it for serious ""hobby"" projects.",It's used secretly; I'd never be able to use it.,"Math / data analysis, Open source projects","vi, yi",C#,"Poor compile-time error messages which do not describe the problem in a meaningful way, sometimes even adding negative value.",,"C#, F#, Go, O'Caml, Scala"
8/2/2010 21:51:57,3 years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,,,None,"Only one industrial-strength implementation, ghc.",,Clojure
8/2/2010 21:54:16,Months,"I use it for serious ""hobby"" projects.","It's ""endorsed"" and used openly and proudly.","Gaming, Open source projects, Thick clients: GTK etc",Emacs / haskell-mode,Common Lisp,,,Common Lisp
8/2/2010 22:00:01,5+ years,I'm just tinkering.,"It's ""endorsed"" and used openly and proudly.",,"Emacs / haskell-mode, Command line REPL",SML,"Much harder to give memory-usage guarantees (i.e. no out-of-memory errors) in a lazy language.
",,"F#, O'Caml, Standard ML"
8/2/2010 22:00:54,Just started,I'm just tinkering.,I don't use Haskell at work.,Graphics / art,Emacs / haskell-mode,Python,,,"Clojure, Erlang, Python"
8/2/2010 22:01:14,Months,"I use it for serious ""hobby"" projects., I use it at work.","It's ""endorsed"" and used openly and proudly.",financial reporting tools,"Emacs / haskell-mode, Command line REPL, TextMate",Objective C,Lack of a standard GUI toolkit,,"C#, Objective C, Ruby, Scala"
8/2/2010 22:01:35,2 years,I'm just tinkering.,I don't use Haskell at work.,"Math / data analysis, Open source projects, System administration, Web development, Compilers / interpreters","vi, Command line REPL",Python,It has a very steep learning curve on what most people think should be easy.,,"C#, F#"
8/2/2010 22:07:16,2 years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Math / data analysis, Finance",vi,,,,Scala
8/2/2010 22:10:44,4 years,I'm just tinkering.,I don't use Haskell at work.,Compilers / interpreters,"Emacs / haskell-mode, Command line REPL",Smalltalk,,,"Common Lisp, F#, Scala, Smalltalk"
8/2/2010 22:11:29,2 years,"I use it for serious ""hobby"" projects., I use it for my studies.",It's used secretly; I'd never be able to use it.,Compilers / interpreters,Emacs / haskell-mode,C++,,,"O'Caml, Python"
8/2/2010 22:13:11,Months,I'm just tinkering.,I don't use Haskell at work.,"""Big Data"": Hadoop etc, Math / data analysis, Web development, Finance",Emacs / haskell-mode,Python,,,Python
8/2/2010 22:14:53,3 years,"I'm just tinkering., I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Math / data analysis, Compilers / interpreters",vi,Ruby,"Tooling for building front-ends or web front-ends is still too immature, to fractured into many projects. 

For example, it's still relatively hard to write a simple UI fast (YMMV)",,"Clojure, Erlang, Ruby"
8/2/2010 22:21:42,1 year,"I'm just tinkering., I use it for my studies.",I don't use Haskell at work.,"Gaming, Graphics / art, Network programming, Open source projects, Web development","vi, Command line REPL",Ruby,,,"Ruby, Scala, Scheme"
8/2/2010 22:26:45,3 years,"I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"""Big Data"": Hadoop etc, ""NoSQL"" usage, Gaming, Network programming, Open source projects, RDBMS programming, Web development","vi, Leksah, Command line REPL",Java,"Haskell is missing a Multipart-capable email composition API. For example, if I needed to compose a plaintext and html email with an attachment, there is no API for this right now. Coming from a Java background, JEE got 3 high-level APIs right; Servlet, JavaMail, and JDBC. There are several good Servlet alternatives. Takusen and HDBC are adequate JDBC alternatives. There is no JavaMail equivalent on hackage to date. Of the three SMTP clients on hackage, only one is regularly maintained(SMTPClient), which does not support composition of Multipart emails.
",,Scala
8/2/2010 22:27:43,1 year,"I use it for serious ""hobby"" projects., I use it for my studies.",It's used secretly; I'd never be able to use it.,"Open source projects, Web development, Compilers / interpreters",vi,Java,It's too awesome/cutting edge for widespread adoption at the moment.,"Once a programmer becomes an experienced haskell user, it becomes hands down the most productive tool that programmer can use in the vast majority of problem domains.  This element of _productivity_ is not emphasized enough in explaining why one should adopt haskell.","Clojure, Erlang, O'Caml, Scala, Scheme"
8/2/2010 22:31:26,1 year,"I use it for serious ""hobby"" projects.","I'm lobbying to have it ""endorsed"".",Open source projects,Emacs / haskell-mode,Ruby,,,Scheme
8/2/2010 22:35:12,3 years,"I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,Math / data analysis,Emacs / haskell-mode,Common Lisp,"Documented case studies: In other languages I have learned there has often been examples of slightly-larger-than-toy problems showing a path to a solution. This is excellent when the language has its own eccentricities, because it shows you, not only what a solution looks like, but also how to reason in the language. Things like ""the ruby way"" and scala by example give a really nice introduction to thinking in a language.

(Actually, I think the biggest problem is distribution, especially compared to scala and f# which have the JVM and .Net to ease the problem of running in different locations. However, I don't think this is readily solvable, so I gave the suggestion above).",,"Erlang, F#, Scala"
8/2/2010 22:38:36,Weeks,I use it for my studies.,"It's ""endorsed"" and used openly and proudly.",artificial intelligence,,C,,,"C, C++, Python"
8/2/2010 22:38:38,1 year,"I'm just tinkering., I use it for serious ""hobby"" projects.",It's used secretly; I'd never be able to use it.,,"vi, Command line REPL",Python,"It may needs some ""testimonies"" or ""enterprise success stories"" somewhere on the front page of the website. Unfortunately, it somewhat seems to be still experimental, without any real world application. 
It is kind of ahead of its time and seems too disruptive for the mindset of ""common"" programmers and IT executive. ","Clear, expressive yet concise language. 
Really emphasize:
- the separation of concerns within a program,  
- the use of simple and extensible abstraction,
and makes it easier to deal with complexity. 
It also helps me improve my programming skills in general, no matter what language I use. It's more like applied mathematics / logic than programming. ","Clojure, Factor, O'Caml, Python, Scheme, Smalltalk"
8/2/2010 22:38:47,4 years,I use it at work.,"It's ""endorsed"" and used openly and proudly.","Math / data analysis, Web development, Finance, Compilers / interpreters","Command line REPL, Eclipse / EclispeFP",PHP,"Poor IDE/tools support
Too many libraries
Too many dead libraries
Poorly documented libraries",We still need clear arguments about how Haskell helps you write better software faster - how do language feature deliver higher-level gains?,"F#, Javascript, Scala"
8/2/2010 22:40:19,2 years,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.",It's used secretly; I'd never be able to use it.,conversion between different databases and different schemes including sanity checking; other helper tools that could not be written in traditional languages in an acceptable amount of time,SubEthaEdit and ghci,Java,"- A good IDE is needed. I program Objective-C most of the time at work. Even though the language is clumsy, auto-completion in the IDE is a great help towards beeing productive. i guess the next few IDEs that are coming will be so mac-unlike, that i probably dont want to use them.

- A debugger (more that :set -fbreak-on-exception :trace ...) would be a help. I create very very few bugs using haskell. most of them are of the nature that i did not understand the problem i was trying to solve fully. so the program does, what i told it to do and does it in the right way, but it is conceptionally wrong. unfortunately some bugs are mistakes in my implementation and they are really hard to find. well, a debugger is not an easy task....haskells benefits are so great, that i can live very good without one. but sometimes......

- the biggest weakness is, that i can not use the language at work without hiding what i am doing. i would be told to use objective-c to write buggy helper programs with much less features in twice the time. (so few features that the program will actually be worthless). on the other side this is a great personal benefit, if the world did use haskell i was just a normal everday guy. but with haskell i have super-powers...i'd rathe go for the perfect world, which uses programming languages where they are appropriate and not by stigma.",,"Erlang, Go, O'Caml, Python, Ruby, Scheme, Dylan, but is not fast enough, Erlang is slow too - as far as i know. I would have a look at O'Caml. But I know too little about theese language to make a good decision at that point. "
8/2/2010 22:42:03,2 years,"I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"Commercial products, Commercial services, Gaming, Network programming, Open source projects, RDBMS programming, Web development, Finance","vi, Command line REPL",Scala,"On Hackage, it can be hard to tell which packages are for serious work.",,"Clojure, F#"
8/2/2010 22:44:11,5+ years,"I'm just tinkering., I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"EAI - ""enterprisy"" stuff, Math / data analysis, Network programming, Open source projects, System administration, Web development",vi,Python,"Growing pains w.r.t. library compatibility problems:
-  versioning disarray
-  diamond dependency problems
-  lack of convergence in some key library needs (like compact unicode text)

Much of this is getting better.

Runner-up:  I/O monad.  Great idea with real drawbacks, like pressure to monadize more of the world than should be.","I love Haskell and would be happy to use it for everything, currently.","Erlang, F#, Scala"
8/2/2010 22:44:53,5+ years,"I use it for serious ""hobby"" projects., I use it at work.","It's ""endorsed"" and used openly and proudly.","Open source projects, Finance, Compilers / interpreters","Emacs / haskell-mode, Command line REPL",F#,"Predictable performance (space and time)
",,"F#, O'Caml"
8/2/2010 22:45:57,2 years,"I use it for serious ""hobby"" projects.",It's used secretly; I'd never be able to use it.,"Commercial services, Open source projects, Compilers / interpreters","vi, Command line REPL",Java,,,"F#, Scala"
8/2/2010 22:47:36,3 years,I'm just tinkering.,I don't use Haskell at work.,Network programming,vi,Python,too many ways to do the same thing (e.g. error handling),,"O'Caml, Python"
8/2/2010 22:47:38,Weeks,"I'm just tinkering., I use it for my studies.",I don't use Haskell at work.,Open source projects,"vi, SciTE",Ruby,,,"Javascript, Ruby"
8/2/2010 22:48:42,3 years,I'm just tinkering.,I don't use Haskell at work.,Compilers / interpreters,Emacs / haskell-mode,O'Caml,"I'd love an accessible approach to the Haskell theoretical internals. In a single document, I'd find an easy, yet precise explanation of the metatheory of a reasonable subset of Haskell, that I could learn and teach to others.
I do not know of such a document, and it makes me feel GHC Haskell as a whole is a big, complicated pack of features piled one after another, wich is a bit frightening.","There is something really good about the Haskell community that I don't  understand. I'm deeply convinced than OCaml is a nice language wich deserves as much attention as Haskell, but for some reason the Haskell community just seems more active, vibrant : IRC, blog posts, etc. There may actually  be more OCaml development taking place, but in a much more silent and less ""cool"" way. I'd love to understand what makes the Haskell community so efficient at communicating on the web.",Coq
8/2/2010 22:52:20,5+ years,"I'm just tinkering., I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.","Math / data analysis, Open source projects, Scripting",vi,Python,"The learning curse is quite steep, and I've just begun to grok (mainly because I did not need to before now) monads.",Keep up the good work. ,"C, O'Caml, Python"
8/2/2010 22:53:33,5+ years,"I use it for serious ""hobby"" projects.","It's ""endorsed"" and used openly and proudly.",Compilers / interpreters,"vi, MacVim",O'Caml,"The Cabal infrastructure is weak.  It should allow easy uninstallation of packages and better version control.

As for the language, my impression is that there is too much redundancy in the experimental type system extensions (do we need all of GADTs, functional dependencies, type families, etc. etc. or can we have a smaller set of more orthogonal constructs), but this is hardly a show-stopper.  I would also very much like to see a _practical_ object-oriented system (perhaps based on ""Haskell's Overlooked Object System"") as a standard library or set of libraries in Haskell.  Finally, there is the long-standing complaint about record syntax, which I view as more of an annoyance than anything.",Haskell is a wonderful language and a pleasure to use!  I really appreciate all the hard work the Haskell developers and community have put into it.  The Haskell Platform is also a _huge_ win and has made my Haskell programming life much simpler.,"O'Caml, Scala, Coq, Agda"
8/2/2010 22:55:18,2 years,I'm just tinkering.,,"Math / data analysis, Open source projects, System administration","Emacs / haskell-mode, Command line REPL",Scheme,"Lots of basic libraries depend on Unixy C libs, making development on Windows a pain.",,"Clojure, Scheme"
8/2/2010 22:57:41,Months,"I'm just tinkering., I use it for serious ""hobby"" projects.",I don't use Haskell at work.,Math / data analysis,Emacs / haskell-mode,Scheme,No PPC support on new GHC/Platform releases.,"Still new to it, but very much enjoying it.  But as a Mac hacker with many old PPCs, I'm hesitant to write much in it other than hobby projects.","Ada, Common Lisp, Factor, O'Caml, Scheme, Smalltalk"
8/2/2010 22:58:23,3 years,I'm just tinkering.,I don't use Haskell at work.,,"Leksah, yi",Java,Not running on JVM or CLR. This massively harms incremental adoption.,,Agda
8/2/2010 22:58:49,1 year,"I use it for serious ""hobby"" projects., I use it at work.",It's used secretly; I'd never be able to use it.,"Web development, Embedded, Compilers / interpreters","vi, Command line REPL",C,"- ghc has tons of great extensions, which is good, but in effect there is a choice of haskell98, a language still used by few if any, or ghc's own taste of haskell, a language with a single implementation. let's hope things get cleaner with haskell2010.
- now that i got a taste of how a real-world language can be insanely great thanks to theory cleverly put into application, i am scared that i am missing big by not having dependent types, codata and all, and that when we finally have them i will feel an urge to rewrite a lot of code!
- template haskell immensely useful, better than lisp macros thanks to static typing, but still not polished enough (also maybe a symptom of ad-hoc-ness?): not equally applicable in all syntactic contexts, conflicting AST representations for template haskell and haskell parser libraries, and a few other oddities.
- executables produced by ghc are surprisingly fat. whole-program optimization and object size of jhc are impressive but jhc is slow by construction.
- weaknesses of build tools for use in projects with complex filesystem structure. cabal vs. Setup.hs vs. ghc --make are still flaky. cabal and ghc can be used for in-tree builds (not installing to ~/.cabal) but this is nearly undocumented black magic. cabal supports multiple executables in one project, except not really. not all cabal ops work incrementally in make fashion (configure and depends, haddock). ghc's own build system not being really cabal-based is telling.
- other than that, the sky's the limit, and so are the programmer's skills: can a language help programmers to become better programmers or is it merely an effective recruitment filter of elite programmers?
- i am not sure haskell debuggers are adequate
- there certainly is a certain level of networking distribution that should be in standardized libraries or maybe built in the language (or even better, abstracted away by implementations)
- there are great textbooks but we need a few more, such as purely functional algorithmics (i am thinking a teaching textbook more than a ""functional gems"" book that you could compile today from ""functional pearls""), distributed computing, etc.","Haskell makes programming fun again :)
Haskell makes system modelling and simulation significantly easier and more productive.
Haskell makes writing compilers and related tools significantly easier (datatypes, parsers, embedded DSL).
We need more Haskell Heroes writing mindblowing papers (I wish I could hire some, too)","Clojure, Common Lisp, Erlang, O'Caml"
8/2/2010 23:00:09,2 years,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"Web development, Compilers / interpreters",Emacs / haskell-mode,Ruby,,,"Clojure, Erlang, O'Caml"
8/2/2010 23:00:57,2 years,"I use it for serious ""hobby"" projects., I use it at work.","I'm lobbying to have it ""endorsed"".","Commercial products, Commercial services, Network programming, Open source projects, Web development, Embedded","Command line REPL, geany",C++,"1) String vs ByteString impedance mismatch.
2) Error handling with lazy I/O vs Iteratee which seems completely inpenetrable.
3) Varying quality of Hackage libraries (from excellent to woeful).

","In general I'm very pleased with Haskell and the community is fantastic.
",O'Caml
8/2/2010 23:01:16,Just started,I'm just tinkering.,I don't use Haskell at work.,"Network programming, Web development",Emacs / haskell-mode,Common Lisp,,,Clojure
8/2/2010 23:02:08,5+ years,I'm just tinkering.,"I'm lobbying to have it ""endorsed"".","Math / data analysis, Network programming, Embedded, Compilers / interpreters",Emacs / haskell-mode,C,,,Scala
8/2/2010 23:02:41,Just started,I'm just tinkering.,I don't use Haskell at work.,"Open source projects, Web development",winGHCI,Java,,,Python
8/2/2010 23:04:29,Months,I'm just tinkering.,,"Gaming, Graphics / art, Math / data analysis",vi,C,"Finding good libraries. The Hackage ""Packages"" page gives a 1-sentence discription of what each library claims to do. At the very least, it would be nice if it also listed the library's stability (""experimental"",""stable"",etc) and whether or not it is still being maintained.",,"C, C++"
8/2/2010 23:06:35,3 years,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.","Math / data analysis, Network programming, Open source projects, System administration, Compilers / interpreters","vi, Command line REPL",Python,,,"Common Lisp, O'Caml, Prolog"
8/2/2010 23:10:29,4 years,"I use it for serious ""hobby"" projects., I use it at work.",,"""Big Data"": Hadoop etc, Commercial products, Commercial services, Math / data analysis, Network programming, System administration","vi, yi",C++,,,"C++, F#"
8/2/2010 23:11:01,1 year,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.","Web development, Embedded, Compilers / interpreters, Combinatorial Optimization Problems",vim,Ruby,"1. Steep learning curve.
2. Libraries often become neglected, but it's hard to tell when that is the case. It would be nice if library authors had to log in periodically (annually?) and say ""I'm still maintaining this"" or ""I'm orphaning this"", which would be indicated on the hackage page for that library.","The learning curve is kind of unavoidable I think. Haskell does so much stuff that other languages don't... so this is only a ""weakness"" in the sense that CS programs (and other types of programmer training) need to catch up and educate people. In this vein, I think one of the major strengths of Haskell is the community, which is always very helpful.",Clojure
8/2/2010 23:11:33,2 years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Open source projects, Thick clients: GTK etc",Emacs / haskell-mode,C#,"Prior to the HP's arrival I would have said Windows support in general needed attention.  Now I will say that support for programming rich-client GUI applications is the largest missing piece. The three big contenders are gtk2hs, qtHaskell, and wxHaskell.  Each has its tradeoffs.  As someone who doesn't care about cross-platform support, I wish there was native toolkit support for Mac and Windows.",,C#
8/2/2010 23:12:22,3 years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,Open source projects,Emacs / haskell-mode,C++,"Robust, well-exercised libraries that I can depend on to ""just work"".",,O'Caml
8/2/2010 23:15:53,Just started,I'm just tinkering.,I don't use Haskell at work.,Web development,vi,Python,,,Python
8/2/2010 23:18:52,Months,I'm just tinkering.,I don't use Haskell at work.,Math / data analysis,"vi, TextMate",Python,"It doesn't seem to be such dynamic as Python or Scala. I still like Scala better because you can also easily use the object orientated paradigm. It's very uncommon to only think in the FP way, so even if one does, probably his collegues don't. ",,"Python, Scala"
8/2/2010 23:18:55,4 years,I'm just tinkering.,I don't use Haskell at work.,"Graphics / art, Open source projects, Web development",Emacs / haskell-mode,C++,,,"Erlang, O'Caml"
8/2/2010 23:26:18,3 years,"I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,Compilers / interpreters,vi,Racket,,,Racket
8/2/2010 23:26:19,Just started,I'm just tinkering.,I don't use Haskell at work.,"Math / data analysis, Network programming, Open source projects, Compilers / interpreters",vi,Java,"How different in general it is compared to the mainstream programming languages.  This creates a huge learning curve for most people(like myself, but I'm not giving up!) and makes it difficult to imagine it ever becoming a ""mainstream"" programming language.  ",,"Java, Scala"
8/2/2010 23:27:46,Weeks,"I'm just tinkering., I use it for serious ""hobby"" projects.","I'm lobbying to have it ""endorsed"".","""Big Data"": Hadoop etc, RDBMS programming, System administration, Thick clients: GTK etc, Web development","Emacs / haskell-mode, Command line REPL",Scala,It is seen as overly academic and too hard/dense by peers and management. Removing that stigma would very much make it easier to convince people of the benefits of it.,,"O'Caml, Scala"
8/2/2010 23:28:54,Just started,I'm just tinkering.,I don't use Haskell at work.,"Gaming, Math / data analysis, Open source projects",vi,Python,,,"C, Clojure, Python, Scheme"
8/2/2010 23:33:36,1 year,I use it for my studies.,,Math / data analysis,Emacs / haskell-mode,C++,,,Clojure
8/2/2010 23:34:59,Weeks,"I'm just tinkering., I use it for my studies.",,"Gaming, Network programming, Thick clients: GTK etc, Web development","Eclipse / EclispeFP, Notepad++",Java,"Standard libraries. We need batteries, and god knows they should be GOOD batteries. You should look at the Python model.","I'm gonna quote someone else:

""Start by defining some naming conventions. Simply renaming rwhnf to rseq isn't enough. I have no idea what it means when a function ""sparks its argument"", but I'm pretty sure that function shouldn't be called rpar.

With all do sincerity, I have to say that Haskell Platform makes PHP's libraries look like they are consistent and well organized by comparison. At this point you would do well to literarlly drop everything and start over with an actually plan for the base libaries.""

Another quote:

""It's good to see that no effort was wasted on cleaning up the libraries before adding them to the platform. And not even Java can brag that they actually started with a deprecated date/time library.""","Clojure, O'Caml, Scala"
8/2/2010 23:35:11,3 years,"I use it for serious ""hobby"" projects.",It's used secretly; I'd never be able to use it.,"Math / data analysis, Network programming, Open source projects, System administration, Web development",vi,C++,Text manipulation,,"C++, Go, Perl, SML"
8/2/2010 23:37:07,Just started,I'm just tinkering.,I don't use Haskell at work.,"Gaming, Graphics / art","vi, Leksah, Command line REPL",Python,"libraries and windows support.

",my most recent problem: e.g. http://stackoverflow.com/questions/3381741/haskell-or-ocaml-with-opengl-and-sdl-precompiled-distribution-for-windows,O'Caml
8/2/2010 23:37:26,3 years,"I use it for serious ""hobby"" projects.",,"Graphics / art, Network programming, Web development",vi,Python,Lack of some library documentations,,Python
8/2/2010 23:38:23,Just started,I'm just tinkering.,I don't use Haskell at work.,"Math / data analysis, Open source projects, Finance","vi, Command line REPL",VBA,,,
8/2/2010 23:42:34,5+ years,I use it at work.,"It's ""endorsed"" and used openly and proudly.","Math / data analysis, Open source projects, Compilers / interpreters","Emacs / haskell-mode, Command line REPL",,"For some of my simulations, it comes down to execution speed.  I've had to re-write several key bits of code in C because the way you have to deal with random numbers in Haskell can be hideously slow.

I'd also like to see some improvement on the numeric part of the Prelude.  I know this is happening, but I will be very happy when it's easy to build a vector-matrix library in Haskell without running into trouble with built-in type classes and such.","I don't know if ""work"" is the right word for where I use it-- I'm a math professor, and I use it for a lot of simulations and calculations related to research, and also for the occasional teaching tool.

I also use lots of other programming languages, whichever ones I need.",O'Caml
8/2/2010 23:43:56,5+ years,"I'm just tinkering., I use it for my studies.",I don't use Haskell at work.,Math / data analysis,"Emacs / haskell-mode, nano",C#,It's too difficult.,"I do know how do write a monad or a transform, but it takes quite a while. C# is way easier to read imo.",Ruby
8/2/2010 23:44:08,Months,I'm just tinkering.,I don't use Haskell at work.,Compilers / interpreters,"vi, Command line REPL",Python,People,,"Clojure, F#, Scala"
8/2/2010 23:44:23,1 year,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Open source projects, Web development, Compilers / interpreters","Emacs / haskell-mode, vi, Command line REPL",,"Laziness can be a double-edged sword. I noticed this while doing some performance-tuning for the language I'm writing. Making things strict made a huge difference; heap allocation went down by an order of magnitude, and it got faster and faster with the more !'s I sprinkled in (being careful to only keep ones that showed a benefit of course).","As a language geek, Haskell is the one I have the fewest gripes with, far and away. And it happens to be wonderful to implement new languages in.","Erlang, Ruby, Scheme"
8/2/2010 23:45:49,4 years,"I use it for serious ""hobby"" projects., I use it at work.",It's used secretly; I'd never be able to use it.,"Open source projects, Thick clients: GTK etc, Compilers / interpreters, Scripting","Emacs / haskell-mode, Eclipse / EclispeFP",C++,"Too many libraries are academic projects and become abandonware. In general there should be one 'go to' library for major functional areas, and this should function on all main platforms (Windows, Unix, Mac)

A small community is fragmented at times: e.g. wxhaskell, gtk2hs and qthaskell are all 'nearly' good enough, but don't really have the maintenance effort to be what they should be. Gtk2hs is probably closest to hitting the quality bar, but only on Linux, and with caveat of LGPL licensing, which isn't as commercial friendly as many other haskell libs.

(Disclaimer: I'm wxHaskell maintainer)","Wonderful language, wonderful community.

Libraries getting much better, but too many of the 'big ones' are not as good as they need to be. This is doubtless because database access, GUI bindings, XML parsers and the like hold little academic interest and/or are too large for an undergraduate project.

But I still love it despite the pain...",O'Caml
8/2/2010 23:46:49,1 year,I use it for my studies.,I don't use Haskell at work.,,Emacs / haskell-mode,Java,just its best feature: purity ,haskell is pure beauty with a little bit baroque syntax (but beautiful too),"Clojure, F#, Factor, Scala, J"
8/2/2010 23:48:22,2 years,I'm just tinkering.,I don't use Haskell at work.,"Math / data analysis, Open source projects","Command line REPL, Eclipse / EclispeFP",Python,,,"F#, Python"
8/2/2010 23:48:35,Months,I'm just tinkering.,I don't use Haskell at work.,"Gaming, Math / data analysis",Emacs / haskell-mode,Mathematica,"- Limited name space for methods that apply to objects.
- Ease of use.  (Sometimes you just want to program imperatively.)
- A step by step debugger highlighting the current line or segment of code with windows the display variable values.
- Easy graphics
",I enjoyed using Haskell to solve many of the Euler problems.  I really enjoyed comparing my solutions to the ones given at the Haskell wiki.,"C++, Common Lisp, D, O'Caml, Objective C, Python, Ruby, Smalltalk, Mathematica"
8/2/2010 23:52:03,Just started,I'm just tinkering.,I don't use Haskell at work.,,notepad,PHP,It makes simple things into a PhD thesis.,,C#
8/2/2010 23:52:21,Months,"I'm just tinkering., I use it at work.","I'm lobbying to have it ""endorsed"".","EAI - ""enterprisy"" stuff",Emacs / haskell-mode,Java,"A propensity to explain things in a *way* more complicated way than need be!  This will hopefully be addressed by getting more ""normal"" (e.g. not PLT or category theory nuts) people using it.

Problems?
- Documentation of packages on Hackage
- Package ownership 
- Documentation of standard library functions

(all being addressed afaik)

I think a wiki documentation site similar to MSDN where examples could be added would be great

As an alternative, you can ask a question almost anywhere and guarantee that dons will answer.  However, I fear this doesn't scale too well :)",,Scala
8/2/2010 23:52:54,4 years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.","Open source projects, Thick clients: GTK etc, Web development, Compilers / interpreters, Research",Emacs / haskell-mode,SML,"* There are many advances concepts and research papers,but it is hard to tell which
of these have real applications and which are pure science.

*Haskell should be better promoted (by whoom ever?) as a tool for research outside
the Haskell community, e.g for operating systems, networking, bio informatics,
teaching first year computer science etc.
Most interest seems to be to promote CUFP and programming language research.

*Technically: Many libraries have very poor documentation
","Maybe all of the Haskell promotion, discussions on Reddit,etc . are a waste of time.
People who are interested in Haskell can learn it and people who do not like Haskell will not change their mind anyway.",O'Caml
8/2/2010 23:55:35,Months,I'm just tinkering.,I don't use Haskell at work.,Web development,Leksah,C#,"Record syntax and difficulties generically instantiating records from different data types.  I hate writing code that should be automated.

An example that would be trivial to code in most any other language I've used:
let myMap = [(""firstName"", ""Bob""), (""lastName"", ""Marley"")]
let p = instantiate myMap :: Maybe Person

It is also missing even a semi decent web framework from a non-haskellers point of view.  Yesod is the closest thing I've seen yet, and even that I find lacking in its documentation.",Haskell has some truly amazing constructs that are mind blowing in their simplicity and obviousness (once you grok it).  I just feel that things that should be simple are difficult which really stops me from using it seriously.,"F#, O'Caml, Scala"
8/2/2010 23:55:35,Just started,I'm just tinkering.,I don't use Haskell at work.,,"Emacs / haskell-mode, Command line REPL",Clojure,"I haven't used it enough to have major complaints. I think it's great. Laziness is intellectually cool but I find that it can be a pain sometimes (in Clojure, where the default behavior of many collections is lazy). Still, I haven't used it enough to have serious complaints. ","I'm learning Haskell because it has a lot of cool ideas in it and, the more languages one knows, the more employable one is. ","Clojure, O'Caml"
8/2/2010 23:57:46,2 years,"I use it for serious ""hobby"" projects., I use it for my studies.","I'm lobbying to have it ""endorsed"".","Gaming, Graphics / art, Open source projects",Emacs / haskell-mode,Perl,,,Scala
8/2/2010 23:59:14,5+ years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.","Open source projects, Web development, Compilers / interpreters",Textpad,None,None.,Haskell rocks.,"F#, O'Caml, Scala"
8/3/2010 0:07:05,3 years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Math / data analysis, NLP",vi,C,libraries,,Scala
8/3/2010 0:08:28,Months,"I'm just tinkering., I use it for my studies.",,,Emacs / haskell-mode,Python,,,"Common Lisp, O'Caml"
8/3/2010 0:11:52,5+ years,"I use it for serious ""hobby"" projects.",It's used secretly; I'd never be able to use it.,"Open source projects, Compilers / interpreters",Emacs / haskell-mode,C,,,"Lua, O'Caml, Clean"
8/3/2010 0:12:06,Weeks,"I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"Math / data analysis, Open source projects","Emacs / haskell-mode, TextMate",O'Caml,"* Lack of documentation for standard libraries (which are abandoned, which still have a developper, which actually _work_)
* Lack of doc about openGL (look, there are bindings! good luck!) but I understand that it is not an important point
* TextMate bundle for haskell is bad. Really.
",,"C, C++, O'Caml, Python, Ruby, Scheme"
8/3/2010 0:12:14,3 years,"I use it for serious ""hobby"" projects.","I'm lobbying to have it ""endorsed"".","Network programming, Open source projects",vi,Clojure,,,"Clojure, Scala"
8/3/2010 0:12:37,Months,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,Math / data analysis,Notepad++,Python,,,
8/3/2010 0:12:59,2 years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Network programming, Open source projects, Web development",vi,Python,"My biggest beef is with the record system.  

1. Data types with the same field labels can't live in the same module:

For instance the following code will not compile:
--
module Cartesian where 

data Point2 { x :: Double, y :: Double }
data Point3 { x :: Double, y :: Double, z :: Double} 
--
People seem to work around this by hungarianizing their field names like ""data Point2 = Point2 { pt2X :: Double, pt2Y :: Double}""

2. The prefix syntax to access record fields is awkward.  ""point.x"" or ""point->x"" is easier to use than ""x point"" for me, and ""(subfield $ field record)"" is really hard to read.  To fix the ambiguous selector case above I would add an optional constructor prefix syntax to remove ambiguity.  So instead of ""map x points"" one would be able to write ""map Point2.x points""",,"Python, Scala"
8/3/2010 0:16:18,2 years,I use it at work.,"It's ""endorsed"" and used openly and proudly.","Commercial products, Compilers / interpreters",vi,C,"ghc's portability / build system.  its next to impossible to build a linux binary that works on old ( 4 years) linuxes oses, or build a current ghc release on an old linux.  

this is an issue with trying to deploy any binaries on linux, but with C there are a lot of resources to get around those problems.

also the lgpl code in there makes it a huge pain to get leveraged at work.",,O'Caml
8/3/2010 0:17:58,1 year,"I use it for serious ""hobby"" projects.","I'm lobbying to have it ""endorsed"".","Network programming, Open source projects, Web development, Compilers / interpreters","Emacs / haskell-mode, ghc-mod",Common Lisp,,,"O'Caml, Scheme"
8/3/2010 0:18:23,2 years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.","""Big Data"": Hadoop etc, ""NoSQL"" usage, Commercial products, Commercial services, Network programming, Open source projects, System administration, Web development","Emacs / haskell-mode, Command line REPL",Python,"Its not popular enough, scalability can be difficult.",,"C, Clojure, Erlang, F#, Python, Ruby, Scala, Scheme"
8/3/2010 0:18:48,5+ years,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.",It's used secretly; I'd never be able to use it.,"Commercial services, Math / data analysis",vi,Python,Haskell's doing just fine.,,"C, C++, Lua, O'Caml, Prolog, Python, Scheme"
8/3/2010 0:24:19,5+ years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,Compilers / interpreters,vi,C,,,"Clojure, O'Caml, Python, Scala, Scheme"
8/3/2010 0:25:29,4 years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Math / data analysis, System administration",Emacs / haskell-mode,Java,,"While I don't use Haskell at work currently, I probably will in the future.",Scala
8/3/2010 0:28:03,2 years,"I use it for serious ""hobby"" projects., I use it at work.","I'm lobbying to have it ""endorsed"".","Network programming, Open source projects, Thick clients: GTK etc",vi,C++,Networking performance,,"C++, Erlang"
8/3/2010 0:30:12,Weeks,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Math / data analysis, Finance","vi, Command line REPL",C++,I don't know enough about the language to comment.,Haskell is... nice :),"Erlang, Go, Python"
8/3/2010 0:35:07,5+ years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.",Finance,"vi, Command line REPL",C,Performance analysis: it's difficult to get a clear understanding of what's getting evaluated when.,,O'Caml
8/3/2010 0:35:33,5+ years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,Compilers / interpreters,"vi, Command line REPL",C,,,O'Caml
8/3/2010 0:36:29,1 year,"I use it for serious ""hobby"" projects., I use it at work.",,Compilers / interpreters,vi,C,,,O'Caml
8/3/2010 0:39:11,1 year,I'm just tinkering.,I don't use Haskell at work.,"Embedded, Robotics",Eclipse / EclispeFP,C,"High-End Academic, (Grade School) use, I don't see much use in Mid level Collages in the USA.  Therefore most students are training on .NET, Java, and Python.  It may simply be a Dollars and Cents issue.  There is no overwhelming need or economic incentive to use Haskell.  Much the same can be said for Common Lisp, Scheme, ML.  Very high end applications use these languages but the down and dirty Applications use C#, Java. Python.","I like the language.  I wish a little more effort could be put into EclipseFP. Leksah is more of a grad student's Academic project to prove it could be done.  Eclipse is one of, if not the main,  IDE's outside of Visual Studio (of course NetBean and Emac fans too).  But I find that I have now moved all my development tools to the Eclipse IDE.  C/C++, Python, Java, Clojure, Erlang, and even Google Android and App Engine.  I would say that if you don't do .Net you use Eclipse.",Clojure
8/3/2010 0:41:23,1 year,"I use it for serious ""hobby"" projects., I use it for my studies.",,"Math / data analysis, Network programming, Compilers / interpreters","vi, Command line REPL",Python,"Many Hackage libraries have weak documentation.
Record system. Something like fclabels should be built-in.",,"F#, O'Caml, Python"
8/3/2010 0:43:55,Months,"I'm just tinkering., I use it for my studies.",I don't use Haskell at work.,"Graphics / art, Math / data analysis, Open source projects","Emacs / haskell-mode, vi",Programming languages are tools (I use many above equally),Haskell's largest problem is the community perception by other programmers that Haskell is hard. This is a misnomer that needs to be dispelled and when that happens the rest will come naturally.,I love Haskell and I am going to try and make it the programming language that I use for most things. It is the most promising parallel language that I have ever seen.,Scala
8/3/2010 0:44:10,Just started,I'm just tinkering.,I don't use Haskell at work.,Open source projects,vi,Groovy,,,Scala
8/3/2010 0:44:33,1 year,"I use it for serious ""hobby"" projects.",,"Gaming, Graphics / art, Math / data analysis, Compilers / interpreters","Emacs / haskell-mode, Command line REPL",Clojure,,,"Clojure, Scala"
8/3/2010 0:46:39,2 years,I'm just tinkering.,It's used secretly; I'd never be able to use it.,"Graphics / art, Math / data analysis, Web development, Compilers / interpreters","Command line REPL, TextMate",Python,,,"Clojure, O'Caml"
8/3/2010 0:52:47,Months,I'm just tinkering.,I don't use Haskell at work.,got a NDA handy?,Emacs / haskell-mode,Common Lisp,"Haskell documentation, including ALL published books, wikis, and websites about Haskell, are utter and complete garbage. 

","Haskell is going to remain unpopular just long enough for the next silver bullet to arrive. At which point all Haskell authors and maintainers will abandon it for the Next Big Thing That Will Save Us All. 
","C#, Clojure, Common Lisp, Java, Objective C"
8/3/2010 0:52:51,4 years,"I use it for serious ""hobby"" projects.",,Graphics / art,vi,Java,"Tutorial documentation as well as haddock docs; and obvious-choice libraries so that when you ""need to parse a JPEG"" or similar there's an easy solution without needing to juggle alternatives and try out a few.",Haskell's brilliant! :-),O'Caml
8/3/2010 0:52:56,4 years,I'm just tinkering.,I don't use Haskell at work.,"Gaming, Math / data analysis, Open source projects",vi,C++,"- memory and speed optimization to sane levels can be VERY daunting and non-intuitive to entry/moderate level programmers
- encapsulation of some libraries still feels very imperative and makes transparent use in a pure functional sense feel clunky
- ""needing"" a ""custom"" monad for about everything can become annoying
- Rather little material/tutorials on how to build large-scale applications that can be refactored/changed in a reasonable way",,"Erlang, F#, Python, Scala, Scheme"
8/3/2010 0:54:20,Months,"I'm just tinkering., I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Graphics / art, Math / data analysis, CAD/CAM",Emacs / haskell-mode,C#,"Difficult initial learning curve, lack of documented examples, very terse syntax and tendency to switch between infix, prefix and abbreviated syntax confusing for someone used to more consistent languages. Examples on functional data structures with diagrams and efficiency analysis would be useful. Many options for standard libraries (e.g. XML or RDBMS access) without clear recommendations for the 'leading' library and lack of an SPI interface which makes it hard to switch packages.",,"C#, F#, Scheme"
8/3/2010 0:56:50,Weeks,"I'm just tinkering., I use it for serious ""hobby"" projects.",,Math / data analysis,Command line REPL,Javascript,"The requirement of wrapping/unwrapping newtypes - I can't remember whether to use runState or runStateT, even though they're pretty much the same.",,Javascript
8/3/2010 0:57:41,2 years,I'm just tinkering.,I don't use Haskell at work.,"Math / data analysis, Open source projects","Emacs / haskell-mode, Command line REPL",C,,,D
8/3/2010 0:59:19,5+ years,"I use it for serious ""hobby"" projects., I use it at work.","I'm lobbying to have it ""endorsed"".","Open source projects, Non-Programming-language research",vi,Java,,,"Clojure, F#, O'Caml, Python, Scheme"
8/3/2010 1:03:18,1 year,I'm just tinkering.,I don't use Haskell at work.,Network programming,intellij idea,Scala,,,"Erlang, O'Caml, Scala"
8/3/2010 1:03:29,1 year,I'm just tinkering.,I don't use Haskell at work.,Network programming,intellij idea,Scala,,,"Erlang, O'Caml, Scala"
8/3/2010 1:04:01,5+ years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Math / data analysis, Network programming, Open source projects, Thick clients: GTK etc, Web development",Emacs / haskell-mode,,OS X 64-bit support is still missing,,O'Caml
8/3/2010 1:06:00,,"I use it for serious ""hobby"" projects., I use it for my studies.",,"Math / data analysis, Open source projects, Compilers / interpreters","Emacs / haskell-mode, Command line REPL",Python,"Creation of libraries to support heterogeneously-typed generic programming has proved difficult for me; preexisting libraries have been difficult to integrate, and boilerplate quickly erases the benefits of using the support library to begin with.",,"Common Lisp, Python"
8/3/2010 1:06:50,Just started,I'm just tinkering.,I don't use Haskell at work.,Open source projects,,Java,,,Go
8/3/2010 1:09:10,3 years,"I use it for serious ""hobby"" projects.","I'm lobbying to have it ""endorsed"".","Math / data analysis, Network programming, Open source projects, RDBMS programming, Web development","Emacs / haskell-mode, Command line REPL",C++,"The obvious fact that non-serious programmers can't and won't use it at all for its difficulty. Type classes, Polymorphism, Monad, Arrow, GADT, TH...",,"C++, Common Lisp, O'Caml, Scheme"
8/3/2010 1:13:02,2 years,"I'm just tinkering., I use it for serious ""hobby"" projects.",It's used secretly; I'd never be able to use it.,"""NoSQL"" usage, Network programming, System administration, Web development","Emacs / haskell-mode, Command line REPL, TextMate",Java,"High quality libraries, but this has definitely improved since I started messing around with Haskell. Also, I'd like to see more research into tools for developing Haskell that takes advantage of all it has to offer. Also, the fact that once you learn about its awesome type system and you start learning about other possible enhancements, you immediately want them because they seem ridiculous awesome too. Maybe that isn't really a weakness. :)","I really like Haskell, and I hope that it continues in its development and that more people join the community.","Clojure, F#, O'Caml, Ruby"
8/3/2010 1:15:20,2 years,"I'm just tinkering., I use it at work.","It's ""endorsed"" and used openly and proudly.",Indexing,"Emacs / haskell-mode, Command line REPL",Fortran,,,Common Lisp
8/3/2010 1:16:42,5+ years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Network programming, Open source projects, System administration, Web development","Emacs / haskell-mode, Command line REPL",Python,"Needs more 'everyday' libraries.
Look at the list of modules available with a standard Python install.",,Agda
8/3/2010 1:18:17,1 year,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Network programming, System administration","vi, Command line REPL",C++,The error messages of GHC.,,Scala
8/3/2010 1:20:40,3 years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Graphics / art, Network programming, Homebrew media center project",Emacs / haskell-mode,C++,,,"C++, Python"
8/3/2010 1:32:03,5+ years,"I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.","""Big Data"": Hadoop etc, Math / data analysis, Open source projects, Compilers / interpreters","vi, Eclipse / EclispeFP",,Too complex a type system for novices: there should be a subset of the language with a simple polymorphic type system whose messages could be easily understood by anyone (eg. non-computer science students),,"Common Lisp, Erlang, F#, Scala, Scheme"
8/3/2010 1:38:52,5+ years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.","Commercial products, Gaming, Graphics / art, Math / data analysis, Network programming, Open source projects, System administration","Command line REPL, vim","It was 9 years ago so I don't remember so clearly, a bunch of imperative languages including C, Pascal and Java.","We haven't got a good enough way to move forward with respect to base libraries, like the Prelude. There's a contention between the view that implementations should always match the standard, and the view that changes to the language should be well-tested before adopting them into a standard. Personally, I think we should keep the latter and weaken the former. Provide standard versions of the libraries, but have a means of trying out future changes on the scale of HackageDB.",,"O'Caml, Agda, Clean"
8/3/2010 1:42:09,3 years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Math / data analysis, Open source projects, Web development",vi,Java,,,"Java, Python"
8/3/2010 1:42:43,Just started,"I'm just tinkering., I use it for my studies.",I don't use Haskell at work.,System administration,Windows notepad & cmd,C++,,,"Clojure, Common Lisp, Erlang, F#, O'Caml"
8/3/2010 1:46:44,2 years,I'm just tinkering.,I don't use Haskell at work.,Math / data analysis,Emacs / haskell-mode,Clojure,Lack of good documentation on how to do IO.,"I'd love to have good bindings for Qt, I don't like Gtk.","Clojure, Python"
8/3/2010 1:51:31,3 years,"I use it for serious ""hobby"" projects., I use it at work.",It's used secretly; I'd never be able to use it.,"Math / data analysis, Compilers / interpreters",vi,Python,,,"O'Caml, Python"
8/3/2010 1:57:40,5+ years,"I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"Math / data analysis, Open source projects","vi, Command line REPL",Java,"Missing mature alternatives to lazy IO, GUI Programming, lack of easy hot code reloading.",,"O'Caml, Clean"
8/3/2010 1:59:16,3 years,I'm just tinkering.,I don't use Haskell at work.,Math / data analysis,Eclipse / EclispeFP,Java,Too small a community.,,O'Caml
8/3/2010 2:07:23,2 years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","I'm lobbying to have it ""endorsed"".","""Big Data"": Hadoop etc, Math / data analysis, Open source projects, System administration",Emacs / haskell-mode,,,,"Clojure, Python"
8/3/2010 2:14:44,2 years,"I'm just tinkering., I use it for serious ""hobby"" projects.",I don't use Haskell at work.,Math / data analysis,vi,C,"I tend to work at the embedded level, and it struck me as being very difficult to do any bit-wise operations.  Also, I haven't found a lot of support for hash tables (although I haven't looked too hard).","I like Haskell a lot, and the biggest problem I see is that it takes a significant paradigm shift to be able to do the basic operations.  It is very hard to change people unless they have a reason.  To start getting noticed you either have to incorporate the old paradigm (which is anathema to the haskell philosophy), or you have to give them something that cleanly shows a higher productivity gain.","Scala, Scheme"
8/3/2010 2:15:29,Months,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,DSL writing,vi,Python,DIfficulty learning all the concepts used. I can get a lot done with a small subset but I feel I'd be better off using more of what Haskell can offer.,,Python
8/3/2010 2:16:23,2 years,"I use it for serious ""hobby"" projects., I use it for my studies.",It's used secretly; I'd never be able to use it.,"Math / data analysis, Open source projects, System administration","vi, Command line REPL",Perl,"Directory traversals, heavily-IO stuff seems to give people problems",,Clojure
8/3/2010 2:20:17,2 years,I use it for my studies.,I don't use Haskell at work.,Web development,Emacs / haskell-mode,Java,,,"C#, O'Caml, Scheme"
8/3/2010 2:21:13,Just started,I'm just tinkering.,I don't use Haskell at work.,,vi,O'Caml,,,"C++, O'Caml, Python"
8/3/2010 2:21:20,2 years,"I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"Graphics / art, RDBMS programming, Web development, Compilers / interpreters",vi,C++,"Lack of big, coherent ""standard"" library set like .NET's. Weak support for byte strings (separate copy of list function which makes some things tedious and not abstract).

Lack of real IDEs with ""intellisense"".

No indentation plugin/script for vim.

Too few books especially when it comes to advanced Haskell.",,"C++, F#"
8/3/2010 2:23:07,3 years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,Commercial products,"Emacs / haskell-mode, Command line REPL",Eiffel,,,F#
8/3/2010 2:27:38,3 years,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"Graphics / art, Math / data analysis, Network programming, Open source projects, System administration, Thick clients: GTK etc, Compilers / interpreters","Emacs / haskell-mode, Command line REPL",Python,,,"O'Caml, Prolog, Scheme"
8/3/2010 2:29:52,3 years,I'm just tinkering.,I don't use Haskell at work.,"Math / data analysis, Finance",vi,Python,,,"O'Caml, Python"
8/3/2010 2:30:54,1 year,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"Math / data analysis, Open source projects","vi, Command line REPL",Java,Difficulty in implementing certain algorithms (especially dynamic programming or anything else involving a lot of state changes),,"Clojure, Erlang, F#, O'Caml, Python, Scala"
8/3/2010 2:32:19,Months,"I use it for serious ""hobby"" projects.","I'm lobbying to have it ""endorsed"".","""NoSQL"" usage, Open source projects, Web development",vi,Ruby,"string interpolation. ie, ""my #{embedded expression} string""

also, needs serious work on simplifying macros and metaprogramming.

these would be a great boon for the working programmer, and would increase the adoption of he language.",,"Clojure, Erlang, F#, O'Caml, Prolog, Scala, Scheme"
8/3/2010 2:32:32,3 years,"I use it for serious ""hobby"" projects., I use it for my studies.",,"Graphics / art, Math / data analysis, Open source projects","Emacs / haskell-mode, Command line REPL",,,,"Go, O'Caml"
8/3/2010 2:34:06,5+ years,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it at work.","It's ""endorsed"" and used openly and proudly.","""NoSQL"" usage, Commercial services, Math / data analysis, Network programming, Open source projects, Compilers / interpreters","TextMate, Command line REPL",,"being able to google rants about haskell that are 5+ years out of date & the fact that cabal + hackage package environmnet stuff being both sophisticated, easy to use, and well documented isn't pimped enough",,"Common Lisp, Lua, O'Caml, Scala, Scheme"
8/3/2010 2:35:21,3 years,I'm just tinkering.,It's used secretly; I'd never be able to use it.,"System administration, Thick clients: GTK etc",Emacs / haskell-mode,Perl,,,"C, C#, Java, O'Caml"
8/3/2010 2:36:24,3 years,"I use it for serious ""hobby"" projects., I use it at work.","It's ""endorsed"" and used openly and proudly.","Gaming, Compilers / interpreters",Emacs / haskell-mode,Objective C,,,"Common Lisp, Scheme"
8/3/2010 2:38:44,Just started,I'm just tinkering.,I don't use Haskell at work.,fun/toys,"Emacs / haskell-mode, Command line REPL",C,It can be difficult for noobs (such as myself) to wrap their (our) heads around lazy evaluation and its subtler implications.,A very cool language that I wish I knew better.,"Erlang, O'Caml"
8/3/2010 2:42:21,Months,I'm just tinkering.,I don't use Haskell at work.,Network programming,vi,C,,,C
8/3/2010 2:43:50,Months,"I'm just tinkering., I use it for my studies.",I don't use Haskell at work.,"Math / data analysis, Open source projects, data munging","Emacs / haskell-mode, Command line REPL",Javascript,Steep learning curve,"I'm glad to see the work on web frameworks; it's nice to see people exploring the design space.  Hopefully before too long there'll be some consensus on which ones are best for which contexts.

At work, I'm trying to build interest in it.  I'm starting to implement toy things, and soon I plan to start reimplementing functioning bbits of existing projects that are written in other languages, and then do a performance/code size comparison.

",Scala
8/3/2010 2:44:23,5+ years,I use it at work.,"It's ""endorsed"" and used openly and proudly.",Higher education,"vi, BBedit and other text editors",SML,"I'd really appreciate something like refinement types, by which I mean sub-types of algebraic data types based on restriction to subset of constructors. This is not a solved problem at a theoretical level, as far as I know.","The Haskell community is a wonderful and welcoming place: I appreciate this as something of an old hand, but I especially appreciate the positive effect it has on newcomers.","Omega, Epigram or Miranda; maybe Mercury"
8/3/2010 2:48:21,5+ years,"I use it for serious ""hobby"" projects.","I'm lobbying to have it ""endorsed"".",Math / data analysis,Emacs / haskell-mode,C++,Lack of polymorphic dynamic type/typeable class.,,Erlang
8/3/2010 2:50:17,4 years,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it at work.","It's ""endorsed"" and used openly and proudly.","Gaming, Open source projects, Embedded, Compilers / interpreters","vi, Command line REPL",C++,"Difficulty of reasoning about performance.  Great performance is possible, but only a few gurus can achieve it.",,"C#, Clojure, F#, Factor, Javascript, O'Caml, Python, Scala, Scheme, Agda, Coq"
8/3/2010 2:51:34,Months,"I'm just tinkering., I use it for my studies.",I don't use Haskell at work.,Open source projects,"vi, Command line REPL",C++,,,O'Caml
8/3/2010 2:54:46,1 year,I'm just tinkering.,It's used secretly; I'd never be able to use it.,,vi,C,,,Erlang
8/3/2010 2:58:43,5+ years,"I use it for serious ""hobby"" projects., I use it for my studies.",,"Open source projects, Compilers / interpreters",yi,C,,,O'Caml
8/3/2010 3:05:56,5+ years,I use it at work.,,"Graphics / art, System administration, Compilers / interpreters",vi,C,,,O'Caml
8/3/2010 3:06:34,3 years,I use it at work.,"I'm lobbying to have it ""endorsed"".",Network programming,Emacs / haskell-mode,C,No efficient array/hash.,,D
8/3/2010 3:12:23,2 years,"I use it for serious ""hobby"" projects., I use it for my studies.","I'm lobbying to have it ""endorsed"".","EAI - ""enterprisy"" stuff, Gaming, Graphics / art, Open source projects, Web development","vi, Command line REPL, Vim haskell mode",C++,,,"Erlang, F#, Python, Ruby, Scala, Haskell2"
8/3/2010 3:14:25,5+ years,"I use it for serious ""hobby"" projects., I use it at work.","It's ""endorsed"" and used openly and proudly.",,vi,Objective C,Needs a large runtime and is still (despite FFI advances) not easy to integrate into other environments. Python is easy to integrate.,"Have used it since 1992 or whenever it was that the committee came up with it. HBC was the compiler back then... a hack of the lazy ml compiler.

I started when IO was done via continuations. While monads are kind of neat, I'm not sure I see the point of all the category theory that's been added since... I don't use it, and am not sure if I'm missing anything.",gofer
8/3/2010 3:15:40,4 years,I'm just tinkering.,I don't use Haskell at work.,"Math / data analysis, Compilers / interpreters","vi, Command line REPL",Python,,,O'Caml
8/3/2010 3:29:07,2 years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.",It's used secretly; I'd never be able to use it.,Math / data analysis,Emacs / haskell-mode,C++,,,Scala
8/3/2010 3:32:03,5+ years,I use it at work.,"It's ""endorsed"" and used openly and proudly.","Commercial products, Open source projects, Embedded, Compilers / interpreters",vi,O'Caml,,,O'Caml
8/3/2010 3:34:23,2 years,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,,TextMate,C,"Cabal, and being able to upgrade GHC without having to reinstall all packages again","GHC is a great compiler, but I find the infrastructure around haskell packages quite lacking.","C, Erlang, Go, Agda"
8/3/2010 3:37:00,Just started,I'm just tinkering.,I don't use Haskell at work.,,Textpad + GHC,C++,,,
8/3/2010 3:45:47,Weeks,I'm just tinkering.,I don't use Haskell at work.,"Network programming, Open source projects, System administration, Web development",Emacs / haskell-mode,"C,C++,Python","Good cornerstone projects for others to follow.

Compilation is not a solution to configuration issues. It gives the perhaps false impression that real configuration management is hard in Haskell.","There is a lot of interesting niche happenings. But to get more ""real world"" support we need to see more real Haskell applications. The demos, tutorials and the like all look good but they are not real projects used by real people.
",Python
8/3/2010 3:45:52,2 years,"I use it for serious ""hobby"" projects.",It's used secretly; I'd never be able to use it.,"""Big Data"": Hadoop etc, Math / data analysis, Network programming, Open source projects, Compilers / interpreters",Emacs / haskell-mode,Python,"Difficult of implementing obvious and necessary programming patterns like memoization.  Also, difficulty of debugging space leaks and performance problems.  And the big hassle of routine text processing that's easy and fast in Python.  Haskell's String type is pathetic slow, ByteStrings need too much hair (imported qualified modules etc) and don't handle Unicode, and IIRC Text isn't ready for prime time yet. 

The best Haskell critique I know of is the intro chapter of B. Lippmeier's PhD thesis explaining why he wrote DDC.  Haskell is a great research testbed but it's getting to be time to completely refactor it and design ""Haskell II"" using the best ideas from Haskell, DDC, Sweeney's POPL presentation,and whatever else.  ","I do a lot of processing of large text files where speed matters.  Even with bytestrings I usually can't get a Haskell program to run as fast as a straightforward Python script.  While the Python interpreter is quite slow, it's usually easy to write the scripts to put all the heavy lifting into built-in C libraries like dictionaries, string slicing, etc. so the scripts run fast.

The Haskell user community is great and extremely smart.  Their intelligence sometimes seems to have a negative effect on the language, since it lets them handle and embrace difficulties that should be considered crazy.  Like having to write simple programs as multi-level monad transformer stacks.","C++, Erlang, O'Caml, Python, Scala, SML, (heh) DDC?"
8/3/2010 3:49:39,,,,,,,,"Addition to previous answer: GHC's library documentation is awful.  At one of the hackathons there should be a doc sprint.  I can write pretty well but don't know Haskell and it's libraries well enough to document them myself.  If I could sit next to a more knowledgeable programmer ""pair programming"" style I think some improvements would result.  I've been messing with Haskell on and off for 2+ years but would describe myself as just out of the newbie stage, it's THAT hard a language.

Oh yes, I'd sure like it if Iteratees were easier to understand and use.",
8/3/2010 3:52:34,4 years,"I use it for serious ""hobby"" projects., I use it for my studies.",,"Math / data analysis, Open source projects, Packaging and maintaining Haskell packages on Gentoo","Emacs / haskell-mode, Command line REPL",Matlab,"Not being able to ""backport"" type classes (e.g. make all Monads instances of Functor, etc.).",fibs = 1 : 1 : zipWith (+) fibs (tail fibs),"Clojure, Erlang, Scala"
8/3/2010 3:54:52,Months,I'm just tinkering.,I don't use Haskell at work.,"Open source projects, Thick clients: GTK etc",Emacs / haskell-mode,C#,,,"C#, F#, Python"
8/3/2010 4:00:23,Months,"I use it for serious ""hobby"" projects., I use it for my studies.","I'm lobbying to have it ""endorsed"".","Commercial services, Math / data analysis, Network programming, Finance",vi,Ruby,"Awaremess, docs and educational materials.","Using Haskell for parallel and Erland/OTP for distribution currently, but Ruby on front end (Web).","Clojure, Erlang"
8/3/2010 4:10:04,Months,I'm just tinkering.,It's used secretly; I'd never be able to use it.,"Math / data analysis, Open source projects, System administration",vi,C++,"Not many big open source projects, a steep learning curve, no middle-to-advanced level books, still not as fast as C.",I still like the language and will continue to use it until I find something better. I think the rigorous academic community that surrounds Haskell development is good for it and sets it apart from other languages.,"Clojure, Common Lisp, F#, O'Caml, Scala"
8/3/2010 4:24:02,Months,I'm just tinkering.,,"Graphics / art, Math / data analysis, Compilers / interpreters","Emacs / haskell-mode, vi, Command line REPL",Python,"Needs more quality books, typo correcting if RWH for v2",,"Clojure, Erlang, Scheme"
8/3/2010 4:36:56,Months,I'm just tinkering.,I don't use Haskell at work.,"Gaming, Web development",vi,Python,"Its syntax is confusing and alien. While it is has brevity, it is too terse and too mathematical. I know that its design is heavily based on maths, I still think that it should be more human, more readable like python.",I love Haskell for its purity. ,"Clojure, Common Lisp, Erlang, Scala, Scheme"
8/3/2010 4:39:51,3 years,"I use it for serious ""hobby"" projects., I use it for my studies.",,"Graphics / art, Web development, Finance",Emacs / haskell-mode,Java,"Build failures due to dependency hell has wasted a lot of my life in all languages I've used. The problem is understandably worse in an experimental language like haskell than in java. The virtual machine seems to have reduced the problem by providing a stable context.  

Not dividing the repos into experimental, testing and stable seems to allow library devs to mark their code as experimental possibly forever in I don't know how many cases. This is a large repository of dependency hell and gives no incentive to progress to industrial-strength testing.

I don't know if it's planned for hackage 2.0 but the ""build failure"" report might be more useful if the build log included the date. ",If the repos were split then the package popularity system might provide a needed incentive to library devs to continue maintenance and developmentand help extend the excellent trusted platform.,O'Caml
8/3/2010 4:45:26,3 years,"I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"Thick clients: GTK etc, Compilers / interpreters","vi, Leksah, Command line REPL",F#,"accessing records, windows support",,"F#, O'Caml, Prolog, Scala, Scheme"
8/3/2010 5:12:23,Weeks,I'm just tinkering.,,Compilers / interpreters,vi,Python,,,"Clojure, Common Lisp, O'Caml, Python, Scheme"
8/3/2010 5:23:59,5+ years,I use it at work.,"It's ""endorsed"" and used openly and proudly.","""NoSQL"" usage, Math / data analysis, System administration, Web development, Finance",Emacs / haskell-mode,O'Caml,"lack of good .NET

reputation of still having some problems (mostly efficiency related) largely solved over last decade.",,O'Caml
8/3/2010 5:26:24,Months,I'm just tinkering.,I don't use Haskell at work.,Math / data analysis,vi,C,,,Common Lisp
8/3/2010 5:32:29,Just started,I'm just tinkering.,I don't use Haskell at work.,"Math / data analysis, Finance",vi,C++,PUBLICITY!!,Make it more popular please,O'Caml
8/3/2010 5:35:49,4 years,I'm just tinkering.,I don't use Haskell at work.,"""Big Data"": Hadoop etc, ""NoSQL"" usage, Math / data analysis, Compilers / interpreters",Emacs / haskell-mode,C++,"The lack of documentation for libraries on Hackage, particularly examples.",Examples for the libraries on Hackage would make using them much easier.  I only use Haskell for projects without deadlines because of the poor documentation.,"Erlang, O'Caml"
8/3/2010 5:47:54,Just started,I'm just tinkering.,I don't use Haskell at work.,Open source projects,"Emacs / haskell-mode, vi",Python,,,Python
8/3/2010 5:54:59,Months,I'm just tinkering.,I don't use Haskell at work.,Math / data analysis,"Kate, Command line REPL",Java,,,Scala
8/3/2010 6:00:55,Just started,I'm just tinkering.,I don't use Haskell at work.,,Emacs / haskell-mode,Ruby,,,"Common Lisp, Erlang, Scheme"
8/3/2010 6:02:32,2 years,I use it for my studies.,I don't use Haskell at work.,Math / data analysis,"vi, Kate",C++,,,"Erlang, F#, O'Caml"
8/3/2010 6:03:05,1 year,I'm just tinkering.,I don't use Haskell at work.,"Math / data analysis, Compilers / interpreters",vi,C++,"Learning curve.
If it isn't taught in schools, only language enthusiasts will pick it up.",I love haskell!,"Clojure, Erlang, F#, O'Caml, Scala, Scheme"
8/3/2010 6:04:42,5+ years,I'm just tinkering.,It's used secretly; I'd never be able to use it.,,Emacs / haskell-mode,Java,records,,"Common Lisp, O'Caml, Scheme"
8/3/2010 6:10:58,Just started,I'm just tinkering.,I don't use Haskell at work.,Math / data analysis,Command line REPL,Proprietary medical databases,"Only one readable learning tool I've found: ""Learn you a Haskell for Great Good,""
and apparent lack of enough support for interoperability with the outside world via embedding in other languages, I/O libraries, bindings, etc. 
","I have little experience, but it seems an amazing paradigm if not forced onto all problems.  Hence the desire for embedding or hybrid languages that offer the full functional paradigm as well as imperative stuff.
","C, Clojure, Common Lisp, D, Erlang, O'Caml, Scala"
8/3/2010 6:17:53,3 years,I use it at work.,"It's ""endorsed"" and used openly and proudly.","Commercial products, Gaming, Graphics / art, Network programming, Open source projects, Embedded",Leksah,C++,space leaks,"Haskell isn't the perfect language, but it does seem to be the best.",O'Caml
8/3/2010 6:22:46,Just started,I'm just tinkering.,I don't use Haskell at work.,"Gaming, Web development","vi, Command line REPL",Erlang,,,"C, Erlang"
8/3/2010 6:24:03,5+ years,"I use it for serious ""hobby"" projects.",It's used secretly; I'd never be able to use it.,"Graphics / art, Network programming","Emacs / haskell-mode, Command line REPL",C++,the challenge of writing idiomatic code that runs in constant space,,"Erlang, F#, Scala"
8/3/2010 6:26:52,Just started,I'm just tinkering.,"I'm lobbying to have it ""endorsed"".",,Emacs / haskell-mode,C#,Less availability of cross platform libraries,,
8/3/2010 6:33:46,Just started,I'm just tinkering.,I don't use Haskell at work.,"Math / data analysis, Euler project","Command line REPL, Kate / Gedit",Python,Hard to learn beyond the basics.  Have not used it enough to have found another weakness.,"I would love to see concurrency like that of erlang in Haskell, easily usable.","Go, Python"
8/3/2010 6:34:28,1 year,"I'm just tinkering., I use it at work.",It's used secretly; I'd never be able to use it.,Scripting,Emacs / haskell-mode,Java,too hard to debug ,,"Clojure, Scala, Scheme"
8/3/2010 6:35:43,3 years,"I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"Gaming, Graphics / art, Math / data analysis, Open source projects, Compilers / interpreters","Emacs / haskell-mode, Command line REPL",Python,,,"C#, Clojure, D, Go, Javascript, Python"
8/3/2010 6:38:34,Months,I'm just tinkering.,I don't use Haskell at work.,"Gaming, Graphics / art, Open source projects",Emacs / haskell-mode,C++,"Lack of documentation targeted at rank newbies. Rather something like ""How to do X"" type of code fragments would be nice. Too many scary buzzwords ""monad"", ""functor"", ""arrows"", ""applicative"", ""traversable"" etc.,
",,C++
8/3/2010 6:44:55,5+ years,I use it at work.,"It's ""endorsed"" and used openly and proudly.","Commercial services, Network programming, Web development","Emacs / haskell-mode, Command line REPL",Scheme,"At times, it seems GHC develops too fast. Some of the features are introduced
a bit too fast. In general though, Haskell is better than everyone in managing
the conflict between stability and research. More Haskell compilers would be
good though.
",,O'Caml
8/3/2010 6:48:10,4 years,I'm just tinkering.,I don't use Haskell at work.,"Thick clients: GTK etc, Compilers / interpreters",Emacs / haskell-mode,Java,,,Clojure
8/3/2010 6:51:14,5+ years,I use it for my studies.,I don't use Haskell at work.,"Thick clients: GTK etc, Compilers / interpreters",Emacs / haskell-mode,JRuby,"Difficulties installing, especially when adding other packages. Example, getting gtk2hs to work on Mac.",,"JRuby, O'Caml, Ruby, Scala"
8/3/2010 6:55:38,5+ years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Gaming, Math / data analysis",Leksah,C#,Packages inconsistencies.,,F#
8/3/2010 7:02:22,Weeks,I'm just tinkering.,I don't use Haskell at work.,Open source projects,"Emacs / haskell-mode, vi, Command line REPL",C,"Steep learning curve.

Hard to think about performance implications of lazy evaluation.",,"O'Caml, Standard ML"
8/3/2010 7:10:47,Weeks,I'm just tinkering.,I don't use Haskell at work.,"Math / data analysis, Network programming, RDBMS programming, System administration, Web development",vi,Objective C,,,Scheme
8/3/2010 7:13:43,2 years,I use it for my studies.,"I'm lobbying to have it ""endorsed"".","""NoSQL"" usage, Commercial products, Math / data analysis, Web development, Finance",Emacs / haskell-mode,Ruby,learning curve,haskell rulez,"Erlang, F#, O'Caml, Scala"
8/3/2010 7:16:09,3 years,I'm just tinkering.,I don't use Haskell at work.,,Emacs / haskell-mode,Clojure,"Libraries. I need a commercial grade pdf library.
",,"Clojure, Common Lisp, F#"
8/3/2010 7:38:32,Weeks,"I'm just tinkering., I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Network programming, Open source projects",vi,C++,not enough decent tutorials for someone with little functional programming/discrete math experience to get started,,"C++, Java, Scala"
8/3/2010 7:46:07,5+ years,I'm just tinkering.,I don't use Haskell at work.,Math / data analysis,"Command line REPL, Eclipse / EclispeFP, Notepad",Python,"(Lack of) documentation of Hackage packages.

(We really need to make it easier for the community to add/modify the documentation, e.g. wiki-style interface on Hackage.)","I currently use Haskell for toying around and calculations.

(Largest application I've written was a simple genetic algorithm for TSP. Still planning on writing a larger application in Haskell one day)","C#, Clojure, Erlang, F#, Python"
8/3/2010 7:56:11,3 years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"""NoSQL"" usage, Gaming, Graphics / art, Math / data analysis, Open source projects, Web development",,O'Caml,"Lack of good accessible information on advanced topics.  RWH demystified a lot of topics, but there are a lot of topics not covered, for example the ST monad, zippers, happy, FRP, arrows, etc...

As far as libraries go, support for distributed computing is weak.  Simple, Erlang-style message passing would be a nice thing to have.

I'd like to see more ambitious projects done in Haskell.  This might be largely due (strange as it might seem for a 20 year old language) to the relative youth of Haskell - most large, successful software projects are old enough that Haskell wasn't a viable option when the project got started, even if they may be now.  However, the community could be more proactive about taking on bigger projects.",,"Erlang, F#, O'Caml"
8/3/2010 7:57:18,Just started,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.",It's used secretly; I'd never be able to use it.,"Gaming, Graphics / art, Math / data analysis, Network programming, Open source projects, Thick clients: GTK etc, Web development, Compilers / interpreters","Emacs / haskell-mode, vi, Command line REPL",Clojure,,,"C, C++, Clojure, Common Lisp, Erlang, Factor, Lua, O'Caml"
8/3/2010 7:58:41,Months,I'm just tinkering.,I don't use Haskell at work.,,"Notepad++,Gedit",C++,"1) Lack of success stories in corporate or web development.
2) Lack resources on Functional program design.","Haskell is a very beautiful,expressive and powerful language. The haskell community is very knowledgeable, helpful,active. But the community as such is not so huge like other languages. I am just a beginner in haskell. I hope to get better and involve in some open source projects in haskell.",O'Caml
8/3/2010 8:01:32,5+ years,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.",It's used secretly; I'd never be able to use it.,"Commercial products, Commercial services, Network programming, System administration","Emacs / haskell-mode, jedit",Python,"1. Lazy evaluation by default is a horrible design decision. This is the single worst feature of the language.

2. Social problems; nobody wants to learn it. The community is intelligent, sophisticated and polite, but not very humble. Also, they tend to focus on issues that make industry workers yawn.

",,"C#, Clojure, F#, Factor, Go, Python, Scala"
8/3/2010 8:05:33,5+ years,I use it at work.,"It's ""endorsed"" and used openly and proudly.","Math / data analysis, Compilers / interpreters",vi,None,,,O'Caml
8/3/2010 8:09:17,1 year,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Network programming, Thick clients: GTK etc, Compilers / interpreters","vi, Leksah",O'Caml,,,"O'Caml, Scala"
8/3/2010 8:12:33,1 year,I'm just tinkering.,I don't use Haskell at work.,Math / data analysis,vi,C++,,,Python
8/3/2010 8:25:24,Just started,I'm just tinkering.,I don't use Haskell at work.,Math / data analysis,ghci + Notepad++,C++,"There are no good tutorials for more complex or weird (at least for C++ developers) concepts. Usually the stuff is explained in academic way (definition that noone understands before reading it dozen times, etc.), but there are no examples and it scares the hell out of people learning Haskell. I'm a Getting Shit Done person, so what I'm looking for is something like this:

1. Here's the problem
2. We cannot solve it using all stuff we've already learnt.
3. But fortunately, Haskell has XXX (where XXX is some new concept)
4. We write this code, which is elegant, short and solves our problem.
5. Go to 1 until all concepts are fully explained.",,"Erlang, Scala"
8/3/2010 8:25:51,Months,I'm just tinkering.,,"Math / data analysis, Compilers / interpreters","Emacs / haskell-mode, vi, yi, Command line REPL",Python,,,"Common Lisp, F#, Go"
8/3/2010 8:26:02,Weeks,I'm just tinkering.,I don't use Haskell at work.,"Gaming, Graphics / art, Open source projects",vi,Python,not eough library and tools for real world programming.,,"Go, Python"
8/3/2010 8:32:31,Just started,I'm just tinkering.,I don't use Haskell at work.,"Thick clients: GTK etc, Web development","Emacs / haskell-mode, vi",Perl,,,"Clojure, Perl, Python"
8/3/2010 8:32:37,Just started,I'm just tinkering.,I don't use Haskell at work.,Web development,Emacs / haskell-mode,Ruby,,,Clojure
8/3/2010 8:37:37,4 years,I'm just tinkering.,I don't use Haskell at work.,"Math / data analysis, Open source projects, Web development",vi,Java,"Fluctuating, non-backwards-compatible libraries.
Failed UI abstractions.",,
8/3/2010 8:43:38,1 year,"I'm just tinkering., I use it for my studies.",It's used secretly; I'd never be able to use it.,"Math / data analysis, Open source projects",Emacs / haskell-mode,Python,,,A longing pang for Haskell
8/3/2010 8:47:23,Months,"I'm just tinkering., I use it for my studies.",I don't use Haskell at work.,Math / data analysis,vi,C,,,Python
8/3/2010 8:48:50,4 years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.","Gaming, Graphics / art, Open source projects","vi, Command line REPL",None,Annoying record manipulation semantics.,,"Common Lisp, Erlang, F#, Scheme"
8/3/2010 8:58:00,3 years,"I'm just tinkering., I use it for serious ""hobby"" projects.",It's used secretly; I'd never be able to use it.,"Math / data analysis, Open source projects, support to commercial product","Emacs / haskell-mode, Command line REPL",Perl,"inheritance (OO)
",,Common Lisp
8/3/2010 8:59:48,Just started,I use it for my studies.,,Math / data analysis,vi,Perl,,Love it,C
8/3/2010 9:02:23,2 years,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"Math / data analysis, Compilers / interpreters",vi,sml,"Lack of a standardized set of libraries for communicating with the outside world. The haskell platform should span over a greater set of libraries, which should be guaranteed to work on all platforms on each release.",,"F#, O'Caml, Scala"
8/3/2010 9:03:24,2 years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","I'm lobbying to have it ""endorsed"".","Math / data analysis, Open source projects, Compilers / interpreters, static analysis",vi,Python,"- some libraries are still missing
- sometimes it's hard to decide which library to use (but that should be improved with the new versions of hackage :) )",,"Clojure, F#, O'Caml, Scala"
8/3/2010 9:05:33,3 years,"I'm just tinkering., I use it at work.",It's used secretly; I'd never be able to use it.,"EAI - ""enterprisy"" stuff, Network programming, RDBMS programming, System administration",Kate,C,"Documentation. Most of the time, only minimal haddock api reference is provided. 

Scattering of the documentation. api docs are on hackage, tutorials are on blog posts or somewhere else, papers yet somewhere else.

Documentation inadequate for coding environments, for example Leksah gives this on code completion for map :

map :: forall a b. (a -> b) -> [a] -> [b]

which is fine, but how about :

map :: forall a b. (a -> b) -> [a] -> [b]
map 
  f   -- function to be applied to list elements 
  l  --  a list of elements to be mapped

Now we all know what map is about, but for other functions it'd help to have that kind of information stated in simple terms.



",,"C, Python, Scala"
8/3/2010 9:05:56,5+ years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","I'm lobbying to have it ""endorsed"".",Open source projects,Leksah,Scheme,"Records, handling of cyclic module dependencies",,"O'Caml, Prolog, Scala"
8/3/2010 9:19:03,2 years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,Math / data analysis,Emacs / haskell-mode,PHP,"The difficulty of getting started.

The separation between pure and impure, and use of Monads to bridge this.

The frustration when the compiler/interpreter refuses your code, and the error messages are meaningless to a novice","A great language and liberating programming paradigm.

Proficiency drives home the usage of functional programming, there is not fallback to old habits, so you have to learn the right way.  This leads to frustration on the way, but is the only way.

Realistically, not sure how much of the learning curve is functional programming and how much is Haskell","Erlang, Python, Scala"
8/3/2010 9:21:04,3 years,"I'm just tinkering., I use it for my studies.",I don't use Haskell at work.,learning,Notepad++,Java,"Stuff reported here:
""A Trip Down Memory Lane in Haskell"" 
http://www.twistedsquare.com/Haskell-Experience.pdf

",,Scala
8/3/2010 9:22:43,1 year,I'm just tinkering.,It's used secretly; I'd never be able to use it.,Compilers / interpreters,TextMate,C,"bad array support

- ghc doesn't give a warning when you access past the end of an array and it's statically provable. instead your program just returns error. i never figured out how to trace it.
- ghc doesn't compile array code into .rodata, instead it's lazily recreated on the heap when you access it.
- the fast vector classes seem to concentrate on parallelism. this is not useful for small arrays because they're not worth the effort to schedule into multiple threads

arrays are really great so i would like more of them.

also records infect the namespace really bad",,"C, Clojure, Ruby"
8/3/2010 9:25:10,2 years,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"Gaming, Graphics / art, Math / data analysis, Network programming, Open source projects, RDBMS programming, Finance, Compilers / interpreters","vi, yi",Scala,"The base libraries could be better (category-extras, numeric-prelude). I feel that there is a lot of confusion on dealing with exceptions. Lazy probably shouldn't be default. It would be nice to be able to control the importing of class instances.",,"Clojure, O'Caml, Scala"
8/3/2010 9:29:07,4 years,I use it at work.,"It's ""endorsed"" and used openly and proudly.","Commercial services, Network programming",vi,Ruby,It is difficult to create a fast bridge between Haskell and Ruby to share libraries.,"My company, Scyfy Technologies, uses Haskell happily. Few hands at any one time, so I do not know about scaling issuesâ€”if any should be possible.","Erlang, Java, Python, Ruby, Smalltalk"
8/3/2010 9:31:35,3 years,"I use it for serious ""hobby"" projects.",,"Gaming, Math / data analysis, System administration, Web development, Compilers / interpreters",Emacs / haskell-mode,C,"Too hard to write incorrect programs, people who write incorrect programs don't like it.",go haskell!,Agda
8/3/2010 9:37:54,5+ years,I use it at work.,"It's ""endorsed"" and used openly and proudly.",Web development,Emacs / haskell-mode,Pascal,,,"Clojure, F#, Javascript"
8/3/2010 9:48:57,Months,"I'm just tinkering., I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Math / data analysis, Open source projects, Compilers / interpreters",Emacs / haskell-mode,Common Lisp,I really miss a fully-fledged REPL (as in Lisp).,"It took a while before I decided to give Haskell a try. I've been using other functional languges for a while (5-10 years) but somehow I got the impression that Haskell would be too difficult to pick up. Now that I've started using it, I wonder why I didn't try to learn it earlier.","Scheme, Qi"
8/3/2010 9:49:08,3 years,I use it at work.,"It's ""endorsed"" and used openly and proudly.",Finance,vi,C++,Needs better debugger (e.g. no dynamic nor static/creation stacks are available).,,"C#, F#, Java, O'Caml, coq"
8/3/2010 10:02:34,Weeks,I'm just tinkering.,I don't use Haskell at work.,RDBMS programming,vi,Perl,,,Common Lisp
8/3/2010 10:09:13,3 years,I'm just tinkering.,I don't use Haskell at work.,Compilers / interpreters,Command line REPL,Scala,"New code is hard to read, libraries are hard to learn",,Scala
8/3/2010 10:09:42,2 years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"RDBMS programming, Web development",Emacs / haskell-mode,C++,"records, no ""1st class"" setters, and the namespace pollution of record accessors ",,Scala
8/3/2010 10:10:01,2 years,"I use it for serious ""hobby"" projects., I use it at work.","It's ""endorsed"" and used openly and proudly.",Compilers / interpreters,"Emacs / haskell-mode, vi",Python,a killer web framework,,"O'Caml, Scala"
8/3/2010 10:14:47,Months,I'm just tinkering.,I don't use Haskell at work.,Graphics / art,vim,C++,"Very ""mathsy"", but that's also a good thing.",,Clojure
8/3/2010 10:18:04,Months,I'm just tinkering.,I don't use Haskell at work.,"""Big Data"": Hadoop etc, ""NoSQL"" usage, Math / data analysis, Network programming, Open source projects","vi, Command line REPL",Python,,,Clojure
8/3/2010 10:20:24,5+ years,"I'm just tinkering., I use it for my studies.","I'm lobbying to have it ""endorsed"".","""NoSQL"" usage, Math / data analysis, Compilers / interpreters",Gedit,C#,lack of stable libraries,,"C#, O'Caml, Python"
8/3/2010 10:23:31,1 year,I use it for my studies.,"It's ""endorsed"" and used openly and proudly.",Compilers / interpreters,TextMate,C#,"The IDEs are fragmented: no integrated debugging (inspect values), no proper code completion, no cabal file help (guide with syntax coloring).

GHCs error messages are not obvious.","Even after one year, Haskell still makes me think differently, but the tools are starting to become a nuisance.","C#, Lua, Python, Scala"
8/3/2010 10:23:49,Weeks,I'm just tinkering.,I don't use Haskell at work.,"Gaming, Open source projects","vi, Command line REPL",C,"1. Impossible to reason about program performance: this means that Haskell can be very fast in benchmarks, but is often very slow in practice.

2. Stateful computation just never gets pretty","Imho Standard ML (or similar) would be a very preferable direction to take - basically you get all the advantages of Haskell (functional elegance, purity, terseness) and none of the disadvantages (SML performance is predictable and *excellent*, using state where necessary is simple).","Go, Python, Scheme, Standard ML"
8/3/2010 10:26:33,1 year,I'm just tinkering.,I don't use Haskell at work.,Math / data analysis,vi,C++,,,Ruby
8/3/2010 10:28:28,Months,I'm just tinkering.,I don't use Haskell at work.,Gaming,"vi, Leksah",Java,,,"Clojure, Erlang"
8/3/2010 10:30:43,5+ years,I use it at work.,"It's ""endorsed"" and used openly and proudly.","Graphics / art, Math / data analysis, RDBMS programming, Compilers / interpreters","Emacs / haskell-mode, TextMate",C,"Some built-in, non-overloaded features, for example, if-then-else, pattern matching, equality, etc.",More overloaded built-in constructs would make EDSL development much easier with better end results.,O'Caml
8/3/2010 10:37:48,5+ years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","I'm lobbying to have it ""endorsed"".","""Big Data"": Hadoop etc, Math / data analysis, Open source projects, Compilers / interpreters, Natural Language Processing","vi, Command line REPL, jEdit, because it's my standard text editor (though I'm planning on changing it; but never to Eclipse)",Perl,"A lack of standardization about what constitutes ""modern Haskell"". The haskell' committee has finally started rolling out progress, but we should see more of that. Often times one is forced to choose between vanilla Haskell vs current GHC, but there's no real guidance for how that will affect portability (i.e., whether portability may be possible in the future) or which language features and practices are now considered obsolete. Another example is the issues surrounding mtl vs more modern libraries; as well as the parsec and quickcheck versioning debacles. As such, programming practices seem more fractured now than they did in the GHC-6.6/Hugs and GHC-6.8 days. We need more ""checkpointing"" on the current state of Haskell; like Hugs used to provide vs GHC. Hopefully, UHC, JHC, and haskell' can help to reverse that trend.

Another problem regarding language design are the issues surrounding type classes, i.e. orphaned instances, the basic hierarchy, etc. These are open research areas, but it seems like if/once a solution is found, it will be considered too radical for integration to Haskell itself rather than a successor language. Perhaps some thought should be paid to how we could work through such revolutionary changes without discarding all old code.",,"Clojure, O'Caml, Agda, Epigram, or Coq"
8/3/2010 10:41:03,5+ years,I'm just tinkering.,I don't use Haskell at work.,Math / data analysis,Emacs / haskell-mode,Python,,,"Clojure, F#, O'Caml, Python, Scheme"
8/3/2010 10:43:07,1 year,I'm just tinkering.,I don't use Haskell at work.,Network programming,"Emacs / haskell-mode, vi",Python,"Too difficult to grasp ?
No clear choice of recommended libraries (packages).
Lack of clear documentation of libraries/packages.",,Clojure
8/3/2010 10:51:24,1 year,I'm just tinkering.,I don't use Haskell at work.,Commercial products,"Notepad++, Smultron",C#,"Lack of good IDE.  This puts road-blocks in the way of casual tinkers.  Perhaps a rich graphical learning environment would make getting over the change to thinking (for the vast majority of active commercial programmers) easier, or at least more fun/engaging. ",I would love to use (or even recommend) Haskell at work under certain circumstances.  I'm interested in projects that bring it into the fold of managed lanaguges.  .NET is of particular interest to me; I notice there's a Haskell.Net project but it looks to be moribund.,"Clojure, F#, O'Caml"
8/3/2010 10:51:39,2 years,"I use it for serious ""hobby"" projects.","I'm lobbying to have it ""endorsed"".","Math / data analysis, Network programming, Finance","Emacs / haskell-mode, vi",Java,,,
8/3/2010 11:00:48,5+ years,"I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"Math / data analysis, Web development, Compilers / interpreters",Emacs / haskell-mode,C++,,,"C++, Javascript, Python, Scheme"
8/3/2010 11:05:44,1 year,I use it for my studies.,"I'm lobbying to have it ""endorsed"".",,vi,C,,,"O'Caml, Agda"
8/3/2010 11:08:44,3 years,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"Gaming, Graphics / art, Math / data analysis, Network programming, Open source projects, System administration, Thick clients: GTK etc, Compilers / interpreters","Emacs / haskell-mode, yi, Command line REPL",C++,"performance, memory consumption",,"Agda, Gallina"
8/3/2010 11:11:18,5+ years,I use it at work.,"It's ""endorsed"" and used openly and proudly.","Open source projects, Embedded, Compilers / interpreters",Geany,Ada,,,O'Caml
8/3/2010 11:18:51,5+ years,"I use it for serious ""hobby"" projects., I use it at work.","It's ""endorsed"" and used openly and proudly.","""Big Data"": Hadoop etc, Commercial products, Math / data analysis, Network programming",Emacs / haskell-mode,Ruby,Dynamic Programming / Macro,Type classes are wonderful.,"Prolog, Ruby, Agda"
8/3/2010 11:21:26,5+ years,"I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"Open source projects, Compilers / interpreters",TextMate,Java,"The fact that it takes so much time and effort from a person to appreciate it.

I remember doing the FP course at Utrecht University. Afterwards, while I was interested, I wasn't that enthusiastic about the language. And that was after 10 weeks of 10 hours/week getting to know the language.

I fear people will not give the language the chance it deserves and give up too soon.
",,"C#, F#, O'Caml, Scala"
8/3/2010 11:26:36,1 year,"I use it for serious ""hobby"" projects.",It's used secretly; I'd never be able to use it.,"Compilers / interpreters, prototypes of parallel applications","Emacs / haskell-mode, Notepad++",C++,obtaining efficient program without cabalistic code optimization,,C++
8/3/2010 11:28:21,2 years,I'm just tinkering.,I don't use Haskell at work.,Math / data analysis,vi,Python,,,Python
8/3/2010 11:43:02,Months,"I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,Math / data analysis,Gedit,Ruby,Don't feel sufficiently experienced to comment.,"Learned to code in C/C++, preferred functional paradigm but found Lisp unwieldy. Came across Haskell in one of those 'if programming languages were religions' pieces (Haskell == Daoism), looked it up, realised it was what I was looking for and ran with it.","C, C++, Common Lisp"
8/3/2010 11:46:59,Months,I'm just tinkering.,I don't use Haskell at work.,"Math / data analysis, Open source projects, RDBMS programming",Emacs / haskell-mode,C,,,"Clojure, Erlang, Python"
8/3/2010 11:47:20,4 years,"I'm just tinkering., I use it for my studies.",I don't use Haskell at work.,"Math / data analysis, Open source projects, Compilers / interpreters",Emacs / haskell-mode,Java,,,"F#, O'Caml, Scala"
8/3/2010 11:57:14,Months,"I'm just tinkering., I use it for my studies.",I don't use Haskell at work.,"Math / data analysis, Compilers / interpreters",vi,C,,,C
8/3/2010 12:01:47,Months,I'm just tinkering.,I don't use Haskell at work.,,Emacs / haskell-mode,Ruby,"The jump in difficulty between ""simple"" one-liners and short programs and the number of abstract concepts you need to grasp in order to design a reasonably sized program. There are lots of tutorials / books etc. on the language itself, but no equivalent of ""Design Patterns"" that I have found.",,Scala
8/3/2010 12:03:20,1 year,I use it at work.,"It's ""endorsed"" and used openly and proudly.","Network programming, Web development",Leksah,Java,"absence of ""Good Practice"" books. As a learning Haskell developer, i see lots of code, but have problem understanding it. Seems, authors of the code know something ;-). Their code, even if hardly understandable, seems simple in its structure. My Haskell code is terrible and complex, i fight with the language instead of using it properly: my functions are long and deeply nested. If I separate them and try to make them generic, I cannot do it successfully and abstract them and make them generic enough. I can understand ""existing"" monads. But I have little reason using it in my code, because my mind is not stretched enough. I see no docs on arrows, except few. In the same time, books covering basics of Haskell are growing in number. I would like to see the books with real world data patterns (sorry, RWH), and excersises after each chapter ""should it be a functor? you could use zipper here? or (.. add 100 other concepts)"". Because those represent the level of thought in Haskell, not square brackets and sequences, neither fibonacci functions.",see above.,"Erlang, Java, O'Caml"
8/3/2010 12:07:44,4 years,"I use it for serious ""hobby"" projects., I use it for my studies.",,"Graphics / art, Math / data analysis, Open source projects, Compilers / interpreters","Emacs / haskell-mode, Command line REPL",Java,,,"O'Caml, Scheme"
8/3/2010 12:11:43,1 year,"I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.","Math / data analysis, Compilers / interpreters","Leksah, Gedit",Scala,"GUI development, Web development, IDEs
","Great language, needs focus on libraries (haskell platform is a good start), and IDEs - although leksah is coming along nicely. Cheers!","D, O'Caml, Scala"
8/3/2010 12:12:37,Just started,"I'm just tinkering., I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Compilers / interpreters, Project Euler",vi,Python,- Seems hard to write programs that's inherently very statefull.. Wrapping monads into eachother feels difficult.,,"C, Python"
8/3/2010 12:16:16,Months,"I use it for serious ""hobby"" projects.",,"Gaming, Math / data analysis, Open source projects, Compilers / interpreters",Leksah,C++,"Lack of ML-style functors, non-first-class records",,O'Caml
8/3/2010 12:19:47,5+ years,"I use it for serious ""hobby"" projects., I use it for my studies.",It's used secretly; I'd never be able to use it.,"Gaming, Network programming, Open source projects, Compilers / interpreters","Emacs / haskell-mode, Command line REPL",Scheme,lack of users,I want to use Haskell at work.,"C#, D, F#, O'Caml, Python, Scala, Scheme, Agda"
8/3/2010 12:22:20,Just started,I'm just tinkering.,I don't use Haskell at work.,"Math / data analysis, Open source projects, Web development",Gedit,PHP,,,Python
8/3/2010 12:22:52,1 year,I'm just tinkering.,I don't use Haskell at work.,,Emacs / haskell-mode,C,,,O'Caml
8/3/2010 12:25:07,Months,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"Math / data analysis, Finance",vi,Python,,,Python
8/3/2010 12:26:21,1 year,I use it for my studies.,,Math / data analysis,"Emacs / haskell-mode, Command line REPL",C++,,,"O'Caml, Prolog, Python"
8/3/2010 12:49:45,3 years,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies.",,"Gaming, Graphics / art, Math / data analysis, Open source projects, Compilers / interpreters","vi, Command line REPL",C++,The type class hierarchy,,"Clojure, Common Lisp, Erlang, F#, O'Caml, Prolog, Scala, Scheme, Agda"
8/3/2010 13:01:17,Months,I'm just tinkering.,I don't use Haskell at work.,"Open source projects, Compilers / interpreters",Emacs / haskell-mode,Common Lisp,,,Scheme
8/3/2010 13:22:17,1 year,I'm just tinkering.,I don't use Haskell at work.,"Graphics / art, Math / data analysis",Emacs / haskell-mode,Python,"(Not so much of Haskell, but of the tutorials / documentation available...) There seems to be a big ""jump"" from reading the introductory texts, to the more advanced features.  I'd appreciate more intermediate level tutorials.",,"C++, Clojure, Erlang, O'Caml, Objective C, Python, R"
8/3/2010 13:24:18,5+ years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Gaming, Web development",Emacs / haskell-mode,Eiffel,Reasoning about space usage,,Eiffel
8/3/2010 13:29:44,2 years,I'm just tinkering.,I don't use Haskell at work.,"Gaming, Web development","Emacs / haskell-mode, Leksah",Java,,,"Clojure, Scala, Scheme"
8/3/2010 13:33:46,2 years,I'm just tinkering.,I don't use Haskell at work.,Open source projects,vi,C,"Hard to get to know the more 'advanced' things. Once you're familiar with the language, the *morphisms and all are poorly documented from the programmer's point of view.",,Python
8/3/2010 13:48:33,1 year,"I'm just tinkering., I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Math / data analysis, Web development",Emacs / haskell-mode,Python,,vi /= vim,"Clojure, Javascript, Python, Scheme"
8/3/2010 14:05:40,1 year,I'm just tinkering.,"I'm lobbying to have it ""endorsed"".",System administration,"vi, Command line REPL",Perl,"Coming from an OO background it's really hard to get used to the uniqueness of function names and/or qualified names. Sometimes there are a lot of things for which a ""getName"" accessor makes sense.",,Don't know
8/3/2010 14:18:06,3 years,I use it for my studies.,I don't use Haskell at work.,"Math / data analysis, Compilers / interpreters",Emacs / haskell-mode,C#,Idea of avoiding succes at any cost.,,F#
8/3/2010 14:28:32,5+ years,"I'm just tinkering., I use it for my studies.",I don't use Haskell at work.,programming language theory,"Emacs / haskell-mode, Command line REPL",Scheme,"Lack of true reflection:  Because of the type system, Haskell does not have the ability to modify itself during execution without restriction.  Partially because of this restriction, Haskell is not very well suited to developing such an application as a reflective virtual world in which the interpreter/compiler running the world can be changed without restriction from within the virtual world itself.  I am interested in creating this type of virtual world at some point in the future, but because Haskell lacks true reflection, I do not believe that Haskell would be the best language for this type of application.

Unfortunately, the language which I do consider most well-suited, Squeak Smalltalk, does not seem to have a community which can communicate at the same intellectual level as the Haskell community.  In particular, there seems to be a dearth of programming language theory topics in the Squeak community; most Squeakers just seem interested in either writing or using applications, instead of discussing programming language theory.

As a result, almost every time I visit the Squeak-dev Mailing List, I get turned off (""bored out of my skull,"" to quote a phrase used once by one professor in college) by the relative lack of theoretical discussion there, and almost immediately head immediately back to the Haskell-Cafe Mailing List, which has many interesting theoretical topics.  Although some of the topics on Haskell-Cafe are over my head, other topics are relatively easy to understand (although I am a translator, and not a programmer, I did major in computer science at Yale University, and had audited courses under Paul Hudak while in college), and the generally intellectual level of most participants is probably the highest that I have seen anywhere.

While some members of the Haskell-Cafe mailing list have occasionally become upset when I have asked questions that they have seen as sometimes irrelevant (related to mathematics instead of Haskell, for example) or too trivial (one respondent in private e-mail asked me to read a textbook on type theory instead of answering a question on a doctoral thesis that he had written), overall, the discussion, while occasionally characterized by idiosyncratic humor, is extremely witty and highly intellectual.  I like the feeling of being surrounded by a group of mad scientists.

I really wish that there were a programming language community with the intellectual level of Haskell and the programming language features of Smalltalk, but as far as I know, no such community seems to exist.","I wish that Haskell would provide true reflection and a set of libraries providing an engine and tools for building a reflective virtual world similar to the kind that may eventually be able to be developed using Open Cobalt, an ""open-source virtual world browser and toolkit"" (to quote the Open Cobalt Web site (see http://www.opencobalt.org/)).

The discussions on Haskell-Cafe can be fascinating; however, the lack of sufficient libraries and tools for building a reflective virtual world without explicit use of linear algebra makes Haskell ill-suited for building the kind of application that I am interested in eventually constructing (possibly through collaborators).  Nevertheless, the lack of interesting discussions on programming language theory (or on any kind of theory at all) on Squeak-dev make that mailing list difficult (and its associated community) difficult to participate in.

I wish that I could find a discussion group devoted to programming language theory discussion focusing on building a reflective functional virtual world that does not require knowledge of linear algebra (my professor for my discrete mathematics course in college was a visiting professor who only devoted two weeks to discussing linear algebra, and partially as a result, I have not yet mastered that subject (although I am currently learning it)).","Scheme, Smalltalk"
8/3/2010 14:32:47,2 years,"I'm just tinkering., I use it for serious ""hobby"" projects.",,"Math / data analysis, Network programming, Open source projects, System administration, Compilers / interpreters",vi,C,,,"Erlang, O'Caml, Scheme"
8/3/2010 14:36:57,2 years,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies.","I'm lobbying to have it ""endorsed"".","Math / data analysis, System administration",vi,Python,,,"O'Caml, Scala"
8/3/2010 14:37:58,Weeks,I'm just tinkering.,I don't use Haskell at work.,Web development,"Command line REPL, jEdit",Python,,,O'Caml
8/3/2010 14:46:36,1 year,I use it for my studies.,,Compilers / interpreters,"vi, Command line REPL",C,,,
8/3/2010 14:51:13,2 years,"I use it for serious ""hobby"" projects., I use it for my studies.","I'm lobbying to have it ""endorsed"".","Graphics / art, Network programming, Open source projects, System administration","vi, Command line REPL",C,"Heterogeneous collections a la HList for stuff like OOHaskell, but compilable in observably finite time.

The expression problem. It's still not completely clear how to evolve stuff properly (see http://arxiv.org/abs/1005.1213 )

TH needs much, much love. Also, functions should be liftable, at least if the source is available.","Why radio buttons for ""last languages used""?","Lua, O'Caml, Scala, Scheme, Clean"
8/3/2010 14:55:34,Just started,I'm just tinkering.,I don't use Haskell at work.,,jEdit,Java,,,C
8/3/2010 14:58:48,3 years,I'm just tinkering.,I don't use Haskell at work.,"Commercial products, Math / data analysis",Emacs / haskell-mode,O'Caml,,,"O'Caml, Scala"
8/3/2010 15:05:14,3 years,I'm just tinkering.,I don't use Haskell at work.,"Graphics / art, Math / data analysis, Open source projects, System administration","Emacs / haskell-mode, Leksah",Javascript,"I often find myself using different libraries that accomplish the same task because of dependency issues (module x relies on y1, while module z relies on y2). Resolving this problem is complicated because of the lack of a strong module system.",I love haskell -- I would rather spend time getting the code correct when writing it rather than debug it later.,O'Caml
8/3/2010 15:11:18,5+ years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.",Compilers / interpreters,"Leksah, Gedit, Scribes",Java,,,Agda
8/3/2010 15:33:14,5+ years,I'm just tinkering.,I don't use Haskell at work.,,"Command line REPL, Notepad++",C++,,,"Python, Scala"
8/3/2010 15:42:44,1 year,I'm just tinkering.,I don't use Haskell at work.,Math / data analysis,vi,C,,,Ruby
8/3/2010 15:57:44,1 year,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"""Big Data"": Hadoop etc, EAI - ""enterprisy"" stuff, Compilers / interpreters",vi,Java,,,"Go, Java, Python"
8/3/2010 16:02:20,Months,I'm just tinkering.,,Dicking about,Notepad++,C#,,,F#
8/3/2010 16:04:08,3 years,"I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"Math / data analysis, Open source projects","vi, Command line REPL",Python,,,"F#, O'Caml, Python"
8/3/2010 16:07:04,3 years,"I use it for serious ""hobby"" projects., I use it for my studies.",,"Graphics / art, Math / data analysis, Open source projects, Web development, Embedded","Emacs / haskell-mode, Command line REPL",Ruby,"Little things: The prelude could do with being updated with applicative functors etc, numeric typeclass hierarchy could be better structured.",,"Clojure, Common Lisp, Erlang, F#, O'Caml, Scala, Agda"
8/3/2010 16:17:21,Months,I'm just tinkering.,I don't use Haskell at work.,Math / data analysis,Notepad++,C#,,,"Clojure, F#, Scala"
8/3/2010 16:32:03,Weeks,I'm just tinkering.,I don't use Haskell at work.,"Math / data analysis, Finance",vi,Python,"Lack of ""standard"" libraries, lot of incompatible ones (for example on graphs, there are several, incompatible implementations).
Error messages a bit cryptic sometimes.
Memory performance difficult to apprehend, using strictness a bit of dark magic.
I miss a good Vim integration toolchain (refactorer, debugger).",,"Clojure, Erlang, O'Caml, Scheme"
8/3/2010 16:32:35,1 year,I'm just tinkering.,I don't use Haskell at work.,System administration,vi,Python,,,Python
8/3/2010 16:35:54,5+ years,"I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"Math / data analysis, Network programming, System administration, Compilers / interpreters",Eclipse / EclispeFP,Java,,,"C#, F#, Java, Python, Scala"
8/3/2010 16:46:34,Just started,I'm just tinkering.,I don't use Haskell at work.,Math / data analysis,"TextMate, e-texteditor",C,,,"Clojure, Go"
8/3/2010 17:01:35,3 years,I'm just tinkering.,I don't use Haskell at work.,,Emacs / haskell-mode,C#,,,"O'Caml, Agda"
8/3/2010 17:17:29,5+ years,"I use it for serious ""hobby"" projects., I use it at work.","It's ""endorsed"" and used openly and proudly.","Commercial products, Gaming","Geany, Notepad, WinGHCi",C,"The rapid change in APIs; especially if you have a large codebase, you will have to do a lot of work each year to solve bit rot.
","Some projects seem to need more people working on it, like wxHaskell. Some projects have been abandoned, probably because the work was to much for one person, e.g. Turbinado; it would be good to set up project groups for such projects. These groups would need some form of standard documentation, like Functional Specifications and Design documents.

Another point: many libraries need a user guide or tutorial, an API description is not always enough.
","C, Clojure, F#, O'Caml"
8/3/2010 17:34:09,3 years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Open source projects, Web development",Emacs / haskell-mode,C++,"Libraries & library documentation, space leaks",,"C, C++, Clojure, Common Lisp, Javascript, Python, Scala, Scheme"
8/3/2010 17:48:41,Months,"I'm just tinkering., I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"""Big Data"": Hadoop etc, Graphics / art, Math / data analysis, Network programming, Open source projects, System administration, Web development, Finance","vi, Leksah, yi, Command line REPL",Perl,,,Scala
8/3/2010 17:59:28,1 year,"I use it for serious ""hobby"" projects.","I'm lobbying to have it ""endorsed"".","Commercial products, Commercial services, Gaming, Graphics / art, Math / data analysis, Compilers / interpreters","Command line REPL, Gedit, Kate, notepad2 (modified)",C++,"Space leaks
Lack of funding
Dependency on gnu tool chain (not compiler independent)
Difficult to embed",,Scheme
8/3/2010 18:01:25,2 years,"I use it for serious ""hobby"" projects.",It's used secretly; I'd never be able to use it.,Graphics / art,vi,Ruby,high quality libraries,,Scala
8/3/2010 18:15:59,Just started,I'm just tinkering.,I don't use Haskell at work.,,Leksah,C#,IDE/maturity,,F#
8/3/2010 18:24:07,5+ years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Graphics / art, Compilers / interpreters",Eclipse / EclispeFP,Clojure,"There is only a single complete implementation (GHC) and that is monolithic and inflexible. It makes it hard to deploy applications to non-technical end-users and it is hard to build and re-use binary components.  Too much Unix-cruft in the build system.

It needs to be as easy as JVM Jar files.","I know there have been many half-hearted attempts, but we need a serious implementation of Haskell that runs on the JVM.","Clojure, Erlang, Prolog"
8/3/2010 18:46:37,Months,I'm just tinkering.,I don't use Haskell at work.,Math / data analysis,Emacs / haskell-mode,Java,"Lack of library documentation.
",,Common Lisp
8/3/2010 18:54:16,5+ years,I use it at work.,"It's ""endorsed"" and used openly and proudly.","Math / data analysis, Open source projects, Thick clients: GTK etc, Compilers / interpreters",Emacs / haskell-mode,Java,,,Scala
8/3/2010 19:12:30,1 year,I'm just tinkering.,I don't use Haskell at work.,,"vi, Acme",Go,,,"Erlang, Factor"
8/3/2010 19:17:21,4 years,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies.",,"Math / data analysis, Open source projects, Compilers / interpreters","Emacs / haskell-mode, Command line REPL",C++,"- Steep learning curve.
- Type errors for advanced features are somewhat obscure.
- Hard to reason about a program's space requirements.
- Debugging monadic code is not easy.",,"Erlang, F#, O'Caml, Scala"
8/3/2010 19:23:28,3 years,I use it for my studies.,"It's ""endorsed"" and used openly and proudly.",Compilers / interpreters,vi,C++,,,O'Caml
8/3/2010 19:46:15,Just started,I'm just tinkering.,,,"vi, vim",Ruby,,,Ruby
8/3/2010 19:53:32,5+ years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Math / data analysis, Network programming, Open source projects, Web development, Compilers / interpreters",Emacs / haskell-mode,Scheme,,,Scala
8/3/2010 19:56:00,1 year,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"Math / data analysis, Compilers / interpreters, Type theory","Emacs / haskell-mode, Command line REPL",C++,Development environments are too traditional.,,"Clojure, Common Lisp, O'Caml, Scala"
8/3/2010 19:57:39,4 years,"I use it for my studies., I use it at work.","I'm lobbying to have it ""endorsed"".","RDBMS programming, System administration, Compilers / interpreters",vi,Cobol,"Haskell as a language, I can't complain.
Haskell as a platform, hiccup GUI library: No standard. It's hard to sync the whole software  stack release.","Industrial contagion is feasible. But to me, it's more a question of steering and platform stability than technical requirements.

",F#
8/3/2010 20:08:44,5+ years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.",Academy !,"Emacs / haskell-mode, Command line REPL",Java,Laziness is hard !,,"Clojure, F#, O'Caml, Scala, Agda"
8/3/2010 20:11:49,Just started,I'm just tinkering.,I don't use Haskell at work.,Math / data analysis,vi,Scheme,,,Erlang
8/3/2010 20:31:07,1 year,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.",It's used secretly; I'd never be able to use it.,"Math / data analysis, Compilers / interpreters","vi, Command line REPL",F#,Hard to integrate with other languages. Lack of library support on Windows.,"Using Haskell has been a very enlightening experience. In particular, it has totally changed the way I think about static type systems.","C#, D, F#, Python, Scala"
8/3/2010 20:33:29,1 year,I'm just tinkering.,I don't use Haskell at work.,"Math / data analysis, Finance, Compilers / interpreters",Notepad++,C++,"no commercial support
poor support of windows",,F#
8/3/2010 20:34:24,5+ years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"EAI - ""enterprisy"" stuff, Network programming, Open source projects, RDBMS programming, Web development, Compilers / interpreters","vi, Command line REPL",Objective C,Still lots of libraries missing (or broken),,"Javascript, O'Caml, Ruby, Scala, Scheme, Agda"
8/3/2010 20:45:15,3 years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","I'm lobbying to have it ""endorsed"".","Graphics / art, Math / data analysis, Compilers / interpreters, nlp",Emacs / haskell-mode,Common Lisp,,,Common Lisp
8/3/2010 21:01:46,5+ years,I use it at work.,"I'm lobbying to have it ""endorsed"".","Math / data analysis, Open source projects","Emacs / haskell-mode, Command line REPL",C++,,,"O'Caml, Scala"
8/3/2010 21:02:24,5+ years,I use it at work.,"It's ""endorsed"" and used openly and proudly.","""NoSQL"" usage, EAI - ""enterprisy"" stuff, Finance",Emacs / haskell-mode,SML,"Lack of operational transparency (due to laziness)
Automagical/incomprehensible overload resolution (aka type classes) in combination with type inference and error messages
Ad-hoc type system for unboxed data ",,"F#, O'Caml"
8/3/2010 21:06:06,1 year,I use it at work.,"It's ""endorsed"" and used openly and proudly.","Math / data analysis, Finance",Emacs / haskell-mode,Java,,,Java
8/3/2010 21:42:54,1 year,I use it for my studies.,I don't use Haskell at work.,"Math / data analysis, System administration",vi,C,,,"F#, O'Caml, Python"
8/3/2010 21:49:09,1 year,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"Math / data analysis, Network programming, Web development, Compilers / interpreters",TextMate,Javascript,,,"O'Caml, Prolog, Scheme"
8/3/2010 22:43:22,Just started,"I'm just tinkering., I use it for my studies.",I don't use Haskell at work.,Open source projects,"vi, Command line REPL",C++,"That it is not as well known as C++, Java, ect.",,"Clojure, Common Lisp, Erlang, F#, Prolog, Scheme"
8/3/2010 23:33:27,Weeks,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,Graphics / art,xcode,Objective C,,,"C++, C#, Java, Objective C"
8/3/2010 23:55:08,Just started,I'm just tinkering.,I don't use Haskell at work.,,,Smalltalk,,,Smalltalk
8/4/2010 0:23:14,Weeks,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.","""Big Data"": Hadoop etc, Math / data analysis, Open source projects, Compilers / interpreters",Emacs / haskell-mode,Python,"I think all of the mystique around academic topics like monadic functors scares a lot of people off. Any PR push must focus on making these less mysterious or on playing up how ""I'm sure 'generators' sounded funky to you in Python too at first, but you get used to it""",,"C, Python, R"
8/4/2010 0:35:11,4 years,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies.",,"Gaming, Math / data analysis, Open source projects, Compilers / interpreters",vi,C++,,,Common Lisp
8/4/2010 0:54:52,Just started,I'm just tinkering.,I don't use Haskell at work.,Open source projects,vi,C,,,Clojure
8/4/2010 1:18:18,5+ years,"I use it for serious ""hobby"" projects.","I'm lobbying to have it ""endorsed"".","Math / data analysis, Open source projects, Finance, Compilers / interpreters",vi,C,,,mercury
8/4/2010 1:45:30,Weeks,I'm just tinkering.,I don't use Haskell at work.,Math / data analysis,"Emacs / haskell-mode, Gedit",C++,lack of development libraries for computer graphics.,,"C, C++, Python, Ruby"
8/4/2010 4:15:51,5+ years,"I use it for serious ""hobby"" projects.",,"Gaming, Open source projects, Compilers / interpreters","vi, Command line REPL",C++,"Performance overhead caused by representing data with pointers to thunks, and by lacking a handy way of in-place update.",,"C++, O'Caml, Ruby"
8/4/2010 4:16:37,Just started,I'm just tinkering.,I don't use Haskell at work.,learning,vi,Python,,,"Go, Lua, Python, Ruby"
8/4/2010 4:31:03,2 years,"I use it for serious ""hobby"" projects., I use it for my studies.","I'm lobbying to have it ""endorsed"".","EAI - ""enterprisy"" stuff, Gaming, Graphics / art, Open source projects, Web development","vi, Command line REPL, Vim haskell mode",C++,,,"Erlang, F#, Python, Ruby, Scala, Haskell2"
8/4/2010 5:16:05,Months,I'm just tinkering.,I don't use Haskell at work.,Graphics / art,Emacs / haskell-mode,C++,,,"Clojure, Erlang, F#, Scala"
8/4/2010 6:03:04,2 years,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it for my studies.",,"Math / data analysis, Compilers / interpreters","Emacs / haskell-mode, vi, Command line REPL",C++,Quality & coverage of libraries,"* I wish Haskell had a more expressive module system.
* I wish interfacing with OO-style libraries (i.e. C++ class libraries) was easier.  There's a big impedance mismatch.","O'Caml, Agda, Standard ML"
8/4/2010 6:06:16,Just started,I'm just tinkering.,"It's ""endorsed"" and used openly and proudly.","System administration, Web development","vi, Kate, Komodo",Javascript,I hope to know enough about it someday to answer this.,,Python
8/4/2010 7:08:06,,,,,,,,,
8/4/2010 7:42:45,Months,"I use it for my studies., I use it at work.",It's used secretly; I'd never be able to use it.,"Commercial products, Thick clients: GTK etc, Web development, Compilers / interpreters",vi,C++,"At my needs, I found not very robust web frameworks to use for commercial portals. Happstack has small documetation and offer very innovative way for persistence, but we have lot of existing  databases and 
But Yesod looks promising as complete solution, they offer persistence layer, web-widgets.
Also I've write GUI on wxHaskell, I think in this area need more documentation, samples and realize more wxWidgets features.
",,"C++, F#, O'Caml"
8/4/2010 8:17:26,1 year,"I'm just tinkering., I use it for serious ""hobby"" projects., I use it at work.","I'm lobbying to have it ""endorsed"".","""NoSQL"" usage, Math / data analysis, Network programming, Open source projects, System administration, Embedded, Compilers / interpreters","Emacs / haskell-mode, Command line REPL",C,"Documentation for most hackage packages are reference only--as a beginner this can be nearly impossible to figure out; if each package had some tutorial/howto style documentation with some simple examples, it would be extremely helpful. (hint, it would be nice if the hackage website supported doing this)

 It would be really nice to have some libraries that implemented erlang style programming. Not just message passing, but the ability to have supervisors and have threads that could detect and restart crashing threads.

Development would be faster and easier if ghci supported importing only specific functions as well as ""import as"".

There's a lot of practical stuff that's missing from libraries. As an example, the zlib and bzip modules have no iteratee support and don't have support for reading line-by-line (even though the underlying c library has such). There might be some buffering library that will layer in line-by-line, but it's not clear what that is. A google search shows that someone had a patch for an iteratee based zlib, but it got rejected because of purity and not wanting dependencies. Stuff like this makes it harder for those of us needing to crank out practical code to get real world stuff done. (Ideally these libraries could/should be implemented in pure haskell rather then wrapping c libraries.)


",,"Ada, C, Clojure, Common Lisp, Go, O'Caml, Python"
8/4/2010 8:36:59,Just started,I'm just tinkering.,I don't use Haskell at work.,,TextMate,C,,,"Python, R, Ruby"
8/4/2010 10:05:01,2 years,"I'm just tinkering., I use it for serious ""hobby"" projects.","It's ""endorsed"" and used openly and proudly.","Commercial products, Compilers / interpreters",Emacs / haskell-mode,C++,,,"Clojure, Common Lisp, O'Caml"
8/4/2010 10:25:03,Weeks,"I'm just tinkering., I use it for serious ""hobby"" projects.",,"Gaming, Network programming, Web development","vi, TextMate",C#,"approachability and finding quality libraries (there are a lot on hackage, but finding the awesome ones is hard).",,"Clojure, Scala"
8/4/2010 10:44:19,2 years,I use it at work.,"It's ""endorsed"" and used openly and proudly.","Commercial products, Gaming",vi,Python,"memory leaks, no type class aliases",,F#
8/4/2010 10:59:36,5+ years,"I use it for serious ""hobby"" projects., I use it at work.","I'm lobbying to have it ""endorsed"".","""NoSQL"" usage, Web development, Testing",Emacs / haskell-mode,Scheme,,,"Clojure, Erlang, F#, Python, Scala, Scheme"
8/4/2010 11:57:09,Just started,I'm just tinkering.,I don't use Haskell at work.,,"Leksah, Command line REPL",C#,,,F#
8/4/2010 12:01:21,Weeks,I'm just tinkering.,I don't use Haskell at work.,Math / data analysis,vi,Python,no small-ref (1 or 2 pages) for languages (ghc) pragmas,,Python
8/4/2010 12:46:07,5+ years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.","Commercial products, Commercial services, Open source projects, Thick clients: GTK etc, Web development, Compilers / interpreters","vi, nedit",delphi,"The standard libs that deal with OS interaction are showing their age, they do not quite strike the right balance in coverage vs portability. They are fairly portable but do not allow us to write some programs in a sensible way.

Records are also rather painful, just the inability to have different records have the same field names.",,O'Caml
8/4/2010 12:52:58,2 years,I'm just tinkering.,I don't use Haskell at work.,"Math / data analysis, Open source projects, Compilers / interpreters","Emacs / haskell-mode, vi, Command line REPL",C++,,,"Clojure, Common Lisp, O'Caml, Python, Scheme"
8/4/2010 13:46:59,1 year,"I use it for serious ""hobby"" projects., I use it for my studies.",I don't use Haskell at work.,"Gaming, Network programming, Open source projects, Thick clients: GTK etc, Web development, Compilers / interpreters","Emacs / haskell-mode, vi, yi, Gedit",Ruby,,,"C, C++, Python, vala"
8/4/2010 14:01:32,5+ years,"I use it for serious ""hobby"" projects., I use it at work.","It's ""endorsed"" and used openly and proudly.","Commercial products, Network programming, Open source projects, Web development","Emacs / haskell-mode, Scion",Java,"- No standard easy-to-install GUI library.
- Documentation of libraries and tools.
",,C#
8/4/2010 14:04:52,Weeks,I'm just tinkering.,I don't use Haskell at work.,Math / data analysis,vi,Perl,,,Common Lisp
8/4/2010 15:05:43,Months,I'm just tinkering.,I don't use Haskell at work.,Math / data analysis,"Leksah, Eclipse / EclispeFP, TextMate, Gedit",Java,The lack of a clear and commonly endorsed way of structuring programs.,,"Clojure, Erlang, F#, Ruby"
8/4/2010 15:18:25,Just started,"I'm just tinkering., I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"""Big Data"": Hadoop etc, Graphics / art, Math / data analysis, Network programming, Web development, Embedded, Compilers / interpreters","Leksah, Eclipse / EclispeFP, Notepad++, geany",C++,"Lack of documentation/tutorial for most packages. How to ""apply"" a function in the proper context can be difficult without a sample, example or tutorial. In Java it's pretty easy to know how to use an object. Like Prolog, Haskell's functions can be somehow hard to grasp.
Also, the multi-platform issue is a big stopper for me. I'm developing on Linux and Windows, maybe on Mac. Mac supports is simply broken, Haskell platform does not install. On Windows, many packages relying on C libraries simply do not work. On Linux, Ubuntu does not have official up to date packages.",We need to grow the community (or maybe communities). We need more introduction stuff for newbies. I'm talking tutorials on how to use this and that. Focus on attracting outsiders like OO people and get big experiment depth and publicity. Haskell should become the definite multi-core language. This will attract tons of people.,"Javascript, Perl, Prolog, Scala"
8/4/2010 16:20:19,5+ years,"I use it for serious ""hobby"" projects., I use it at work.","I'm lobbying to have it ""endorsed"".","Commercial products, Commercial services, EAI - ""enterprisy"" stuff, Math / data analysis, Network programming, Open source projects, System administration, Web development, Compilers / interpreters","Emacs / haskell-mode, Command line REPL",Python,Inability to stop import of instances whenever you import a module.,,"Clojure, Python, Scala"
8/4/2010 16:37:12,1 year,I'm just tinkering.,I don't use Haskell at work.,,vi,Ruby,It's unpopular.,"Haskell is easily my favorite language and I'd love to use it at work, but I work at a small web development agency. Rails, ASP.NET MVC and CakePHP are much better for the projects we work on.","Clojure, Erlang, F#, Python, Ruby, Scala"
8/4/2010 17:08:22,2 years,I use it at work.,It's used secretly; I'd never be able to use it.,"""Big Data"": Hadoop etc, Math / data analysis, Finance",Emacs / haskell-mode,Smalltalk,I have found getting good performance extra work because of laziness.  An easily turned on strict mode would be nice.  ,"I really like Haskell.  For me it feels like programming in a rigorous form of Smalltalk, the true OOP language (as Alan Kay has said, he invented the term OOP and C++ was not what he meant).  ","O'Caml, R, Smalltalk"
8/4/2010 18:06:06,5+ years,"I use it for serious ""hobby"" projects., I use it at work.","It's ""endorsed"" and used openly and proudly.","Graphics / art, Math / data analysis, Open source projects, Web development",nedit,Modula,"dependent types

It's often not possible to separate efficiency concerns from logical design.
",,Agda
8/4/2010 18:19:47,4 years,I'm just tinkering.,I don't use Haskell at work.,"Open source projects, Compilers / interpreters",Kate,Ruby,,,"Clojure, Scala"
8/4/2010 19:11:57,Just started,I'm just tinkering.,I don't use Haskell at work.,,vi,C++,,,
8/4/2010 19:12:30,5+ years,"I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.",Compilers / interpreters,Emacs / haskell-mode,Scheme,Default call-by-name behavior.,,Coq
8/4/2010 20:25:03,2 years,"I use it for serious ""hobby"" projects., I use it at work.","I'm lobbying to have it ""endorsed"".","""Big Data"": Hadoop etc, Math / data analysis, Open source projects","vi, Command line REPL",Perl,"Exception handling-- standard way needlessly in the IO monad, too many other ways to do it, no clear winner.",Haskell 4 eva!,Factor
8/4/2010 23:22:10,2 years,"I'm just tinkering., I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Network programming, Open source projects",vi,Python,"good, simple, web frameworks or more exactly the lack thereof",,"Clojure, Erlang, F#, Javascript, Prolog, Python, Scala"
8/4/2010 23:25:36,5+ years,"I use it for serious ""hobby"" projects., I use it at work.","It's ""endorsed"" and used openly and proudly.","Math / data analysis, Finance, Compilers / interpreters","vi, Command line REPL",C,"The lack of an ability to serialise a closure in such a way that it can be saved/transmitted, then restarted on the same or a different machine.",,"C, F#, O'Caml, Prolog"
8/4/2010 23:27:22,Just started,I'm just tinkering.,I don't use Haskell at work.,"""Big Data"": Hadoop etc, Math / data analysis","Command line REPL, TextMate",Javascript,,,"Clojure, Javascript"
8/5/2010 0:11:47,2 years,"I'm just tinkering., I use it for my studies.",,,"vi, Leksah, Command line REPL, Notepad++",Scheme,,,O'Caml
8/5/2010 1:46:23,5+ years,"I use it for serious ""hobby"" projects., I use it for my studies., I use it at work.","It's ""endorsed"" and used openly and proudly.","Open source projects, Web development, Compilers / interpreters, Program analysis, automated reasoning","Emacs / haskell-mode, vi, Command line REPL",Java,,,"F#, O'Caml, Scala"
8/5/2010 1:49:06,2 years,"I use it for serious ""hobby"" projects.",,"Gaming, Network programming, Open source projects, Web development",TextMate,C++,hackage is broken. on occasions the setup will break because of dependency issues,,Python
8/5/2010 3:39:19,3 years,"I'm just tinkering., I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Graphics / art, Math / data analysis, Open source projects, Web development","Leksah, Command line REPL, Gedit",Java,"so many extensions, so little documentation/standardization",best.language.eva.,Scala
8/5/2010 4:12:57,Just started,I'm just tinkering.,I don't use Haskell at work.,,"vi, Command line REPL",Scala,,,"Clojure, Common Lisp, Scala"
8/5/2010 4:34:45,Just started,I'm just tinkering.,I don't use Haskell at work.,Math / data analysis,Emacs / haskell-mode,C++,"The syntax is horrible -- it seems like that is too many operators.

I still have no found a comprehensible explanation of monads.  It seems bizarre that it appears to be so essential and powerful, but pretty much no other language has monads.",,Scala
8/5/2010 4:39:40,1 year,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,Embedded,Kate,C,"Readability, Mantainability

unknown imported identifiers are hard to relate  to the modules where they are defined when modules reexport other modules.",,"Ada, O'Caml, Scala"
8/5/2010 11:05:31,1 year,"I use it for serious ""hobby"" projects., I use it for my studies.",,Math / data analysis,TextMate,Scala,,,"Erlang, Scala"
8/5/2010 11:26:03,5+ years,I use it at work.,"I'm lobbying to have it ""endorsed"".","Commercial services, EAI - ""enterprisy"" stuff",Eclipse / EclispeFP,Eiffel,Data field value setting.,,"Erlang, Scala"
8/5/2010 12:20:51,2 years,"I'm just tinkering., I use it for my studies.",I don't use Haskell at work.,Compilers / interpreters,Emacs / haskell-mode,Scala,,,"C#, F#, O'Caml, Scala, Agda"
8/5/2010 12:54:30,5+ years,"I use it for serious ""hobby"" projects., I use it at work.","It's ""endorsed"" and used openly and proudly.","Open source projects, Compilers / interpreters","Emacs / haskell-mode, yi",Pascal,,,O'Caml
8/5/2010 15:23:08,4 years,"I use it for serious ""hobby"" projects., I use it for my studies.",,"Open source projects, Compilers / interpreters",vi,Java,I wish the module system were more powerful :(,,"O'Caml, Scala, SML"
8/5/2010 20:16:58,Months,I'm just tinkering.,I don't use Haskell at work.,"Math / data analysis, Open source projects, Web development","vi, Eclipse / EclispeFP",Java,,,"Clojure, Common Lisp, Erlang, F#, Smalltalk"
8/5/2010 22:01:27,2 years,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,,Kate,Python,"Lot's of teaching material for the mathematically trained, less for the non-computer-guru. Maybe because it's the gurus that like using it.

Bad documentation for GUIs - I used gtk2hs and the mailing list deals mainly with problems of the implementation where it should deal with programming GUI with gtk2hs, right? Usage changed when a new version of ghc appeared and I could not find any documentation on that und unsage was not completely identical between Linux and Windows and so on.

So basically: Better documentation for GUI programming.",Steepest learning curve I came across in my life - haskell beginner mailing list is great!,"Clojure, Python, R, Smalltalk"
8/6/2010 0:08:08,Months,"I'm just tinkering., I use it for my studies.","I'm lobbying to have it ""endorsed"".",Math / data analysis,"vi, Notepad++",Java,A good IDE,,"Java, Prolog"
8/6/2010 2:49:52,Months,"I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Gaming, Graphics / art, Open source projects, Compilers / interpreters",Notepad++,C#,Performance is unpredictable,,"F#, Prolog"
8/6/2010 4:14:19,4 years,"I use it for serious ""hobby"" projects.","I'm lobbying to have it ""endorsed"".","""Big Data"": Hadoop etc, ""NoSQL"" usage, Network programming, Open source projects","Command line REPL, Gedit",Smalltalk,,,none
8/6/2010 9:07:12,Months,I'm just tinkering.,I don't use Haskell at work.,"Math / data analysis, Natural Language Processing",Emacs / haskell-mode,C++,"I think the first and foremost weakness is lack of Industry acceptance. This makes it less acceptable to use Haskell for work, and implies that less tools are available.

The other problem is that there are not so many hands-on introductory books.",,"C++, Prolog, Ruby, Scala"
8/6/2010 10:21:38,Just started,I'm just tinkering.,I don't use Haskell at work.,,Emacs / haskell-mode,Java,,,O'Caml
8/6/2010 18:17:22,Weeks,I'm just tinkering.,I don't use Haskell at work.,"Commercial services, Thick clients: GTK etc",Notepad++,Python,"Haskell doesn't have a transparent way to work with encoding and non-ascii symbols on windows. There're 3 libraries that should help with it. One doesn;t compile on windows at all, second can be compiled, but crashes with linking error, third one uses iconv and that's really bad.

I was very excited about Haskell, but after facing encoding problem I turn back to python, because I don't want to spend a week to figure out how to do this simple thing.

Another problem is that the most mature GUI library for Haskell (hgtk) doesn't compile on windows too. That means that there's no simple way to develop application rapidly.","Haskell is really awesome, but it needs to have mature libraries suited for real world tasks as well.","C++, C#, F#"
8/6/2010 18:50:18,3 years,"I'm just tinkering., I use it for serious ""hobby"" projects.",I don't use Haskell at work.,"Network programming, Open source projects, Web development, Finance","Emacs / haskell-mode, Command line REPL",Python,Too few books,,"Clojure, Common Lisp, Erlang, O'Caml, Python"
8/6/2010 22:43:13,5+ years,I use it at work.,"It's ""endorsed"" and used openly and proudly.","Commercial products, Commercial services, Compilers / interpreters",Emacs / haskell-mode,C++,"The volume of libraries has increased dramatically,  but it is unclear  on which are ""stable"" and can be used in a commercial product development setting, versus those that are experimental without support.

The sparks/threads development looks very promising to support multi-cores, but before jumping into this foray I would like to have faith that sparks are a long-term solution and not another experimental step.  ",,"C++, F#, Java"
8/6/2010 22:54:10,Weeks,I'm just tinkering.,I don't use Haskell at work.,Open source projects,Emacs / haskell-mode,Java,,,Scala
8/7/2010 2:52:51,Just started,I'm just tinkering.,,Math / data analysis,"vi, Command line REPL",Python,Numerical libraries ala scipy/numpy in the python world.,Great idea for the survey!,"F#, Go, Python, Scala"